(in-package :morphix)

(insert-subcat-entry (car (morphix-read "aas")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abalienier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abandonnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbeer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbeiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbekomm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abberuf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abberuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbettel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbezahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbitt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abblass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abblatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abblend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abblend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abblitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abblätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abblüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abborg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abborg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbraus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbrech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbrems")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbrems")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbreviier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abbreviier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbreviier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abbreviier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbrumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbrumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbröckel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbröckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abbrüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbösch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbürst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abbüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abdampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abdank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abdarb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdeck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abdeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abding")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abding")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abdreh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abdreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdreh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abdresch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdrossel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdrossel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdrück")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdrück")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abduzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abduzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abdämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abdämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abenteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfahr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfahr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "abfall")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "abfall")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "abfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfaser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfaser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfaul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfeder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfeg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfeier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeilsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeilsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfertig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfertig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfeuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfieber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfind")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfind")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abfind")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abfind")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abfisch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abfisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abfisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abflach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abflach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abflansch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abflansch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abflau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfleisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abflieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abflieg")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abflucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abforder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abform")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "abform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abform")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "abform")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abforst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfress")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfrier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfräs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfälsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfärb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abfärb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "abfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "abfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfüll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "abfüll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "abfüll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfütter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abfütter")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abfütter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abgauner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgauner")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgeb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abgelt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "abgelt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgewinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgewinn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgewöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgewöhn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgleich")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abgleich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abgleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abglitsch")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abglitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abglätt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgrab")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgras")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abgrenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abgräm")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "abgräm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abgrätsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abguck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abguck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhak")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhalfter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhals")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhalt")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abhandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhandel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhaspel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abhaspel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhau")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "abhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "abhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abhetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abhobel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abholz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abholz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abhorch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abhorch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abhorch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhorch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abhorch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abhorch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhorreszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhärm")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "abhäut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abhör")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abirr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abjag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abjudizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abjudizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abjurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkant")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkanzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkapitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkapsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkapsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abkarg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkettel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abklapper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklaub")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abklaub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abklaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklemm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abklingel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abklär")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abklär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abklär")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abknabber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknapp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknaps")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknaps")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknaupel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abknaupel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkneif")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abkneif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abknips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknutsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknöpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abknöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknöpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abknöpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abknüpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abkomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abkommandier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkonterfei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abkratz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abkratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkratz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkratz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abkrieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abkühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abkürz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "abkürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abküss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abküss")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ablass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ablass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ablass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ablaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablausch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablaut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ableck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ableck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ableck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableck")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ableck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ableder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ablehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablehn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ablehn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ablehn")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ableier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ableit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ablenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablenk")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ablenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ables")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ables")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableucht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ableucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableucht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ableugn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablieg")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ablieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ablins")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abloch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablock")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablohn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ablohn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ablohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abläng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abläut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablös")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablös")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ablös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ablösch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ablöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abmach")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abmager")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abmager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abmal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abmarkt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmarschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abmeier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmeier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmeißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmeld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmeld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abmess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmontier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abmontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmurks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmuster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmuster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abmäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abmüh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "abmüh")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "abmüh")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "abmüh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abmüh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abmüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abnag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "abnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abniet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abnäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnötig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnötig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abnütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abonnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abordn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "abordn")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "abordn")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "abordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abortier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abpatrouillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abpfeif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abpfeif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abpflück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abpfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abplack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abplag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abplatz")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "abplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abprall")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "abprall")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abprall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abpress")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abprotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abprotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abprüf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abputz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abquetsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abquäl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abracker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abrahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrasier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrat")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abrat")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "abrat")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abreagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrechn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abrechn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abreg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abricht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abricht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "abricht")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "abricht")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "abricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abriegel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abriegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abriffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abruder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abruder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abrupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrutsch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "abrutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abräum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abrüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absattel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "vor") ) )
(insert-subcat-entry (car (morphix-read "abschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschalt")) :v '( (:np . :nom) (:pp :akk "vor") ) )
(insert-subcat-entry (car (morphix-read "abschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abscheid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abscheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abscheitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschelfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abscheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abscheuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschiefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschilfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschind")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abschind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschirm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschirm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "abschirm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschirm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschirm")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "abschirm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschlacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschlack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschlag")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschleuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschleuder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschließ")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschlämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmatz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmeichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmeichel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschmier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschmink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschmirgel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschnall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschnall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschnapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschneid")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschnell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschnell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschnür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschrank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschraub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschrot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschröpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschuft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschwart")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwatz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwenk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwenk")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschwindel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwäch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwäch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschwör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschwör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschäl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschäl")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "abschäl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abschäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschöpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abschöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschürf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abschüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abseh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abseh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abseh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abseh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abseif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abseiger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abseil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abseil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abseim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abseng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "absetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "absicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absitz")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "absitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absolvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absonder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absonder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absorbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abspalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspar")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspeicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspeicher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspeis")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abspeis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspiegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absplitter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "absplitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absplitter")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "absplitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "absprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "absprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspreiz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abspreiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspreng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspring")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abspritz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspän")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abspän")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abspül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstamm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abstamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstech")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "abstech")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abstech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absteh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "absteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "absteif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstempel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "abstempel")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "abstempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstempel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absterb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstill")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:pp :akk "ueber") (pp dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstrahier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abstrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abstrahier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abstrahier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abstäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abszedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abszedier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abszindier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absäbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absäbel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absäug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "absäugel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtrenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abtrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtret")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abtret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtret")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtret")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abtret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtrief")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrockn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abtrockn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrockn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtrotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrotz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtrudel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "abtrudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtrumpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abträufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abträufel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtröpfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abtu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abtu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abtöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aburteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abverdien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abverlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abvermiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwandel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "abwandel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "abwandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwandel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "abwandel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "abwandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwart")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwart")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abwart")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abwart")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abwart")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "abwart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwechsel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "abwechsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abwehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abweid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwelk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwerb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abwerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwieg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwink")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwinkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwirtschaft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwisch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwisch")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abwisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwrack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwälz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abwälz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abwälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwärtsführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abwärtsgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abwürg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzapf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzapf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abzeichn")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abziel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "abziel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abzirkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzwack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzwack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzweig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzweig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzweig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abzwick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzwing")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abzähl")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "abzähl")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "abzähl")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "abzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abzäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abänder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "abänder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "abängstig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "acetylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "acetylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "acht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "achtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "achtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "achtgeb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "achtgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "achthab")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "achthab")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "achthab")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "achthab")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "achthab")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "achthab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "acker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "acrylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "acrylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "acrylmodifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "acylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "acylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "adaptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adaptier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "addier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "addier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "addizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "addizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adhärier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adhärier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adhärier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "adjudizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adjudizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adjustier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "administrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "admonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "admonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "adoptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adressier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "adressier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adsorbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adstringier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "adstringier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "affektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "affichier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affilier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affilier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "affinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affirmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affirmier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affrontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "affrontier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "agglomerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "agglomerier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "agglomerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "agglutinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "agglutinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aggregier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aggregier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "agier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "agiotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "agitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "agnoszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "agreier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "agrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "agrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ahm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ahn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ahn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ahn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "akklamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "akklimatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "akkumulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "akkumulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aktivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aktualisier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "aktualisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "akzeptier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "akzeptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "akzeptier")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "akzeptier")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "akzeptier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "akzeptier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "alber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alfanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alienier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alignier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alignier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alimentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alineier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alkoholisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alkylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "allegier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "allegier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "allegorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alliier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "alliier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alliterier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alphabetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alterier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "alterier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "alterier")) :v '( (:np . :nom) (:pp :akk "mit") ) )
(insert-subcat-entry (car (morphix-read "alterier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "alterier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "alternier")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "alternier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "altertümel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "altfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "amalgamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ameliorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amerikanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "amorphisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amorphisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "amortisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "amplifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amputier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amputier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "amtier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "amüsier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "amüsier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "amüsier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "analysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "analysier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "analysier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anathematisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anatomier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbandel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anbandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbau")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbeiß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anbeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbelang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbequem")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anbequem")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anberaum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbetreff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anbiet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anblaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anblatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anblick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anblinzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anblitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbrass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrenn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbrüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anbrüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anbändel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anbändel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "andampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "andau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "andeut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andeut")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andeut")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "andeut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "andicht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "andicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andicht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andien")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andien")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "andien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "andreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "androh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "androh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "andruck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "andrück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "andrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aneck")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "aneck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aneifer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aneifer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aneign")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aneinanderfüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aneinanderfüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aneinandergrenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aneinanderkoppel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aneinanderkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aneinanderstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anekel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anempfehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anempfehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anempfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anerbiet")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anerbiet")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anerbiet")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anerbiet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anerkenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anerzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfang")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anfang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfass")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anfass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfaul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfeind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfertig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfeucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfeucht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfeuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anflansch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anflansch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfleh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "anfleh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anflick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "anflick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfrag")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "anfrag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anfrag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anfrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfreund")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anfreund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfrisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfunk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfunk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anfüg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anfüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anfüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anführ")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "anführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anführ")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anführ")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anführ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anführ")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "angeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "angedeih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angedeih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angeh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "angeh")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "angeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angeh")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "angeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "angel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "angel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "angelob")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angewöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angleich")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "angleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angleich")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "angleich")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "angleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anglieder")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anglisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anglotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angondel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "angreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "angrenz")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "angrenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "angrins")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angrins")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angrobs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angrobs")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anguck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angurt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "angurt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "angurt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "angurt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhab")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhaft")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anhaft")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anhaft")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anhaft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhalfter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anhang")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anhang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anhau")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "anhau")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anhau")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:pp :akk "um") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anheft")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anheft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anheimel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheimfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anheimfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anheimstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheimstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anheimstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anheimstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anheimstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anherrsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheuer")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anheuer")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anheuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anhimmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhäger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anhäuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anhäuf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "animalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "animier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "animier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankeil")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ankeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankeil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ankeil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklammer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankleb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anklemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklemm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankling")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "ankling")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklingel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "anklingel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anklopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anknips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anknöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anknüpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anknüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anknüpf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anknüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ankomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankontrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankontrahier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankoppel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "ankoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankrall")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ankrall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankrall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankreid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankreid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankreuz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankreuz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankränkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankränkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ankuppel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "ankuppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankurbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankämpf")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "ankämpf")) :v '( (:np . :nom) (:pp :akk "wider") ) )
(insert-subcat-entry (car (morphix-read "ankämpf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ankämpf")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ankämpf")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anköder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankörn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ankörn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankündig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankündig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ankündig")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ankündig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anland")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anland")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlaut")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anlaut")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anlaut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anleim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlern")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlern")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anlern")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anluv")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anlächel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anläut")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "anläut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anläut")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "anläut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anlöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anmarschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anmeld")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "anmeld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmeld")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "anmeld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anmerk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anmerk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmerk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anmerk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmess")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmontier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "anmontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmuster")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "anmuster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmuster")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "anmuster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anmut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmut")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anmut")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "annadel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annehm")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "annehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annehm")) :v '( (:np . :nom) (:np . :gen) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "annehm")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "annehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "annehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "annektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anniet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annihilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annoncier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annoncier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "annotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annullier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "annäher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anodisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anonymisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpack")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "anpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpack")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "anpack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpaddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpfeif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpfeif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpflaum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpflaum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpflock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpflöck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpfropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpfropf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpinsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpirsch")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anpirsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpolter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anprall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpranger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpranger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anprei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anpreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpress")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpress")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anpress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anprobier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anprobier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anpump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpunkt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpöbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anpöbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anquell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anranz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrat")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrat")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anrat")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrauh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anred")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anred")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anreg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreicher")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anreicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreih")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anreih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreih")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anreih")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anreih")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrenn")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anruder")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anruder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anräucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anrühr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ansag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansam")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschaff")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschein")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anschein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschein")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anscheiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschick")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anschick")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschleich")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschlämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschmied")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschmied")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschmied")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anschmieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschmieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschmieg")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschmieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschmier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschnall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschnauz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschnauz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "anschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "anschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschuh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschuldig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschweig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschweig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwell")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anschwell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschwemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwindel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschwänz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anschwärz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "anschwärz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschäft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anschür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anseil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anseil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anseng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansetz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ansetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansiedel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansiedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansing")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "ansing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspeiler")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspiel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspinn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspinn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anspinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansporn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ansporn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ansprech")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspring")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anspuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstachel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anstachel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstachel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anstachel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstarr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstaun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansteck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ansteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansteh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ansteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstell")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstemm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anstemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstemm")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anstemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstift")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "anstift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstink")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anstink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstopf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anstopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstopf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anstopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstreb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstreb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstreng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anstreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstrick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansträng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anstück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstückel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anstürm")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "anstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ansuch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ansuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansä")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansäuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ansäusel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antakt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antanz")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "antanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antedatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antelephonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antestier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antichambrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antikisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antiquier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antiquier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antizipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antrab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antrau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antrau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antreff")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "antreff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "antreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antreib")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "antreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "antrink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "antwort")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anulk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anvertrau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anvertrau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anvertrau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anvertrau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anvertrau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "anvetter")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "anvetter")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anvetter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anwandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anweh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anweh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "anwerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anwerf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "anwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anwetter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anwider")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anwohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anwurzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anwähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzapf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzauber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "anzweifel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anzünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anähnel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anästhesier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anöd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "anöd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "apokopier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "apostrophier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "appellier")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "appellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "apperzipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "applanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "applanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "applaudier")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "applaudier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "applaudier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "applaudier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "applaudier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "applaudier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "applizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "apportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "apportier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "appretier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "approbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "approximier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "approximier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aptier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aquarellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "arbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "archaisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "archivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "argumentier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "argumentier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "argumentier")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "argumentier")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "argumentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "armier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aromatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arpeggier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arrangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arrangier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "arrangier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "arretier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "arrivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "arrondier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "artikulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "artikulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "asphaltier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aspirier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aspirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assekurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assekurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assentier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "assentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "asserier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "asserier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "asserier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assignier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assignier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assilbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assilbier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assimilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assimilier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assistier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "assistier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "assistier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "assistier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assortier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "assortier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assoziier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "assoziier")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "assoziier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "assoziier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "assumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "assumier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aszendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "atm")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "atm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "atomisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "attachier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "attachier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "attachier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "attestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "attestier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "attrappier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "attrappier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufatm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbaum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbausch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufbausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbegehr")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufbegehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbereit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbesser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbewahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbewahr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbiet")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufblick")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufblock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufblock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbläh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbläh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufblätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufblüh")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "aufblüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbohr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrumm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbrumm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufbrumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbrüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbäum")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "aufbäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufbügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbürd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbürd")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbürd")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufbürd")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufbürst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufbürst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufdeck")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufdonner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdreh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdriesel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdriesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdräng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdräng")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufdräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdrösel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdrück")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufdämm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufdämmer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufdämmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderfolg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderhetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderhetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderhäuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderhäuf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderprall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinanderstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufeinandertreff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufenter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufenter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auferleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auferleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufersteh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "aufersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auferweck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "auferweck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffahr")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "auffahr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "auffahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffall")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "auffall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "auffall")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "auffall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffass")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auffass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffass")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auffass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufflacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufflamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufflansch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufflansch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufflatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufforder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufforder")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufforder")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufforst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufforst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffrisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffrisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffächer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffädel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "auffädel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffärb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffärb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufführ")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "aufführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auffüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auffütter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufgabel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufgeb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufgeh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufgeh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufgeh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufgeh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufgei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufgleis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufglieder")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "aufglieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufglimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufglüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufgrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufgreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhals")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhals")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhark")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhark")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufheft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufheft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufheiter")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "aufheiter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufheiter")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "aufheiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufhell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufhetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhorch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhäng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "aufhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhäng")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "aufhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufhäuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufhör")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufhör")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufhör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufjauchz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufjubel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkeim")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufkeim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufklar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufklar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufklaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkleb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufklink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufklär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufknack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufknot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufknöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufknöpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufknüpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "aufknüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufknüpf")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "aufknüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkomm")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aufkomm")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkomm")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufkon")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkon")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkon")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkratz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkratz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkreisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkrempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkämm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufkündig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufkündig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflad")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflaminier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "auflaminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflaminier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "auflaminier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflaminier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "auflaminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflast")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflauer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "auflauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflauf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auflauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflauf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auflauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufleg")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflehn")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "auflehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufleim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufleim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufleucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflicht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "auflicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflicht")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "auflicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflocker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflocker")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflocker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufloder")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufloder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufluv")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufluv")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auflös")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "auflös")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "auflös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auflös")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "auflös")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "auflös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufmeißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufmerk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufmerk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufmuck")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufmuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufmunter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufmöbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufmöbel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufnagel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufnagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufnagel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufnagel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufnestel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufniet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufniet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufnotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufnotier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufnotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufnäh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufnäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufopfer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aufopfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufopfer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufopfer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufopfer")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aufopfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpeitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpflanz")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "aufpfropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpfropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpluster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpluster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufplätt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "aufplätt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufplätt")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "aufplätt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpolster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpolster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufprall")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufprall")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "aufprall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufprobier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufprotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufprotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpräg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufpump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufputsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufputsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufputz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufpäppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufquell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufraff")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufraff")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufraff")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufraff")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufraff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrappel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufrappel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufrauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrauh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufred")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreg")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "aufreg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufreih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufreiz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufreiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufriegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufriegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufruf")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufrund")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufrund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufrund")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufrund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufräum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrühr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufrüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufrüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufrüttel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "aufrüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "aufsag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "aufsag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsattel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsattel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufscharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufscharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschau")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschaufel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufscheuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufscheuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschicht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufschicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschieß")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "aufschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschließ")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschlitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschlitz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschluchz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschlämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschlüssel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschmeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschnall")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufschnall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschnall")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufschnall")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschnapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufschneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschnell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschwatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschwatz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschwell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschwell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschwemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschwemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschärf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufschürf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufschüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsetz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufseufz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsitz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspar")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aufspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspeicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspeicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspiel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsprenkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsprenkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspring")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "aufspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspross")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspross")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsprudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspül")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufspünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufspür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstampf")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "aufstampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstapel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsteck")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufsteh")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsteig")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsteuer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsteuer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsteuer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufsteuer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufsteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstift")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufstift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstift")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufstift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstoß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstreb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstreu")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstreu")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "aufstreu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstöber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufstöpsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "aufstör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstülp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstülp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufstütz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufsuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftakel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftakel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftrag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "auftrag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "auftrag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "auftrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftreff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftret")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "auftret")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auftret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftrockn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftrockn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftrumpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufträufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufträufel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auftu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftürm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auftürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwach")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "aufwach")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "aufwach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufweck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufweich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufweich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwend")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aufwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwerf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwiegel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aufwiegel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufwiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwind")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aufwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwirbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwirbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwog")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufwärm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "aufwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufwühl")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufwühl")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufwühl")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufwühl")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aufwühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufzehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzehr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufzehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aufzeig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aufzieh")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "aufzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufzupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufzwing")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzwing")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aufzwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aufzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufzäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aufäst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "augmentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "augmentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auktionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:pp :akk "in") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:pp :akk "in") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:pp :dat "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '( (:pp :dat "zu") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausart")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausatm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausatm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausback")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbagger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbalancier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbalancier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbaldower")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbeding")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbeding")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ausbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbesser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbeul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbeul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbeutel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausbeutel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbezahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbezahl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbezahl")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ausbezahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbild")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "ausbild")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausbild")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ausbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbild")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ausbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbitt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbitt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausbitt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausblend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausblend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausblick")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ausblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausblut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbog")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausboj")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbomb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausboot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausborg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausborg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbrech")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbreit")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ausbreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbrüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbuchs")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausbuchs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbuchs")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausbuchs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausbuddel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbürger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbürst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausbüx")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdenk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausdenk")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ausdenk")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausdeut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdorr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdreh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdresch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdresch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdruck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdrück")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausdrück")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ausdrück")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ausdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdunst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdunst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausdünn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausdünn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderbreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderbreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderfahr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "auseinanderfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderfahr")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "auseinanderfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderfalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderfalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderklamüser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderklamüser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinandernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinandersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinandersetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinandersetz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auseinandersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderstieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderstreb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinandertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinandertreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auseinanderzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auseinanderzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auserseh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auserseh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auserseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auserwähl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auserwähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auserwähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfalz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfaser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfeder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfeg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausfeg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfertig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfilter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausflagg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausflagg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausflick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausflick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausflock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausflucht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausflucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausflucht")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausflucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfolg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausformulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausforsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ausfrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfrans")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfrans")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausfug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfädel")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausfädel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausführ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausführ")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ausführ")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ausfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausfütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "ausgeb")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ausgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgeb")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "ausgeb")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ausgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ausgeh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausgeh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausgeh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ausgeh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ausgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausgestalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausgestalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausglas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausglas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausgleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausgleit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ausgleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausglieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausglieder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausglimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausglitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausglüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausglüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausgrab")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausgrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausgrät")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausgrät")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushalt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aushalt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aushalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushandel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aushandel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aushandel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ausharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausheck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausheil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausheil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushol")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "aushol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushol")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aushol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausholz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushorch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "aushorch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushunger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushunger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushust")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushändig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "aushändig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushändig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "aushändig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aushöhl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushüls")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aushüls")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausix")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausjät")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskapitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskapitel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskapitel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskegel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskelter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskelter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auskleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskleb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auskleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausklingel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklingel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausklink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklips")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausklips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklips")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausklips")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausklopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausklämm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausklügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskneif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausknips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausknobel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausknock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskoffer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskolk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskolk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auskomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskram")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskratz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskratz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskugel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskugel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskultier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskundschaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskuppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskuppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskämpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auskämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskämpf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auskämpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskörn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auskörn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auskühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslad")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "auslad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslager")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "auslager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslang")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auslang")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auslang")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auslang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslass")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "auslass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslauf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "auslauf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslaut")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "auslaut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausleb")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ausleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausleih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausleucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausliefer")) :v '( (:np . :akk) (:pp :akk "an") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausliefer")) :v '( (:np . :dat) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausliefer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "ausliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausliefer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausliefer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausloch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausloch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslogier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslos")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "auslos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslug")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "auslug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausläut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausläut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auslöffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslösch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "auslösch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslüft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auslüft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausmach")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausmach")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausmahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmal")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausmauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmauser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausmeißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmelk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmelk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausmergel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmerz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausmittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmuster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausmünd")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "ausmünd")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausmünz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausmünz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausnag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausnag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ausnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausnütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausnütz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausnütz")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ausnütz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "auspack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspeitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspeitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspfarr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspfarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspfeif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspfeif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspichel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausplatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausplauder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausplätt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausplätt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausplünder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspolster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausposaun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspower")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspress")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausprobier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspräg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "auspräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspräg")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "auspräg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auspump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspump")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspunkt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auspust")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausputz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausquartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausquatsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausquatsch")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausquatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausquetsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausradier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausras")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrasier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausred")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausred")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausregel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausregel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausregn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreich")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "ausreich")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausreif")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "ausreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausreiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreiß")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausreut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausricht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ausricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausricht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ausricht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrod")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausruh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausruh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausruh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrupf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrutsch")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "ausrutsch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ausrutsch")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "ausrutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausräuber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausräucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrück")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausrüst")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausrüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausrüst")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausrüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aussag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussalz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussaug")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschalm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausscharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausscharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschau")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ausschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschaufel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschelt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausscheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausscheuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ausschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschiff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschlacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschlaf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschlaf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausschlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschleuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ausschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschließ")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausschließ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschlämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschlüpf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausschlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschlürf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschmück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausschmück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschnapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschnaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschnauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschneuz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschneuz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschnüffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschnüffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschrot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschrot")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschuh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschwatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschwatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschwefel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschweif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschweif")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "ausschweif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschweig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ausschweig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschwemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschwenk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschwitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschütt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschütt")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ausschütt")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ausschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausschüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausschüttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausseh")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ausseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ausseih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausseih")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "aussetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussetz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "aussetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussiedel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussonder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussortier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspann")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ausspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspann")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussperr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "aussprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspreiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspreiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspritz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspritz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausspritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussprüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausspuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspäh")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ausspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstaffier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausstaffier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstatt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausstatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausstatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussteh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "aussteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussteif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussterb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstocher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstocher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausstopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstrahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausström")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausström")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ausström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausstülp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausstülp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aussuch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "aussuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussuch")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "aussuch")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "aussuch")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "aussä")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aussöhn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "aussöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austapezier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "austausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austausch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "austausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austenitisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austenitisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austief")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austief")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austilg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austob")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "austob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austonn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austonn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "austrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austrauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "austreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austret")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "austret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austret")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "austret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austrink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austrink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austrockn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austrockn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austrommel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austrommel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austrompet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austräum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austäfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "austäfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "austüftel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausufer")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "ausufer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausverkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswachs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswalk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswalk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "auswasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswechsel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "auswechsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswechsel")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "auswechsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausweich")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "ausweich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausweid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausweis")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ausweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausweis")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ausweis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausweit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausweit")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ausweit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ausweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auswerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswinkel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auswinkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswinkel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "auswinkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswinter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswirk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auswirk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswirk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "auswirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswirk")) :v '( (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "auswirk")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "auswisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswisch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswäg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "auswäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswähl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auswähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "auswähl")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auswähl")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "auswähl")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auswähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auswärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswölb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auswüt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "auszeichn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "auszieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszieh")) :v '( (:np . :nom) (:np . :gen) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "auszieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszirkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "auszupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszupf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "auszähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ausüb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "autel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "authentifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "authentisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "autographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "autographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "autolysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "autolysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "automatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "autorisier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "autorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "avalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "avancier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "avancier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "aversionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "aversionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "avertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "avertier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "avertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "avisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "avisier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "babbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bad")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "bad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bad")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "bad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bagatellisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bagger")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bagger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bagger")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bagger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bahn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bahn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bahn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bajonettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bajonettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "balancier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "balancier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "balancier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "balancier")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "balancier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "balbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "balg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "balg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ball")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ball")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "baller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "baller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ballotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "balsamier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "balsamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "balz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bammel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "banalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "banalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bandagier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "banderolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "banderolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bang")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bankettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bankrottier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "barattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "barattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "barbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "barm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "barm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "baronisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "baronisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "barrikadier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "basier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "basier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bastardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bastel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bastel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bastionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bastionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "batik")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "batik")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bauchred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "baum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "baum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "baumel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "baumel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bauspar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beabsichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beacht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beacht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beacht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beanspruch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beanstand")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beanstand")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beantrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "beantrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beantrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beantrag")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beantrag")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beantrag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beantwort")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beantwort")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bearbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beatifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beatm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beauflag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beauflag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beauflag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beauflag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beaufschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beaufsichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beauftrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beauftrag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beauftrag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "beauftrag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "beauftrag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beauftrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beaugenscheinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beb")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "beb")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "beb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bebak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bebau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bebber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bebilder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bebilder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bebrüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bebänder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "becher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "becirc")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "becirc")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beckmesser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedank")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bedank")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "bedank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedauer")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedeck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedeck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedenk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedenk")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :akk) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :akk) (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :dat) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :dat) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedeut")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bedien")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedien")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "bedien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedorn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedroh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedroh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedräng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bedräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedräu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedrück")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bedrück")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bedrück")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bedrück")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bedrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedünk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bedürf")) :v '( (:np . :nom) (:np . :gen) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bedürf")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "bedürf")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bedürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bedüs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beehr")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beeid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beeidig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beeil")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beeindruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beeinfluss")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beeinfluss")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "beeinfluss")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beeinfluss")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beeinfluss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beeinträchtig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "beeinträchtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beelend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beendig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beeng")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beeng")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beeng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beeng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beerdig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befahr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befass")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "befass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "befass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "befehd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befehl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "befehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "befehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befehl")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "befehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befeind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befeind")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befeind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befestig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "befestig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "befestig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befestig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befeucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befeucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befeuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "befind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befinger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beflagg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beflamm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befleck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beflegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befleiß")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "befleißig")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "beflock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beflut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beflügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beforst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befracht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befracht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "befrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befrag")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "befrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befrei")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "befrei")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "befrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befrei")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "befrei")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "befrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befremd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befreund")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befreund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befried")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befriedig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befrist")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "befrist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befrucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "befug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befummel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befähig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "befähig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beförder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beförder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beförster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "befüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "befüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befürcht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "befürwort")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begatt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begauner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begeb")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "begegn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "begegn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begeifer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begeifer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begeister")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "begeister")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "begeister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begeister")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "begeister")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beglas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beglaubig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beglück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beglück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beglückwünsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beglückwünsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begnad")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "begnad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begnadig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "begnadig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begnüg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "begnüg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "begnüg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "begnüg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "begnüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begradig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begreif")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "begreif")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "begreif")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "begreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begrenz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "begrenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begrün")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begrün")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begründ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "begrüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begrüß")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "begrüß")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "begrüß")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beguck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beguck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begutacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begönner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begünstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "begütig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behaar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "behab")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "behab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "behack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "behag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "behalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behalt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "behalt")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "behalt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "behandel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "behandel")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "behandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beharr")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "beharr")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "beharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "behau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behaupt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behaupt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "behaupt")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "behaupt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behelf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "behelf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "behelf")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "behelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "behellig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "behellig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beherberg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beherrsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beherrsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beherzig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behex")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behinder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "behinder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "behinder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behobel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behorch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behäng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "behäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "behäng")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "behäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "behüt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "behüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beibehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beibehalt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beibehalt")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beibehalt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beibring")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beicht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beidreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beifall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beifolg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beifüg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beifüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beifüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beifüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beigeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beigeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beigeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beigesell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beigesell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beigesell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beigesell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beihol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beikomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beikomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beilad")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beilad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beileg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beileg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beileg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beilieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beilieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beimeng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beimeng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beimess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beimess")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beimisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beimisch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beimpf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "beimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beinhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beinhalt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beinhalt")) :v '((:subclause . "dass") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beinhalt")) :v '((:subclause . "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beiordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beiordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beipack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beipack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beipflicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beischließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beischließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beischreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beiseiteleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beisetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beisetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beisitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beispring")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beispring")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beispring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beisteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beisteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beisteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beisteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beisteuer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beisteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beistimm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beistimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beitrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "beitrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beitrag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beitrag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beitrag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beitreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beitret")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beitret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beiwohn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beiwohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beiz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "beiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beiz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "beiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beizieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beizähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beizähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beiß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "beiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beiß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "beiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bejah")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bejammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bejubel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bekanntgeb")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bekanntmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bekanntwerd")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekanntwerd")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bekanntwerd")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bekanntwerd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekant")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bekehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bekenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beklatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bekleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beklecker")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beklecker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beklecker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beklecker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beklecks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekleister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beklemm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "beklemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beklopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekneip")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bekoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekomm")) :v '( (:np . :nom) (:np . :akk) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "bekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekomm")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "bekomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bekreuz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekreuzig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bekrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekrieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bekrittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekräftig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "bekräftig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekränz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekrön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bekämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beköstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekümmer")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bekümmer")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bekümmer")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bekümmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bekümmer")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bekümmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belad")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "belass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:pp :dat "mit") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belauf")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "belausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beleck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belehn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belehr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "belehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beleidig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "beleidig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beleidig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beleih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belemmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beleucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beleucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belieb")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "belieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belieb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "belieb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beliefer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belob")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "belob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belobig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "belobig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belohn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belustig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "belächel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belämmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belästig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "belästig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "belästig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belüft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "belüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemal")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bemann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemeister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemeister")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "bemerk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemess")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "bemess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemess")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "bemitleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemogel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemuster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemutter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemächtig")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "bemängel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemäntel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemörtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bemüh")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bemüh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bemüh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bemüßig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benachrichtig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "benachrichtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "benachrichtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "benachrichtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "benachrichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benachteilig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "benachteilig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benams")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "benams")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "benams")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benebel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benedei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benedizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beneid")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "beneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "benetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benies")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benummer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benutz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "benutz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "benutz")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "benutz")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "benutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benötig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "benötig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "benötig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "benütz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "benütz")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "benütz")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "benütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beobacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beobacht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beobacht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beobacht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beorder")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beorder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepanzer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "bepanzer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bepanzer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepanzer")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "bepanzer")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bepanzer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bepflanz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bepflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepflaster")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bepflaster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepinsel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bepinsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepiss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beplank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepuder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bepuder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bequem")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bequem")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "berapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beraster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berat")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "berat")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "berat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berat")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "berat")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "berat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beratschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beraub")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berausch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "berausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berausch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "berausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "berechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berechtig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "berechtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berechtig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "berechtig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bered")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bered")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bered")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bered")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beregn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereicher")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bereicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereicher")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bereicher")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bereicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bereif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereithalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bereithalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereithalt")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bereithalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bereitlieg")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bereitlieg")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bereitlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bereitsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bereitstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bereitstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bereu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bericht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beriech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beriesel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beriesel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bering")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berliner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "berst")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "berst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beruh")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "beruh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beruhig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beruhig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beruß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berücksichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berücksichtig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "berücksichtig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "berücksichtig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "berühr")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "berühr")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "berühr")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "berühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "berühr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "besabber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "besag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "besag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "besait")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besam")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bescheid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bescheid")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bescheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bescheinig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bescheiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bescher")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bescher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bescher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bescher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bescher")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bescher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschieß")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschilder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschimpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschirm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "beschirm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschlabber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschlabber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschlaf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschlagnahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschleunig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschleunig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschleus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beschließ")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beschmier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschmier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschmutz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschmutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschmutz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschmutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschnei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschnei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschnober")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschnupper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschnüffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschotter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschrank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschreib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beschreib")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beschreib")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschrift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beschränk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschuh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:np . :gen) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "beschuldig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschummel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "beschummel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschummel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "beschummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschwer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschwer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschwer")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beschwer")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beschwer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschwichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschwindel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beschwindel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschwips")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschwör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschwör")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beschwör")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beschwör")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beschwör")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "beschädig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschäftig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschäftig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschäftig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschäftig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschäm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschönig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beschütt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beschütz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "beschütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beseel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beseh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beseh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "beseh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beseitig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "beseitig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beselig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besiedel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "besieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besinn")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "besinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "besitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besohl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besold")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besorg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "besorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besorg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "besorg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespann")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bespann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespei")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespiegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bespiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespitzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "besprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bespreng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bespreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespreng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bespreng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besprenkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespritz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bespritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespritz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bespritz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besprüh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besprüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespuck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bespöttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bespül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besser")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "besser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestall")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bestall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestaud")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestech")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bestech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besteck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "besteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "bestell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bestimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestraf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bestraf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestraf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestraf")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bestraf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestraf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bestrahl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestreb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bestreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestreik")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestreit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestreit")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bestreit")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bestreit")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bestreit")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bestreu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestrick")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bestrick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestrick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestuhl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestärk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "bestärk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestätig")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bestätig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestätig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bestätig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bestätig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bestäub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestürm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bestürm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bestürz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bestürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besudel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besudel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "besudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "besä")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besänftig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "besömmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bet")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bet")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "betakel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beteilig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "beteilig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beteilig")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "beteilig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beton")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beton")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "betonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betonn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "betracht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "betrag")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "betrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "betrau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "betrau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betrauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "betreff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betrink")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "betrink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beträufel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "beträufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betrüb")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "betrüb")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "betrüb")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "betrüb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "betrüb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bettel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bettel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "betu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "betupf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "betupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betätig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betätig")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "betätig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "betäub")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "betäub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "betäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betölpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betör")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "betör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "betör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "betünch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beug")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beug")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "beunruhig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beurkund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beurlaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beurteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beutel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevetter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevollmächtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bevollmächtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevormund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevorrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevorrecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevorsteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "bevorsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bevorteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bevorzug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewachs")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewachs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewaffn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewaffn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewaffn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewaffn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewahr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewahrheit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewald")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewald")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewaldrecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :akk) (:pp :dat "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :akk) (:pp :dat "zu") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beweihräucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweihräucher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "beweis")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bewend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewerf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewerkstellig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewert")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewert")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "bewert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewillig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewillig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewillkommn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewimpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewirk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bewirk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewirk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bewirt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewirtschaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewitzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewunder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bewähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewähr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bewältig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewältig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bewältig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bewältig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bewältig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bewässer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bewölk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bezahl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "bezahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezauber")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "bezauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bezeichn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bezeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezeichn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bezeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezeig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezeig")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bezettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "bezeug")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bezichtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezichtig")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bezieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "beziffer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "beziffer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezirz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezuschuss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezweifel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bezähm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beängstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "beäug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bibber")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "bibber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bibliographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bies")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bies")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "biet")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "biet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "biet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "biet")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "biet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bilanzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bilanzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bild")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "bild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bild")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "bild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bildhauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "billardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "billig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "billig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "billig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "billig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "bimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bims")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bims")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bind")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "bind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "binokel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "bitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bituminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bitzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "biwakier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blamier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blanchier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blankglüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blankglüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blankier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blankier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blankzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blas")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blas")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "blas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blasonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blasphemier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blatt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bleck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bleib")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "bleib")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bleib")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "bleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bleibenlass")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bleibenlass")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "bleibenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bleibenlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blessier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bleu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blindflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blindflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blindschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blindspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blinker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blinz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blinzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "block")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blockier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blockier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blondier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blondier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blondier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bloßdeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bloßleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bloßleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bloßlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bloßstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bloßstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bloßstrampel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blubber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bluff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bluff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bläh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "bläh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bläh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "bläh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bläk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blänk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blänk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blätter")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "blätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bläu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "blödel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blök")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "blüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bodig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bodig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bodig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bodm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bodm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bohr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bohr")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "bohr")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "bohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "boisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "boisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bolschewisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bolschewisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bolz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bolz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bombardier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "bombardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bombier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bombier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bong")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bong")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bonifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bonifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bonitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bord")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bord")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bordier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "borg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "borg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "borg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "borier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "borier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bossel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bossel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bossel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "bossel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bosselier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "botanisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bougier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bougier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "box")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "box")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "boykottier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brachlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "braillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bramarbasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brand")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "braus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "braus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "brech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "brech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "breit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "breit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "breit")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "breit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "breitdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "breitmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "breitschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "breittret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brems")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brems")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brenzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brevetier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brevetier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brikolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brikolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "bring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brock")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "brock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brodel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bromier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bromier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bronzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brotzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brotzel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brotzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brouillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brouillier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brouillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brumm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "brumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brunft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bräm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bräm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brätel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bräun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bräun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bröckel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "bröckel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bröckel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "bröckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brösel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brösel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brüll")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "brüll")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "brüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brünier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brünier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brüskier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "brüst")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "brüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "brüt")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "brüt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bubber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "buch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "buch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "buckel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "buckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "buddel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "buddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "budgetier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bugsier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "buh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "buhl")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "buhl")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "buhl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "buller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bums")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bums")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bunker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bunker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "butter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "butter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "butylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "butylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bänder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bänder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bändig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bäum")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "bäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bölk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "böller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bördel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bösch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bösch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bück")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "bück")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "büffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "büffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bügel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bündel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bündel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bündel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "bündel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bürd")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "bürger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bürger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "bürokratisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bürst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "bürst")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "büß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "büß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "büß")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "büß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "calcinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "calcinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "camp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "campier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "carbonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "carbonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "carborier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "carborier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "carboxylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "carboxylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chagrinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chagrinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "changier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "changier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "charakterisier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "charakterisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "charakterisier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "chargier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chargier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "charter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "charter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chauffier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chaussier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chaussier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "check")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chelatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chelatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chiffrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chiffrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chintz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chintz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chlor")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chlorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chlorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chloroformier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chloroformier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "christianisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chromatographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chromatographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chromier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chromier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "chronisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chronisier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "chronisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "coextrudier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "coextrudier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "conferier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "conferier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "crack")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "crack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "crack")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "crack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "crawl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "cut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "cut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "cyclisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "cyclisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dabeibleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dabeihalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dabeihalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dabeisitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dabeisteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dableib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dachtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dachtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dackel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dafürhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dagegenhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dagegenhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "daherflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daherkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daherred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "daherred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahineil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahingeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahingeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dahinscheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinsiech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinsink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dahinstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahintenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dahintenlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinterknie")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahinterkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dahinterkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dahintersteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dalass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dalass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dalieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "damaszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "damaszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "damel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "danebenfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "danebengeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "danebenhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "danebenschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "danebensteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daniederbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daniederlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daniederschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dank")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "dank")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "dank")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dank")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "dank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "danksag")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "danksag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "danksag")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "danksag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dappel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dappel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "darangeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darauflosgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daraufloslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darauflosrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darauflosred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darbiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darbiet")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "darbiet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darbring")) :v '( (:np . :nom) (:np . :akk) (:np . :akk2) ) )
(insert-subcat-entry (car (morphix-read "darbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darinsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darinsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "darleg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "darleih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darleih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darleih")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darniederbeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darniederbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darniederleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darniederleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darniederlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darniederschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "dartu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darunterbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darunterfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darunterlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darunterschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darunterschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "daruntersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darunterstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "unter") ) )
(insert-subcat-entry (car (morphix-read "darunterstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darunterstell")) :v '( (:np . :nom) (:pp :akk "unter") ) )
(insert-subcat-entry (car (morphix-read "darunterstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darüberschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "darüberschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "darübersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dasei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dasitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dasteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "datier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "datier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "datier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "datier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "datier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "datier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davoneil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davongeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "davonkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "davonlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "davonlauf")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "davonlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonras")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "davonras")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davontrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "davontrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davonzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davorleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "davorleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davorlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davorsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "davorstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "davorstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazuhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazukomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazuschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dazuschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazwischenkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dazwischenkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazwischenred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dazwischenred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazwischenruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dazwischenruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dazwischentret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "debardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debarkier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "debarkier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debattier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "debattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "debattier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "debattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debauchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deblockier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deblockier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debouchier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "debouchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "debutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dechargier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "dechargier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dechargier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "dechargier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dechiffrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "deck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "deck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "deck")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "deck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "decouragier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "decouragier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "decrementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "decrementier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dedizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dedizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deduzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deferier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deferier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deferier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "defibrinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "defibrinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "defilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "definier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "definier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "definier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "definier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "definier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deflorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deformier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deformylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deformylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "defraudier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "defraudier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "degagier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "degagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "degenerier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "degenerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "degoutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "degoutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "degradier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "degradier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "degustier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "degustier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dehydratisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dehydratisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dehydrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dehydrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deichsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deichsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dejeunier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekapier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekapier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekartellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekartellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deklamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deklamier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deklarier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "deklarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deklassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deklassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deklinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekolletier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekolletier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekomponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekontaminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekontaminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekonzentrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekonzentrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekortier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekortier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekreditier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekreditier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekrepitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekretier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekretier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekupier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekupier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dekuvrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dekuvrier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "delegier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "delektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "delektier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "delektier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "delektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deliberier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "delignifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "delignifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "delirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "delogier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demarkier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demaskier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demaskier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demilitarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demissionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "demobilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demokratisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demokratisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "demolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demonetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demonetisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:pp :dat "an") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:pp :dat "an") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:pp :dat "an") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "demonstrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "demontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demoralisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demütig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "demütig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "denaturalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "denaturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "denaturier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dengel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dengel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "denk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "denominier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dentelier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dentelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "denunzier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "denunzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "denunzier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "denunzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deodorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deodorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "depeschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depeschier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depeschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "depilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deplacier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deplacier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deplantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deplantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "depolarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depolarisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deponier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "deponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deportier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "depossedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depossedier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "depp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "depravier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "depravier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deprezier")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "deprezier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "deprezier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "deprezier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deprimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deprimier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deputier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deputier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "derivatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "derivatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "derivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "derivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "derogier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "derogier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deroutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deroutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desachsier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "desachsier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desachsier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "desachsier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desakralisier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "desakralisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desakralisier")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "desakralisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desarrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desarrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desavouier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "desavouier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desensibilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desensibilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "designier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desillusionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desillusionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desinfizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desinfizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desistier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desistier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desodorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desodorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desorbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desorbier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desorganisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desorganisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desorientier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desorientier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desoxidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desoxidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desoxydier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desoxydier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "desoxygenier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "desoxygenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "despotisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "despotisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dessinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dessinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "destillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "destillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "destituier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "destituier")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "destituier")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "destituier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "destruier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "detaillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "detaillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "detektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "detektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deteriorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deteriorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "determinier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "determinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "detestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "detestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "detonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "detonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "detonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deut")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "deut")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "deut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "deut")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "deut")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "deut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deutel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "deutel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "devalvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "devalvier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "devastier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "devastier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "devestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "devestier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "devestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "deviier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "devolvier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "devolvier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "devolvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "devolvier")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "devolvier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "devolvier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dezentralisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dezidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dezidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dezimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diagnostizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dialogisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dialogisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dialysier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "dialysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dialysier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "dialysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diazotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diazotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dibbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dibbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dibber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dibber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dicht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "dicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dichthalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dichthalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dicktu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "dien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diener")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diffamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "differenzier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "differenzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "differenzier")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "differenzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "differier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "differier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diffundier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diffundier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "digerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "digerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "digitalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diktier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dilatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dilatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dilettier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "dilettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dimensionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dimerisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dimerisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dimittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ding")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diphtongier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diphtongier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diplomier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diplomier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dirigier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dirigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "disharmonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diskontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diskreditier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diskreditier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diskriminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diskriminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diskurrier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "diskurrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diskurrier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "diskurrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diskutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "diskutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dislozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dislozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dispachier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dispensier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "dispensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dispensier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "dispensier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dispergier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dispergier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "disponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "disponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "disputier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "disputier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "disqualifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "disqualifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dissentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dissertier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "dissertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dissidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dissimilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dissimulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dissimulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dissonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dissoziier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "distanzier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "distanzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "distinguier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "distinguier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "distonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "distonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "distrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "distribuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "disziplinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "disziplinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "divergier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "divergier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "diversifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "divertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "divertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dividier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "dividier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dividier")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "dividier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "divisionalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "divisionalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dogmatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dogmatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dokter")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "dokter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "doktorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dokumentier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "dokumentier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "dokumentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dokumentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dollier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dollier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dolmetsch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "dolmetsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dolmetsch")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "dolmetsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "domestizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "domestizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dominier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "dominier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dominier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "dominier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "domizilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "domizilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "donner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dop")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dop")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "doppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dorr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dos")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dossier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dotier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "dotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dotier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "dotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "doublier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "doublier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dozier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "dozier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "dozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dragier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "draht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "draht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "draht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drainier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dramatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dramatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drangsalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drapier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "drapier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drapier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "drapier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "draufgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "draufgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "draufgeh")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "draufgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drauflosarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drauflosgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drauflosgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "draufloslauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "draufloslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drauflosrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drauflosred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drauskomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drechsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drechsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dregg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dregg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "dreh")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "dreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dreh")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "dreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreinblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreinfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreinred")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dreinred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreinschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreinschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dreiteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dreiteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dresch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dresch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dressier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "dressier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dressier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "dressier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dribbel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "dribbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drill")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "drill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drill")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "drill")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drinbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drinnensitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drittel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "droh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drossel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "druck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drucks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "dräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drängel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drängel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dränier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dränier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dräu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dröhn")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "dröhn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dröhn")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "dröhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drösel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drösel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "drück")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "drück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "drück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dublier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dublier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "duck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dudel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "dudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dudel")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "dudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duellier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "duellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duft")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "duft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "duld")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "duld")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "duld")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "dunkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dunst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duplier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "duplier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duplizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durcharbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durcharbeit")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durcharbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchatm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbalk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbalk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbeiß")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchbeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbekomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbettel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbeutel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbeutel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchblas")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchblas")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchblas")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchblas")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbleu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbleu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchblut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchblut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbohr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbohr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbox")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchbox")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbox")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchbox")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbraus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbrech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchdring")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchdring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchdröhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchdröhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchduft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchduft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durcheil")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durcheinanderbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durcheinanderbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durcheinanderlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durcheinanderred")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "durcheinanderred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durcheinanderschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durcheinanderwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durcheinanderwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchess")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfall")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfaul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfecht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfeg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfeucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfind")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "durchfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfitz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchfitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfitz")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchfitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchflecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchflecht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfließ")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchflut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchflut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchforsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfress")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfress")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchfress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfurch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfurch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchfütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchgeh")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "durchgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchgeh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchgieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchgieß")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchgieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchglüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchguck")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchhack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhau")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchhechel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchhechel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchheiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhelf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "durchhelf")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhunger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhusch")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchhusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchhör")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchhör")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchhör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkling")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchknet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchknet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkomponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkomponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkreuz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkriech")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkält")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkält")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchkämpf")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchkämpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchkönn")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchlad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchlad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchlang")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchleucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchlieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchloch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchlöcher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchlüft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchlüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchmarschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchmess")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchmess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchnag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchnag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchnumerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchnumerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchpassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchpassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchpaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchpaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchpeitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchpeitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchplumps")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchplumps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchprob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchprob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchprüf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchprügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchpuls")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchpuls")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchquer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrassel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchrassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchregn")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchregn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchreis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchrenn")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchriesel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchriesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrinn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchrinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchrinn")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchrühr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchrüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchrüttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsack")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsaus")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschau")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschein")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchscheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschieb")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschiff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschiff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschimmer")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschlag")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "durchschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschleich")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschlepp")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschleus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschleus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschling")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschling")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschling")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschlängel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschlängel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschlängel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschlängel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschlüpf")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschlüpf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "durchschlüpf")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschmeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschmuggel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschmuggel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschnüffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschnüffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschwimm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschwindel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschwindel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschwitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschwitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschütt")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchschüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchschüttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsegel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchseh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchseh")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchseih")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchseih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchseih")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchseih")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsink")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchsprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsprech")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchspring")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchspül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchspür")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchspür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchspür")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchspür")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstart")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchstart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstech")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchstech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsteck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsteig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsteig")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchstrahl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchstrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchstrahl")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchstrahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchstreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchström")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstöber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchstöber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchstürm")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsäg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchsäuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchsäuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchtanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchtanz")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchtanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchtob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchtob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchtreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchtreib")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchtrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchtret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchtret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchtränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwachs")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwag")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwalk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwalk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwams")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwams")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwat")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchwat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchweh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwichs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwichs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwind")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchwind")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwinter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwinter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwirk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchwirk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwirk")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "durchwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwisch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwoll")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchwühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzieh")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchzitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchzwäng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchzwäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzwäng")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "durchzwäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "durchörter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "durchörter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "duz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dämmer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "dämmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dämpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "dämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "döbel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "döbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "döbel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "döbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dörr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dörr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dübel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dübel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "düng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "düng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dünnemach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dünnmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dünst")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "dünst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dünst")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "dünst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "düpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dürf")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "dürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "dürst")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "dürst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "dürst")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "dürst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "düs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ebb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ebenier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ebenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ebn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "ebn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "echappier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "echauffier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "echelonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "echelonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "echo")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "echo")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "edier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "editier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "effektuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "effilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "effloreszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "egalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "egg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "egg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "egrenier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ehelich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ehr")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ehr")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "ehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eifer")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "eifer")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "eifer")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "eil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einarbeit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einarbeit")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einatm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einatm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einballier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbalsamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbau")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbegreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbekenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einberuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbetonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbett")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einbett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbieg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einbild")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbind")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einblatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einblend")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einblend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einblend")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einblend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einbleu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbleu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbläu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbohr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einbohr")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einboot")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbrock")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einbrock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbuddel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbuddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einbürger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbürger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einbürger")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einbürger")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "einbüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einbüß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eindampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindeck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "eindeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindeck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "eindeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eindeich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindeutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindorr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eindos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eindrill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindrill")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eindruck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eindruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindrück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eindrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eindrück")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eindrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eindämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einebn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eineng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einernt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einexerzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einexerzier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfahr")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfall")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfall")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfall")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfang")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einfang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfeder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfett")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfeucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfeuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einflecht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einflecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einflick")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einflick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einflieg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfließ")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfließ")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfress")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfried")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfuchs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfuchs")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfädel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfädel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfädel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfädel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfärb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfüg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfüg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einfühl")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einführ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einführ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einführ")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einführ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einfüll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einfüll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "eingeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "eingeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "eingeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eingemeind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingewöhn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eingewöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eingieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eingieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "eingieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eingieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "eingieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingips")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingips")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eingitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einglieder")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einglieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einglieder")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einglieder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eingrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingrab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eingravier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eingravier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingravier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eingravier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eingreif")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eingreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhak")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhak")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einhak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhandel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhau")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhauch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einheft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einheg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einheims")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einheiz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einheiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "einhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhenkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherbraus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einherbraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherbst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einherfahr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einherfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhergeh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einhergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherschlender")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einherstolzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einherstolzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhiev")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einhüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einhüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einig")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "einig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einimpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einjag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einjoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einjustier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkachel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkalkulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkalkulier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einkalkulier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einkalkulier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einkapsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkapsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einkassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einkauf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkauf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einkauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einkeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkeller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkerb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einkerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkerker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkessel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einklag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einklarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einklemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einklemm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einklink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einklink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einklopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einknet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einknick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einknick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einknüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkoch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einkratz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einkratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einkuppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlad")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einlad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlad")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "einlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einlass")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "einlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einlaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einleit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "einleit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einles")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einles")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einles")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einleucht")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "einleucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einliefer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlieg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einlieg")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "einlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einlogier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einlogier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "einlogier")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einlogier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "einlots")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlull")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlull")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einläut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einlöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einmauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmeißel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einmeißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmeng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmeng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einmiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmiet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einmisch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einmisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmisch")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einmisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einmott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einmumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einmünd")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einmünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einmünz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einnagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einnebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einnebel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :akk) (:pp :akk "fuer") (:subclause . "dass") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :akk) (:pp :akk "fuer") (:subclause . "ob") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :akk) (:pp :akk "gegen") (:subclause . "dass") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :akk) (:pp :akk "gegen") (:subclause . "ob") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :akk) (:pp :akk "gegen") (:subclause . "wh") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "einnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einnick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einniet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einnist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einnäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einordn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einordn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einordn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einpack")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpark")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpark")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einpass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpass")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einpeitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpeitsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpeitsch")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einpfarr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpferch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpflock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpfropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpfropf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpinsel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einpinsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einplan")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einplan")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpress")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpräg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpräg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpräg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einprüf")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einprüf")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einprüf")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einprüf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpuder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpuder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einpump")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einpump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einpupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einpökel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einquartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einquartier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einrahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einramm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einramm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrast")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einrast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrast")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einrast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einrechn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einred")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einred")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einregel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einregn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einregn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einregulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einregulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreib")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreih")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einreit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreit")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einrenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einriegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einriegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einritz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einroll")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einroll")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einrost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einräucher")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "einräucher")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einräucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einräum")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einrück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einrück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "einrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrück")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einrück")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "einrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einrüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsack")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einsack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einsack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsalb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einsalb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsalb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einsalb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsalb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einsalb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsarg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschachtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschalt")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einscharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einscheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschieß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einschieß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschiff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschiff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschlag")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschleif")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschleus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschleus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschließ")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschlummer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschläfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschlürf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmeichel")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "einschmeichel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschmier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einschmier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einschmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschmutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschmutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschneid")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschnitz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschnitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschnür")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschraub")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschreib")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschreit")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "einschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschrumpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einschränk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschwefel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschwenk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschwenk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschwärz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschärf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschärf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschätz")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "einschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschätz")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "einschätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einschöpf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschöpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschöpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschüchter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einschütt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einschütt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsegn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einseh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einseh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einseif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einseif")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einseif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsenk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einsenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsied")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsitz")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einspann")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspar")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "einspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspeichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspeicher")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einspeicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspeis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einspinn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspinn")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einspinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspring")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einspritz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einspritz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einspritz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsprüh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einsprüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstanz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstech")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsteh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "einsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "einstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstick")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstimm")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstopf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstoß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstrahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstreich")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "einstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstreu")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstreu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "einstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einström")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstudier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstuf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einstuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstülp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstülp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstürm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einsäckel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsäg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einsäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsäuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einsäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintanz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "eintanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "eintausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "eintausch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "eintausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintausch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einteil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintonn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintrag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "eintrag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "eintrag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "eintrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintreff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eintreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintret")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintret")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "eintret")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eintret")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "eintret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintrichter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintrichter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintrockn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintrudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einträufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einträufel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintröpfel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eintröpfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintröpfel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eintröpfel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eintrüb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eintunk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "eintunk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einverleib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einverleib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einvernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einweb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwechsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwechsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einweck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einweich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "einwend")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "einwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwerf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwickel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwickel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwinter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einwinter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einwirk")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "einwirk")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "einwirk")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "einwirk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einwohn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einwurzel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einwurzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einwässer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einzahl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "einzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einzeichn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einzwäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einzwäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einzäun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einäscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einätz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "einätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einöl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "einöl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "einüb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eislauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ejakulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ejizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ekel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "ekel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "elastifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elastifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "elektrifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elektrisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elektrisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "elektroerodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elektroerodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "elektrolysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elektrolysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "elementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elementier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "elidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "elidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eliminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eliminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eloxier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eluier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eluier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eluminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eluminier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eluminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emaillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emanzipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emanzipier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emballier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "embarrassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "embarrassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emeritier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emeritier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emigrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "empfang")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "empfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "empfehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "empfind")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "empfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "empordring")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "empordring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "emporhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporloder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporloder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporschau")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "emporschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporschnell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporschnell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporschweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporschweb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporschwing")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "emporschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporschwing")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "emporschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporsteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "emporsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporsteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporstreb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emportreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emportreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emporzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emporzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "empör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "emulgier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "emulgier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "encouragier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "encouragier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "end")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "end")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "endig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "endig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enervier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enfilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enfilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "engagier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "engagier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "engagier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "engagier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "engagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "englisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "englisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "engobier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "engobier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enkaustier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enkaustier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ennuyier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ennuyier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enragier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entbast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbehr")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbehr")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entbehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entbiet")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "entbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "entbiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbind")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entbind")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entbind")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entbind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entblätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entblöd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entblöß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entblöß")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entblöß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entdeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entdorn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entdorn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entdorn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entdorn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entehr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "enteign")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enteis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enterb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfahr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entfall")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "entfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entfall")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "entfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entfalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "entfalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfalt")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "entfalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entfaser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entfern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entfessel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfestig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfeucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entflamm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entflamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entflecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfleck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entfleisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entflieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entflieh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entflieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entform")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entform")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entform")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfremd")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entfremd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entfrost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfärb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entfärb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entführ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenarbeit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegenbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenhandel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenhandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegenjauchz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenjauchz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegenjuchz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenjuchz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegenkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegennehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenschall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenseh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegensetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegensetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegensetz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegensetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegensteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegensteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegenstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenstell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegenstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenstreck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegenstürz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegentrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegentrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegentreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegentret")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenwirk")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgegenwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgegn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "entgegn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgegn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "entgegn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgeh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entgeh")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entgeh")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgeiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgelt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgelt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgleis")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "entgleis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgleit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entgleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgrät")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgurt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgurt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entgötter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgürt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entgürt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enthaar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthaar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enthalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthaupt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entheb")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entheilig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entholz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthusiasmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthusiasmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enthärt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthäut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enthüll")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "enthüll")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "enthüll")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "enthüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enthüls")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entionisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entjungfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkalk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkeim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkeim")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entkodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkork")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkräft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entkuppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entkörn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlangfahr")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "entlangfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlanggeh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "entlanggeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlanglauf")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "entlanglauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlangroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlangschab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlangschab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlarv")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "entlarv")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlast")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "entlast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlast")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "entlast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entledig")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entledig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entleer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entleer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlehn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entleih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entleih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entlock")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entlüft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmagnetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmilitarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmin")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmutig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmächtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entmächtig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entmündig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entnationalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entnazifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entnebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entnehm")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entnerv")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entniet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entpersönlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entpflicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entphosphorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entphosphorisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entpupp")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "entpupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entquell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entrat")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entrecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entreg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entreg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entreinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entricht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "entricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entriegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrinn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entroll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entroll")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entrost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enträtsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrück")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entrümpel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entrümpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entrüst")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "entrüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "entscheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschlack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschlack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschlag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entschlamm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "entschlamm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "entschlamm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschleier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "entschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschlummer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschlüpf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entschlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschlüssel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschuld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschuldig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschuldig")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "entschuldig")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "entschuldig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entschuldig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschweb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschwefel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschwind")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entschwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschädig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "entschädig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschädig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entschärf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entschäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsetz")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "entsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsilber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsilicier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsilicier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsink")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entsinn")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entsinn")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "entsinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsittlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsolidarisier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "entsolidarisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entspiegel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "entspiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entspinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsprech")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entsprech")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsprieß")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entsprieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entspring")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entstamm")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entstamm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entstamm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entstamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entstapel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entstaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entstaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entsteh")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "entsteh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entstein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsteiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsteiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entstiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entström")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entstäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entstäub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entstör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entsäuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entthron")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enttrümmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enttäusch")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "enttäusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entvölker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwachs")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwaffn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwaffn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwald")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwarn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entweich")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entweich")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entweich")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entweich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entweih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwend")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwert")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "entwert")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "entwert")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "entwert")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "entwert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwert")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwes")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwickel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "entwickel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "entwickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwind")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entwirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwisch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entwisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwurzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwässer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "entwässer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwässer")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "entwässer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "entwöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwölk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entwürdig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entwürdig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzieh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "entzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entziffer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzunder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzwei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entzweibeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweibrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweibrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entzweigeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entzweihau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweihau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweimach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweimach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweireiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweireiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweischlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweischlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzweischneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "entzück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzünd")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "entzünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "entzünd")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "entzünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "entäußer")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "entöl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enumerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "enumerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "enzystier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eosinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eosinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "epilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "epoxidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "epoxidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "equipier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "equipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eracht")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "eracht")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "eracht")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erarbeit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erb")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbarm")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "erbarm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "erbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbau")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "erbau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbettel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erbettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbettel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erbettel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbeut")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erbeut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbitt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbitt")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erbitt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erbitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erblass")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "erblass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erblick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erblind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erblüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbos")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erbos")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erdauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erdicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erdolch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erdolch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erdreist")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erdreist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erdrossel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erdrossel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erdröhn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erdröhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erduld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ereifer")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ereifer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ereign")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ereign")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ereil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ererb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erfass")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erfass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erfass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erfecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfleh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erfleh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfleh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erfleh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfolg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erforsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erfrag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erfreu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erfreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfreu")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "erfreu")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erfreu")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erfreu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erfrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erfrisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "erfrisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfrisch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "erfrisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erfühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erfüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ergatter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergauner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ergeb")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ergetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ergetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergetz")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ergetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ergieß")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ergieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erglänz")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "erglänz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erglüh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erglüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ergrau")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "ergrau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ergreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergründ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergänz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ergänz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ergänz")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ergänz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ergötz")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ergötz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erhalt")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erhalt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erhalt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erheisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erheisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erheiter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erheiter")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erheiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erheuchel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erheuchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhoff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhol")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhärt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhärt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erhöh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "erhöh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "erhöh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erinner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erkauf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkenn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erkenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkenn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erkenn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erkenn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erkenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erkletter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erklimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erklär")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erklügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkrank")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "erkrank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erkund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:pp :dat "bei") (pp dat "nach") ) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erkundig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erkält")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkält")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erkämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erkühn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erkühn")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erkühn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erkünstel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erlahm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlass")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erlass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erlass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erlass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erlaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlaub")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlaub")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erlaub")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erlaub")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erlaub")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erlausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erleb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erleb")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erleb")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erledig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erledig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erledig")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erledig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "dass") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "dass") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "dass") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "wh") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "wh") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "wh") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "zu") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :dat) (:subclause . "zu") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erleichter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erles")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erleucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "erlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erlustig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlustig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erläuter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erläuter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlös")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erlös")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erlös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erlös")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erlös")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erlös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erlösch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erlüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermahn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermahn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:np . :gen) (:np . :dat) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:np . :gen) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:np . :gen) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "ermangel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermann")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermatt")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ermatt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermittel")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "ermittel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ermittel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ermittel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ermittel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ermord")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermunter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermunter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermunter")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermunter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermutig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermutig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermutig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermutig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermächtig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermächtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ermächtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermächtig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ermächtig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ermächtig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ermäßig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermöglich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermöglich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermöglich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ermöglich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ermöglich")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ermüd")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ermüd")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ermüd")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ermüd")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ermüd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ermüd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ernenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ernenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ernenn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erneuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erneuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erniedrig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "erniedrig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erniedrig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erniedrig")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "erniedrig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erniedrig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ernt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ernt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ernähr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ernähr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ernähr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "ernähr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ernüchter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erober")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erotisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erprob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erquick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erraff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "errat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "errat")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "errat")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "errat")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "errechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erreg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erreich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "errett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "errett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "errett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erröt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ersauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschauder")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "erschauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschein")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erschein")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erschein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschlaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschlaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschmeichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschmeichel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschwer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschwer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschwer")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erschwer")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erschwer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschwindel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschwindel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschöpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "erschöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erschöpf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "erschöpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erschütter")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "erschütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erseh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erseh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersehn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ersetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersitz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersorg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erspar")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erspinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ersprieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erspäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erspäh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erspäh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erspäh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erstark")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erstarr")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "erstarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erstatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstaun")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "erstaun")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erstaun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstaun")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "erstaun")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erstaun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erstech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ersteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erstick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstick")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "erstick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erstreb")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erstreb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstreb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erstreck")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "erstreck")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "erstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erstreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erstürm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ersuch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ersuch")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ersuch")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ersuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertapp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ertapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertapp")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "ertapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ertast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erteil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertrag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ertrag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ertrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ertrink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ertrotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertrotz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erträum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erträum")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ertön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ertüchtig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ertüchtig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ertüchtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eruier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eruier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwachs")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erwachs")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "erwachs")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwart")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erwart")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwart")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwart")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erwart")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "erweck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwehr")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '((:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '((:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '((:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erweis")) :v '((:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erweiter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erweiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwerb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "auf") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "auf") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwider")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwirk")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwirtschaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwirtschaft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "erwisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwähn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwähn")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "erwähn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwähn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erwähn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erwähn")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erwürg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzeig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzeig")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "erzeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "erzieh")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erzieh")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "erzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzieh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erziel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erziel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erzitter")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "erzitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erzwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "erzähl")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "erzürn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erzürn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "eröffn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erörter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "erörter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "erübrig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "erübrig")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "erübrig")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "eskalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eskalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ester")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ester")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ester")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ester")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "etablier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "etablier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "etablier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "etablier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "etatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "etatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ethoxylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ethoxylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "etikettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "etikettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "evakuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evaluier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evangelisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evangelisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "evaporier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evaporier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "evinzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evinzier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evinzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "evolvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "evolvier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "evozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exaltier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "examinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exekutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exemplifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exequier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exequier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exerzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exerzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exhalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exhalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exhibier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exhibier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exhumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exhumier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "eximier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "eximier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "existier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exkludier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exkludier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exkommunizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exkulpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exkulpier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exmatrikulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exmatrikulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exmittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exmittier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exorzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exorzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "expandier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "expandier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "expatriier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "expedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "expektorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "expektorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "experimentier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "experimentier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "experimentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "expertisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "expertisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "explanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "explanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "explizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "explizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "explodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "explorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "explorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "expolarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "expolarisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exspirier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exspirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exstirpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exstirpier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "extemporier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "extemporier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "extendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "extendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "extensivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "extensivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exterminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exterminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "extrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "extrapolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "extrapolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "extrudier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "extrudier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exulzerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exzellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exzerpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exzerpier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "exzidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "exzidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "facettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fahnd")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "fahnd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fahr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faksimilier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "faksimilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "faksimilier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "faksimilier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fakturier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fakturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fakturier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fakturier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fall")) :v '( (:np . :nom) (:pp :akk "unter") ) )
(insert-subcat-entry (car (morphix-read "fall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fallenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fallenlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fallier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "falschspiel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "falschspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "falsettier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "falsettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "falsifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "falt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "falt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "falz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "falz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "falz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "falz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "falz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "falz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "famulier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "famulier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "famulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fanatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fanatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "farcier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fasch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fasch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fasch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fasel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fasel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faser")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "faser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "fass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fass")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "fass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fassonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faszikulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "faszikulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faszinier")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "faszinier")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "faszinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fatier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faulenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "faust")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "faust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "faust")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "faust")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "faust")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "faust")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "favorisier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "favorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fazettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fazettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fechs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fechs")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fechs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:pp :dat "fuer") ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "fecht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feg")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "feg")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "feg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehl")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "fehl")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "fehl")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fehl")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "fehl")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "fehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehlbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fehlbitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehlgeh")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "fehlgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehlgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehlschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehlschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fehlschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fehlschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehlstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fehlstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fehltret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feil")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "feil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feil")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "feil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feilhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feilsch")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "feilsch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feilsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fein")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinbrenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "feinbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "feinbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinbrenn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "feinbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feindosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feindosier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feindreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feindreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feinmach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "feinmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinmach")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "feinmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feinmess")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feinmess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinmess")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feinmess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feinschleif")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feinschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinschleif")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feinschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feinstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feinstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feix")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "felg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fensterl")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "fensterl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fergg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fergg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fergg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fergg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fermentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fermentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernbleib")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fernbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fernhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fernhalt")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fernhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernlenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fernlieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fernlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernspeis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fernspeis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernsprech")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fernsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernsteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fernsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fernsteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ferritisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ferritisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fertig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fertig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fertigbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fertigdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fertigdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fertigkoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fertigkoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fertigkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fertigkrieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fertigmach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "fertigmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fertigmach")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "fertigmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fertigstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fessel")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "fessel")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "fessel")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "fessel")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "fessel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fessel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festback")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festback")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festback")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festbind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festfress")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "festfress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festhak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "festhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festheft")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festheft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festkeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festkeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festklammer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festklammer")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festklammer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festkleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festkleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festkleb")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festkleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festklemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festklemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "festleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festlieg")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "festlieg")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "festlieg")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "festmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festnagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festschnür")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "festschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festschnür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festschraub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "festschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festschreib")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "festschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festschreib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "festschreib")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "festschreib")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "festsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "festsetz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "festsetz")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "festsetz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "festsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "festsitz")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "festsitz")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "festsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feststeck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "feststeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feststeck")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "feststeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feststeh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "feststeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:pp :dat "an") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "feststell")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "festzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "festzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fett")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feucht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feucht")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feuer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "feuer")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "feuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "feuerwerk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fibrillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fibrillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fickfack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fickfacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fieber")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "fieber")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "fieber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fiedel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fiedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fieder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fiep")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fight")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "fight")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "figurier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "figurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "figurier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "figurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "filier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "filier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "film")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "film")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "filmbild")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "filmbild")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "filmbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "filmbild")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "filmbild")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "filmbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "filter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "filtrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "filz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "filz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "finanzier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "finanzier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "finanzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "finanzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "find")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "find")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "find")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "find")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "finger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "finger")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "finger")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "finger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fingier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "finster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "firmel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "firmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "firmel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "firmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "firmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "firmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "firn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "firniss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "firniss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fisch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fispel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fistel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fistulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fix")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fixier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fixier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flachfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flachs")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "flachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flagg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flambier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flammier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flammier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flanier")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "flanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flank")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "flank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flank")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "flank")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "flank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flankier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flansch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flansch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flattier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "flattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flecht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "flecht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "flecht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "flecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fleck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fletcher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fletcher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fletsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fletsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fletscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fletscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flicker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flieh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "flieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fließpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fließpress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flimmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flirt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "flirt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flitz")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "flitz")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "flitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "float")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "florier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flottier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flottmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fluch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fluch")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "fluch")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "fluch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fluh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fluh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fluidisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fluidisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fluktuier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flukturier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flunker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fluoreszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fluorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flush")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flush")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fläch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fläch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fläz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "fläz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "fläz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flöt")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "flöt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "flöt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flötengeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flücht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flügel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "flüster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flüster")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "flüster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fohl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fokussier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fokussier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "folg")) :v '( (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "folger")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "folger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "foliier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "folter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forcier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "forder")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "forkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "formalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "formatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "formatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "formier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "formier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "formier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "formier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "formulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "formulier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "formulier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "formulier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "forsch")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "forsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortbesteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortbeweg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortbeweg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortbleib")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortbleib")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortdauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortdenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortdräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortdräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "fortentwickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortfahr")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "fortfahr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fortfahr")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "fortfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortflatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortfließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortgeh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortgieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forthelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "forthelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortjag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortjag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fortkomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortkrieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortkrieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortkönn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortkönn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fortlauf")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "fortlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortleb")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "fortleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortlock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortmarschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fortnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortpflanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortreiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fortreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortroll")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "fortroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortroll")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "fortroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forträum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forträum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortrück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortrück")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortscheuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortscheuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fortschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschlender")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschleuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschleuder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschnell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschreit")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "fortschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschwemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortschwemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortsegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortsegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortsehn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortsehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "fortsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortsetz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "fortsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forttrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forttrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "forttreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "forttreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortwirk")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "fortwirk")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "fortwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortwisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortwisch")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "fortwisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortwähr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortwälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortwälz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortwünsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortwünsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortzerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortzerr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fortzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fortzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "foul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "foul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "foulardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "foulardier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "foulardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fracht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "frag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fragmentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fragmentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fraktionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fraktionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frankier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "frankier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frans")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frans")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "französel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "französier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "französier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frappier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fraternisier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fraternisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frei")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "frei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frei")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "frei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freibekomm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "freibekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freibleib")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "freibleib")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "freibleib")) :v '( (:np . :nom) (:pp :dat "gegenueber") ) )
(insert-subcat-entry (car (morphix-read "freibleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freigeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "freigeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freigeb")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "freigeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freihab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freihab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freihalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freihalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freihalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freihalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freihalt")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freihalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freikomm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "freikomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freikomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freilass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "freilass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freilass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freileg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freileg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freimach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freimach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freischreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freischwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freisprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freisprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freisprech")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freisprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freisteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "freisteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freistell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "freistell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "freistell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freistell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fremd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fremdel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fremdgeh")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fremdgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fremdgeh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fremdgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frequentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fress")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "fress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fress")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "fress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "freu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "freund")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "freund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frevel")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "frevel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fried")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frikassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fritier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fritt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frohlock")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "frohlock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fromm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fromm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fron")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "fron")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frond")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "frond")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frondier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frottier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frotzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frotzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frucht")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "frucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fruktifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fruktifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frustrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frägel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "frägel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frägel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "frägel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fräs")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "fräs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "frömmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "frön")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "frön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fröstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fuchs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fuchs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fuchsschwänz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fuchtel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "fuchtel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fuchtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fummel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "fummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fundamentier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fundamentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fundier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fungier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "fungier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "funk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "funk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "funkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "funktionalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "funktionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "furch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "furch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "furgier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "furnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "furnier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "furt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fuschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fusionier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fusionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fusionier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fusionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fussel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "futter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "futter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fuß")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "fuß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fächer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälbel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fälbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälbel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fälbel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälbel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fälbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fäll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fältel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fältel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fälz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fälz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fälz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "färb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "färb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fäul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "föderalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "föderalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "föderier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "föderier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "föhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "föhn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "föhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "förder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "förder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "füg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "füg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "füg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "füg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fühl")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "fühl")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "fühl")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "fühl")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "fühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "führ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "führ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "führ")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "führ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "führ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "füll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "füll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "füll")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "füll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "füller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "füller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fürcht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fürcht")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "fürcht")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "fürcht")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "fürcht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "fürcht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "fürst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fürst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "füsilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "fütter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "fütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "füßel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "füßel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gabel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "gabel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gabel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "gabel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gackel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gacks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gallisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gallisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gallonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gallonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "galoppier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "galoppier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "galvanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gangräneszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gangräneszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gant")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gant")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "garagier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "garantier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "garnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garnisonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garnisonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "garottier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garottier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "garrottier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "garrottier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gasel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gastier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gaufrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gaufrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gaukel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gaum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gaum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gauner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gautsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gautsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "geb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "geb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "geb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gebrauch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gebrauch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gebrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gebär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gebär")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gebär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gebärd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '( (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '( (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gebühr")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "geck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gedenk")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "gedenk")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "gedenk")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "gedenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gefangenhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gefangennehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gefangensetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gefangensetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gefrier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gefrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gefrier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gefrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gefährd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenbuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenbuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegeneinanderhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegeneinanderhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegeneinanderhetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegeneinanderhetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegeneinanderhetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegeneinanderstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegenüberlieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gegenüberlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegenübersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenübersetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenübersetz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gegenübersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegenübersitz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gegenübersitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegenübersteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gegenübersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gegenüberstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenüberstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gegenübertret")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gegenübertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "geh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "geh")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "geh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geh")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "geheimhalt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "geheimniss")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "geheimniss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geheimniss")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "geheimniss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gehenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gehenlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gehör")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geifer")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "geifer")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "geifer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geil")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "geil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geister")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geiz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "geiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geißel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gelang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gelatinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gelatinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gelier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gell")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "gell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gell")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "gell")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "gell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '((:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '((:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gelt")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gelüst")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "gelüst")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gelüst")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "gelüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gemahn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "gemahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gemahn")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "gemahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gemeind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gemeind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "genehmig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "generalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "generier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "generier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "genes")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "genier")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "genier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "genieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "genieß")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "genieß")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "genieß")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "genüg")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "geradebieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradehalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geradeleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradeleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gerademach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gerademach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geradericht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradesetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradesetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geradesitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradesitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geradesteh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "geradesteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geradestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geradestell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gerat")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "gerat")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gerat")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "gerat")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "gerat")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "gerat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gerb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gereich")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gereich")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gereich")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gereich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gereu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gerier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "gerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gerier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "gerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geringacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geringacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geringschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geringschätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gerinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "germanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geruh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "geruh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "geschmeidigmach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "geschmeidigmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "geschmeidigmach")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "geschmeidigmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gesell")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gesell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gesell")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gespenster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gestalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gestalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gestatt")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "gestikulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gesund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gesundbet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gesundbet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gesundlach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gesundmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "getröst")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "gewicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gewinn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "gewinn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gewinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewinn")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "gewinn")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "gewinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gewitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gewähr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewähr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gewährleist")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gewältig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gewöhn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "gewöhn")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "geziem")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "geziem")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gicks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gieks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gieks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gieper")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "gieper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gier")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "gier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "gieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gieß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "gieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gigampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "giks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gilb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gipfel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "gipfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "girier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "girier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "girr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "giss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "giss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glacier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glacier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glattbügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glattbügel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glatthobel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glatthobel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glattleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glattleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glattmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glattmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glattstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glattstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glattstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glattzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glattzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "glaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleich")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichkomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichkomm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichmach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichseh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gleichseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gleichsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichstell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gleichstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gleichstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleichzieh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gleichzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleit")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "gleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gleiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glieder")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "glieder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "glieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glieder")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "glieder")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "glieder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glitsch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "glitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glitzer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glorifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glos")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glossier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glucker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glucks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glup")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glupsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glycosylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glycosylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glykolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glykolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glykosilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glykosilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glänz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glätt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "glätt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "glätt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glätt")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "glätt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glück")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "glück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glüh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "glüh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "glüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "glühfrisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "glühfrisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gnad")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gnad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gnatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gokel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gondel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gong")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gong")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "goutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "grab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grabbel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "grabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gradier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "graduier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "granier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "granier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "granulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "granulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "graps")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "graps")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "graps")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "graps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grapsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "grapsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grapsch")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "grapsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gras")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gratifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gratifizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gratulier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gratulier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "gratulier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "gratulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "grau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "graul")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "graul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "graul")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "graul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "graupel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "graus")) :v '( (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "graus")) :v '( (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "graus")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "graus")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "graus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gravier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gravitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "greif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "greif")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "greif")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "greif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grenz")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "grenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "griemel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "griesel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "griesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grießel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grins")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "groll")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "groll")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "groll")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "groll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "großmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "großmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "großtu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "großtu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "großtu")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "großtu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "großzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "großzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grubb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grubber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grumt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grundier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grunz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gruppier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "gruppier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gruppier")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "gruppier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grusel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gräm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "gräm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gräm")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "gräm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grätsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grätsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grätsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gräuel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gräzisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gräzisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gröl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grübel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "grübel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grün")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "gründ")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "gründel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grüppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grüppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "grüß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "grüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "grüß")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "grüß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "guck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "guillochier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "guillochier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "guillotinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "guillotinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gummier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gummier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gurgel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gurgel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gurr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gurt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gurt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gurt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gurt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gustier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gustier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gutbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gutbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "guthab")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "guthab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gutheiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gutmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gutsag")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gutsag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gutschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gutschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gutschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gutschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gutsprech")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gutsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gutsteh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "gutsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "guttu")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "guttu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gähn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gängel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gärtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gärtner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gönn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gönn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "güll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "güll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gürt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gürt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gürt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "gürt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "gürtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "gürtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hab")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "hab")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "hab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hab")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hab")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "habilitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hack")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hack")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hader")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hader")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haft")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "haft")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "haft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haftenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hagel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hagel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "halbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "halfter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "halluzinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "halogenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hals")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "halt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "halter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "halter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haltmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hampel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hamster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hamster")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hamster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "handarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "handarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "bei") (pp akk "um") ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "handel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "handhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "handikap")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "handlanger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hangel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hangel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hantel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hantier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haper")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "haper")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "haper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "harangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "harangier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "harf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hark")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "harmonier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "harmonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "harmonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "harn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "harr")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "harr")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "harr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "harr")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "harr")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "harsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "harz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hasardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "hasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hasch")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "hasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "haselier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haspel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "haspel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hass")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hauch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hauch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hauch")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hauch")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "hauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haushalt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "haushalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "haussier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hechel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hechel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hechel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hechel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heft")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heft")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "heft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heft")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heft")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "heftel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heil")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "heil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heil")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "heil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heilig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heilig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heilighalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heiligsprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimbegeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimbegleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimfall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimkomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimleucht")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "heimleucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimlichtu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimsuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimtrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimtrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heimzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimzahl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heimzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "heisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heisch")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "heisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heiz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "heiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heiz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "heiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:np . :akk) (:np . :akk2) ) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:np . :akk) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:pp :dat "nach") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:pp :dat "nach") (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:predicative :np :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '( (:pp :dat "nach") (:subclause . "dass") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '((:predicative :np :akk) (:pp :dat "nach") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '((:predicative :np :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "heiß")) :v '((:subclause . "dass") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "hektographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hektographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "helf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "helf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "helf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "helf")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "helf")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "helf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hellenisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hellenisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hellseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hemm")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hemm")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hemm")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "henk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "henkel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "henkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabbeug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herabbeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabbeug")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herabbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabblick")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabfall")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabfleh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabfleh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "herabfleh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabfleh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabfleh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "herabfleh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabfließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabgieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabgleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabgleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herabhelf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabhäng")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabkletter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabkletter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabkletter")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabkomm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabkomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabkomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herablass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herablass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herablass")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herablass")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "herablass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herablauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herablauf")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herablauf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herablauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabregn")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabregn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabrinn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabrinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabrinn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabroll")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabroll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabroll")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabroll")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabruf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabschau")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabschau")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabschick")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabschweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabschweb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabschweb")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabschweb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabschwing")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabschwing")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabseh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabseh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabsenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herabsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabsink")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabsink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabspring")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabspring")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herabspring")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabsteig")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabsteig")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabström")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabström")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabstürz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabstürz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herabstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabtropf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herabtropf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabtropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabtröpfel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabtröpfel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herabtröpfel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabtröpfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herabwürdig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herabzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herabzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herabzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herabzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranarbeit")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranbild")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranbild")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranbraus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranbraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranbring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herandring")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herandring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraneil")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heraneil")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraneil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranflieg")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranführ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranführ")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herangeh")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herangeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranhol")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herankomm")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herankomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranmach")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herannah")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranreich")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranreif")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranrück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranrück")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranschleich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranschleich")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranschwimm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranschwimm")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranspreng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranspreng")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heransteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herantrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herantrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herantrag")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herantrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herantret")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herantret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranwachs")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranwag")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranwink")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranwink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranwink")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "heranwink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heranzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heranzieh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heranzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufbeförder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufbeförder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufbegeb")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraufbegeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufbeschwör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufbeweg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufbitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufdring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauffahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauffahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauffind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "heraufhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufklapp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauflang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauflang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauflang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauflass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauflass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauflauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauftrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauftrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauftreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauftreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauftön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraufzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraufzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausarbeit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausarbeit")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbeiß")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbeug")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '( (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herausbild")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herausbitt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbitt")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausblas")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausblas")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbohr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbohr")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbrech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbrech")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausdring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausdring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausdring")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausdring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausdürf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausfahr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausfahr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herausfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausfall")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausfall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausfall")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausfisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausfisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausfisch")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausfisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausflieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausfließ")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausfühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausgeh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausgleit")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausgleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausgreif")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausgreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausgreif")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausguck")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausguck")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "herausguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraushab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraushalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraushalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraushalt")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraushalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraushau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraushau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausheb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausheb")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraushol")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraushol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraushäng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraushäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraushäng")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraushäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauskehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herauskenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauskenn")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herauskenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausklaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausklaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskletter")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauskletter")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauskletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausklingel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausklingel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausklopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausklopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskomm")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "herauskomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herauskomm")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herauskomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskrabbel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauskrabbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauskrabbel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauskrabbel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauskrabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauskratz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskriech")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauskriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauskrieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauskönn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauskönn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauskönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauslang")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauslang")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauslang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauslass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauslass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauslass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herauslass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herauslass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herauslauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausles")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauslock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauslock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauslock")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauslock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauslüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausmach")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausmüss")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausplatz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herausplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauspress")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauspress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauspress")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauspress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauspump")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauspump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausputz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausquell")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausquell")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausquell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausrag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausred")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "herausred")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausreit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausreit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausreit")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausreit")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausreiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "herausreiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herausreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausrenn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausrenn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausriesel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausriesel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausriesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausrinn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausrinn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausruf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausruf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausruf")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "herausruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausrutsch")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausrutsch")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herausrutsch")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herausrutsch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herausrutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraussag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussaug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraussaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschall")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschall")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschau")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschieß")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschlag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschleich")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschleich")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschlepp")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschlepp")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschleuder")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herausschleuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschleuder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschmeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschmuggel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschmuggel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschneid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschraub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschäl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausschäl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausschöpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschüttel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausschüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausspreng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausspring")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausspritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussprudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausspuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausspäh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausspäh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausstaffier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausstaffier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraussteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraussteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraussteck")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraussteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussteh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraussteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussteig")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraussteig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraussteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herausstell")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herausstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausstreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausström")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausström")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herausström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausstürm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herausstürz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herausstürz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herausstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heraussuch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraussuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraustrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraustrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraustrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraustu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraustu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraustu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heraustön")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "heraustön")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "heraustön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauswachs")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauswachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauswag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauswag")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauswag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauswasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauswasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauswasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauswerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauswerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauswerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauswind")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauswind")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauswind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauswoll")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauswoll")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauswoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herauswürg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauszerr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauszerr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herauszerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauszieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauszieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herauszieh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herauszieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbegleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeibring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeieil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeifahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeifahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeiflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeiflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeihol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeikomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeilauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeilock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeirenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeiruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeischaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeischleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeischlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeisehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeispring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeiström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeistürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeitrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeiwink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeiwünsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbeizieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbeorder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herberg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herberg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herbst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herbstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herdenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinbrech")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hereinbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereindring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereindürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereineil")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereineil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinfall")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hereinfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinflieg")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hereinflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereingeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereingleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hereinhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinkletter")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinkrabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hereinleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hereinleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinnötig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinrassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinregn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinriesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinsaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschau")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hereinschau")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hereinschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinschmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinschnei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinsteck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinsteig")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hereinsteig")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinstreck")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinström")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinstürm")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinstürz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereintrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereintrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereintropf")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hereintropf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereintropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinwag")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinweh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinweh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinwoll")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hereinzerr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hereinzerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hereinzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herfall")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hergeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hergeb")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hergeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hergeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hergeh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "hergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herhab")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herhalt")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herhör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herjag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "vor") ) )
(insert-subcat-entry (car (morphix-read "herjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herkomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herlauf")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herleier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herleit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herleit")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herleit")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herlock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hermach")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hermetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hermetisier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hermüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heroisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herplapper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herplapper")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herplapper")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herplapper")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herricht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herrsch")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herrsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herruf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herrück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herrück")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herrühr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herrühr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hersag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "hersag")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "hersag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hersag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschaff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschaff")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschau")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herschlepp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herseh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hersehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herspring")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herstamm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herstell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hertrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hertreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumalber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumbalg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumbalg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumbastel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumbastel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumbeweg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumbeweg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumbieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumbieg")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumbind")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumblick")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herumblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumblätter")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumblätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumbummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumdokter")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumdokter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumdreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumdreh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumdrucks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumdrück")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumfahr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumfalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumfalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumfinger")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumfinger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumflatter")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumflatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumfrag")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumfrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumfuchtel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumfuchtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumfuhrwerk")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumfuhrwerk")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumfuhrwerk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumfummel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumfummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumführ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumführ")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumgeister")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "herumgeister")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumgreif")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumhack")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "herumhack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumhantier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumhantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumhorch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumhorch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumirr")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumkomm")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumkomm")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "herumkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumkrabbel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumkrabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumkram")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumkram")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumlauf")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumlauf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumlunger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herummurks")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herummurks")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herummurks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumplag")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumplag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumrat")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumreich")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumreich")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumreis")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumreis")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumreit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumreit")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumrutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumrätsel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herumrätsel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herumrätsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumrühr")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumschau")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumschlag")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschlag")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschleich")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschlender")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschlender")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschling")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschling")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschlängel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschlängel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschnüffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschrei")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumschwärm")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumschwärm")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumschwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumsetz")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumsitz")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumspazier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumspiel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumsprech")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herumsprech")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "herumsprech")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "herumspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumspritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumstell")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumstocher")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumstocher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumstreich")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumstreit")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumstreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumstreun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumstöber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtanz")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumtanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumtreib")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtret")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "herumtrödel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtummel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumtummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumturn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumtänzel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumtänzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumwimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwirbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumwirbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwirtschaft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwurstel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumwurstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumwälz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumwühl")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "herumwühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumzank")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumzank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumzerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herumzieh")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "herumzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herumärger")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "herumärger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herunterfall")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heruntergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heruntergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heruntergeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heruntergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heruntergieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterhau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterheb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterheb")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herunterhelf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterhol")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterhol")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterkletter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterkletter")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterknall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterkomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterkönn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterleier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heruntermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heruntermüss")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "heruntermüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunternehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunternehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterrassel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterrassel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterrassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterrenn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterruf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "herunterruf")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "herunterruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterschaff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterschluck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterschmeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heruntersteig")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "heruntersteig")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "heruntersteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herunterstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "herunterstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterstürz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herunterstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heruntersubventionier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "heruntersubventionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heruntersubventionier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "heruntersubventionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heruntertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herunterzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorblick")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "hervorblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorbrech")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervordring")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervordring")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "hervordring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorgeh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorgeh")) :v '( (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hervorgeh")) :v '( (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hervorgeh")) :v '( (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hervorguck")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorguck")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "hervorguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hervorheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorkehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervorkeim")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorkeim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorkomm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorquell")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorquell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorrag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hervorruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervorruf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hervorrück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervorrück")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorschau")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorschieß")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorschimmer")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorschimmer")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "hervorschimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorsprieß")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorsprieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorspring")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorsprudel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorsprudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorstech")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "hervorstech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorstoß")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervorstürz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorsuch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorsuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervortauch")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervortret")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervortret")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "hervortret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervortu")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hervortu")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hervortu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorwachs")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hervorzauber")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hervorzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hervorzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herwink")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herwink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herwink")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herwink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herzauber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herzeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herzueil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herzukomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herzulauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herzähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herzähl")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "herzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberblick")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberdring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herübergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herübergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "herüberhol")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "herüberhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberkletter")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herüberkletter")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberseh")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herüberseh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberspring")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herüberspring")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herübersteig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herübersteig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herübersteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberstell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberstell")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herüberstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herübertrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "herübertrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herübertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herübertön")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herübertön")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herübertön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberwachs")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "herüberwachs")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "herüberwachs")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "herüberwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberwoll")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "herüberwoll")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "herüberwoll")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "herüberwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "herüberzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "herüberzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "hetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hetz")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "hetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heuchel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heuchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "heuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "heul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hex")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hex")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierhereil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierhergehör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierhernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierhersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierhersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierherstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierhertrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "hierhertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierhertrag")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "hierhertrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierhertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hierhertreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hierherwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hiev")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "hiev")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "himmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinabblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinabrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinabschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinabsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinabstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinabstürz")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "hinabstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinabtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinabtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinarbeit")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufarbeit")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaufarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufbeförder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufbeförder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauffahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauffahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauffall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauffind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauffind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinaufhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufklimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauflang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauflang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauflass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauflass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauflauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauflauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufmüss")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "hinaufmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauftrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauftrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauftrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauftreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauftreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauftu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauftu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufweis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufwind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hinaufwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaufzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaufzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausbeförder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausbeförder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausbegeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausbegleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausbegleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausbeweg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausbeweg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausblas")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausblas")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausblick")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausblick")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausbring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinausbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausdrängel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausdrängel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausdrängel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausdrängel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausdrängel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausdrängel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausdrück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hinausdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausdrück")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hinausdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausdürf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausdürf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauseil")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauseil")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauseil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausekel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausekel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausfall")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausfall")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausfenster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausfenster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausfind")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausfind")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausflieg")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hinausflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausgeh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausgieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausgieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausguck")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausguck")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaushalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaushalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaushalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaushäng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaushäng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaushäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaushäng")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaushäng")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaushäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauskehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauskehr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauskehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauskletter")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauskletter")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauskletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauskomm")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinauskomm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauskomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauskrabbel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauskrabbel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauskrabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauskriech")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauskriech")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauskriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauskönn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauskönn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauskönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauslang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauslang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauslang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauslass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauslass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauslass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauslauf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauslehn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauslehn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinauslehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausmüss")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausmüss")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausreit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausreit")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausrenn")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschaff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschaff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschau")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschau")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausscher")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausscher")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschleich")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschleich")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschlepp")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschlepp")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschlüpf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschlüpf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschmeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschmeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschmuggel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschmuggel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausschmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschwimm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinausschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaussetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaussetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaussetz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaussetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaussoll")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaussoll")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaussoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausspring")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausspring")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausspäh")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausspäh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaussteig")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaussteig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaussteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausstell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausstreck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausstürm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausstürm")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinausstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaustrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaustrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaustrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaustrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaustrag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaustrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaustreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaustreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaustreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaustreib")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinaustreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaustret")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaustret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinaustret")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaustret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinaustu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinaustu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausverleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausverleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausverleg")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinausverleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauswachs")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinauswachs")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauswachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauswag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauswag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinausweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinausweis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauswerf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauswerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauswoll")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinauswoll")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinauswoll")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hinauswoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauszieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinauszieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinauszöger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinbegleit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinbegleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinbemüh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinbemüh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinbestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinbestell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinbrüt")) :v '( (:np . :nom) (:pp :akk "vor") ) )
(insert-subcat-entry (car (morphix-read "hinbrüt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "hinder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hinder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hindeut")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hindeut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hindräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurcharbeit")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hindurcharbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurchfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hindurchfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurchfall")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hindurchfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurchgeh")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hindurchgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurchkriech")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hindurchkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurchpass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hindurchpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hindurchpass")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hindurchpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindurchtret")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hindurchtret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindämmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hindürf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hindürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineil")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hineil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinbeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinbeiß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinbeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinblas")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinblick")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinbohr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinbohr")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinbring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinbring")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineindenk")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineindenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineindräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineindräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineindrück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineindrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineindrück")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineindrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineindürf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hineindürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineineil")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineineil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinfall")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hineinfall")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinfind")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinflieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinflieg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinfließ")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinfress")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinfress")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinfress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineingeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineingeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineingeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineingeh")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineingeheimniss")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingeheimniss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineingeheimniss")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingeheimniss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineingerat")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingerat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineingieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineingieß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineingreif")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineingreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinhalt")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinheb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinheb")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hineinhelf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinhäng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinkletter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinkletter")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinkni")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkni")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinkomm")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinkrabbel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkrabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinkriech")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinkrieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinkrieg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkrieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinkönn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinlauf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinleg")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinles")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinles")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinles")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinmüss")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hineinnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinpass")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinpass")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinpferch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpferch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinpferch")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpferch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinplatz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinpress")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinpress")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinpump")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinpump")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinpump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinred")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinreiß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinreiß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinrenn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinriech")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinruf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschaff")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschaff")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschau")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschein")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschick")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschick")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschieb")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschieß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschlag")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschlag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hineinschlag")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschlepp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschlüpf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschmeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschmeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschmeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschmeiß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschmeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschmuggel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschmuggel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschneid")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hineinschreib")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschütt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinschütt")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinseh")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinsoll")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinsoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:pp :akk "in") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:pp :akk "in") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '( (:pp :akk "in") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hineinspiel")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hineinspring")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinspritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinspuck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinspuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinspuck")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinspuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinspäh")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinsteck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinsteck")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinsteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinsteig")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinsteiger")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinsteiger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstopf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstopf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstopf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstoß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinström")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinstürm")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinstürz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinstürz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineintrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineintrag")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineintreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineintreib")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineintret")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineintropf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineintropf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineintu")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineintu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineintu")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineintu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinwachs")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinwag")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinweb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinweb")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinweb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinweh")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinweh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinweis")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinweis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinwerf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinwoll")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hineinzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinzwäng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinzwäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hineinzwäng")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hineinzwäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinflegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinfläz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinführ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinführ")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hingeb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hingeb")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hingeh")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hingeh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hingeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hingerat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hingerat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hingieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hingieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinhab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinhalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hinhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hinhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinhock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinhorch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinhör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinkauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinkni")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinkomm")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinkrieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinlenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinlenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinlock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinlümmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinmarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinmord")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinmord")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinneig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinneig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinneig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinneig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinneig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinopfer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hinopfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinopfer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinopfer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinopfer")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "hinopfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinpurzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinraff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinreiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinreiß")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinscheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschlacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschlacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschlag")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "hinschlag")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hinschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschmeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschreib")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschreib")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "hinschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinsegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsetz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsiech")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "hinsiech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinstell")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "hinstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinstell")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "hinstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsterb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinsteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinsteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinstreb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinstreck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintansetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintansetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintanstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintanstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinterbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterdreinlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinteress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinteress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintergeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintergieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintergieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinterhergeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinterhergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinterherkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinterherkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinterherlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinterherlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinterkau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterkau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinterlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterlass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "hinterleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "hinterleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintermauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterschluck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterschluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintersinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinterzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hintrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hintu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hintu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterbegeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterbegleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterbegleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterbitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinuntereil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinuntergeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinuntergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinuntergieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinuntergieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinunterhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterkletter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterkomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterkriech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterlass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "hinunterlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterlass")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "hinunterlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinuntermüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunternehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunternehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterschling")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterschling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterschluck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterschluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinuntertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinuntertrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinuntertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinuntertreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinunterwürg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinunterzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinweggeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinweggreif")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinweggreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwegseh")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinwegseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwegsetz")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinwegspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinwegspül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwegtäusch")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinwegtäusch")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hinwegtäusch")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinwegtäusch")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hinweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hinweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinweis")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinweis")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinwelk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinwend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinwerf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinwirk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinwirk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzauber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzauber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzeig")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinzeig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinziel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hinziel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzudenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzueil")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzueil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzufüg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzufüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzufüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzufüg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinzufüg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "hinzufüg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "hinzugeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzugeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzugesell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinzugesell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzuschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzuschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzuschreib")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinzuschreib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hinzusetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzusetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzusetz")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzusetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzutret")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzutret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzutu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzutu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzutu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzutu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzutu")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzutu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzuzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzuzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzuzieh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzuzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzuzähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzuzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzuzähl")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinzuzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberbemüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberbemüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberbitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberblick")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinüberblick")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberdring")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberdring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberdürf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübereil")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinübereil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinübergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinübergeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübergeh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinübergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübergreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hinüberhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberkletter")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinüberkletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberkriech")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberkönn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberlang")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberlass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberlauf")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hinüberlauf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberlock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinübermüss")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinübermüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübernehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinübernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberrenn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschaff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberschall")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschau")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberschlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschlummer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschwimm")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hinüberschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberseh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hinüberseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinübersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hinüberspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberspiel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hinüberspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübersteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinübertreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübertu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinübertu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinübertön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hinüberzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hinüberzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hispanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hispanisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hiss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "historisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hobel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hobel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochheb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "hochkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochkämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochkämm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochspül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochsteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochstelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochstelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochstreb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochtrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochtrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hochzücht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hochzücht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hoff")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hoff")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "hoff")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "hoff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hofier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hohlraumkonservier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hohlraumkonservier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hohlschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hohlschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hohnlach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hohnlächel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hohnsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hol")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "holder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hollographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hollographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "holländer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "holländer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "holz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "holz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "homogenisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hon")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hon")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "honorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hopp")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hopp")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hopp")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hoppel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hoppel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hoppel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hops")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "hops")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "hops")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "hops")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hopsgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hopsnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hopsnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "horizontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "horizontier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "horst")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "horst")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "horst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hort")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hospitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "huck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "huck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "huck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "huck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "huder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "huder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "huldig")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "huldig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "humanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "humifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "humifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "humpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hunger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hunz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hup")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hur")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "husch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "huschel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "huschel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "huschel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "huschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "huss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "huss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hust")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hybridisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hybridisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydratier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydratier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydratisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydratisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydrogenerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydrogenerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydrolisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydrolisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydrolysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydrolysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydrophobier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydrophobier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydroxilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydroxilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hydroxylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hydroxylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hypostasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hypostasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hypothesier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hypothesier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "häftel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häftel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "häkel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "häkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häkel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "häkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hämmer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "hämmer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hämmer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "hämmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hämmer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "hämmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hämolysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hämolysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hängenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hängenlass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "hängenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hängenlass")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "hängenlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hänsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hänsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "här")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "här")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "härm")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "härm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "härt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "härt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hätschel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häuf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "häut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "höfel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "höfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "höh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "höhl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "höhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "höhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hök")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "hök")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "höker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "höker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hörn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hörn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hüll")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hüll")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "hüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hüstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "hüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "hüt")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "hüt")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "hüt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "iah")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "idealisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ignorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ignoszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ignoszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "illuminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "illustrier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "illustrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imaginier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "immatrikulier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "immatrikulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "immatrikulier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "immatrikulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "immediatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "immediatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "immigrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "immobilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "immobilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "immunisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "impf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "impf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "implantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "implantier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "implementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "implementier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "implizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imponier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "imponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "importier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imprimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imprimier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "improvisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "improvisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "imprägnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imputier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "imputier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inaktivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inaugurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inchromier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inchromier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "indexier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "indexier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "indignier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "indignier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "individualisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "indizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "indossier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "indossier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "industrialisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "induzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "induzier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "induzier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "induzier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ineinanderbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ineinanderbau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ineinanderbau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ineinanderbrau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ineinanderbrau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ineinanderbrau")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ineinanderbrau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ineinanderfüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ineinanderfüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ineinandergreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ineinanderkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ineinanderkoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ineinanderpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "infiltrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "infiltrier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "infiltrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "infizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "informier")) :v '( (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "infulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "infulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inhaftier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inhalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inhibier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inhibier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inhärier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "inhärier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "initiier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "injizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "injizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "injungier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "injungier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "injurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "injurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inklinier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "inklinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inkommodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkommodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inkorporier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkrafttret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inkrementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkrementier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inkriminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkrustier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "inkrustier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkrustier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "inkrustier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inkubier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkubier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inkubier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "innehab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "innehab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "innehalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "innehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "innehalt")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "innehalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "innervier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "innervier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "innewohn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "innewohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "innovier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "innovier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inokulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inokulier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inokulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inquirier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "inquirier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "inquirier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inserier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "inserier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insimulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insimulier")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insimulier")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "insimulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "insinuier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inskribier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "inskribier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "inskribier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inskribier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "inskribier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "inskribier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "insolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inspirier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "inspirier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inspirier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "inspirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inspizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "installier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instandbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instandbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instandhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instandhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instandsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instandsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instaurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instaurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instillier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instituier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "institutionalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "institutionalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instradier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instradier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instruier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instrumentier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "instrumentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instrumentier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "instrumentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "instuier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "instuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "instuier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "instuier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "insultier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insurgier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "insurgier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inszenier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intabulier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "intabulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intabulier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "intabulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "intarsier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intarsier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "integrier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "integrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intendier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "intensivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interdizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interdizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interdizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "interessier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "internationalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "internier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "internier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interpellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "interpolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interpolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "interpretier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "interpretier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interpungier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interpungier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "interpunktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interpunktier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "intervenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "interview")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "interview")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "interzedier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "interzedier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inthronisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "intonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "intrigier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "intrigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "inventier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inventier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "invertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "invertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "investier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "investier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "invitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "invitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "involvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inzidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "inzidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ionisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ionisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ionitrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ionitrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "irisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ironisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "irr")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "irr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "irrefahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "irreführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "irregeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "irreleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "irremach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "irrered")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "irritier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "isolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "isolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "isomerisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "isomerisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "italianisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "italianisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jag")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "jag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jammer")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "jammer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "japp")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "japp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jarowisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jarowisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jauchz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jaul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jobb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jodel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jodel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "johl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jonglier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jubel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jubilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "juck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "judizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jung")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "jungier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "jungier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jungier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "jungier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "justier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "justifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jät")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "jüdel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kabel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kabel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kabel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kabel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kabel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kablier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kablier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kabotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kachel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kachel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kadenzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kadmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kadmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaduzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaduzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kahlfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kahlscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kahm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kajolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kajolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kakel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kakel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "kakel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalandrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalandrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalfater")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalibrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalkulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalkulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalorisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaltstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaltwalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaltwalz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kalzinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kalzinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kambier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kamier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kampel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kampel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kampier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kanalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kandidier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "kandidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kannelier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kannelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kanonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kanonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kanonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kant")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kantel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kantel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kantonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kantonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kanzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kanzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kanzellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kanzellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaper")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "kaper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaper")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kapier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kapitalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kapitulier")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "kapitulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kapriol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaprizier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "kapsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kapsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaptivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaptivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaputtgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaputtlach")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kaputtlach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karambolier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "karambolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karamelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karamelisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karamelisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karbatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karbatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karbonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karbonitrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karbonitrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karboxilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karburier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karburier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kard")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kard")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karessier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karessier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "karg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "karg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karikier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karikier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karmosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karmosier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "karossier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "karr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kartellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kartier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kartonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kartonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kartätsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaschier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kaschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kasemattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kasemattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kasernier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kasernier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kasper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kassettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kassettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kastei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kastigier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kastigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kastrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katalogisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katalysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katapultier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katapultier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katastrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katastrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katechetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katechetisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kategorisier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kategorisier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "kategorisier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "kategorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katheterisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katheterisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katholisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katholisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kationisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kationisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "katt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katzbalg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "katzbalg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "katzbuckel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "katzbuckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kau")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "kau")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "kau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kauder")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kaupel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kausier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kausier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kauterisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kauterisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kautschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kautschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kecker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kehr")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "kehr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kehr")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kehr")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kehrtmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "keif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "keil")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "keil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "keil")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "keil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "keim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "keller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "keller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kellner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kelter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kelter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kenn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "kenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kenn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "kenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kennenlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "kennzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kenter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "keramisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "keramisier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "keramisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kerker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kerker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kessel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kessel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kett")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "kett")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "kettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kettel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "keuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kibbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kicher")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kicks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kicks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kidnapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kiebitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kiek")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kielhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kielhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kill")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kilometrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kilometrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kippel")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "kippel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kippel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kirn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kitzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kitzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klabaster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klafter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "klag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klammer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "klammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klammer")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "klammer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klamüser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klapper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klaps")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klaps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klargeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klarkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "klarkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klarleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klarleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klarmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klarmach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klarseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klarstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klassier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "klassier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "klassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klassifizier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "klassifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klater")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "klater")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "klater")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klater")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "klater")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "klater")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klatsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klatsch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "klatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klausulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klausulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kleb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "kleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klebenbleib")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "klebenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kleck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klecker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klecker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kleib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleid")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kleid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleid")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kleid")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kleindruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleindruck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kleinhack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleinkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleinschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleinschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klemm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klempner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kleng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kleng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kletter")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "kletter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klimatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klimper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klimper")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klimper")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "klimper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klingel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "klingel")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "klingel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klink")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "klink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klips")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klischier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klischier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klistier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klistier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klon")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klon")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klopf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "klopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klopf")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "klopf")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "klopf")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "klopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klugred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klugschnack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kläff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kläpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klär")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "klär")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "klär")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "klär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klär")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "klär")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kläter")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kläter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "kläter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kläter")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kläter")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "kläter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klöhn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "klöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klön")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "klön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klöppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "klöppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klügel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "klügel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "klüter")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "klüter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knabber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knabber")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "knabber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knacks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knall")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knapp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knapp")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "knapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knapper")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "knapper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knapper")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "knapper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knapphalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "knapphalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knapphalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knaps")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knaps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knaster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knaupel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "knaupel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knauser")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knauser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knautsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kneif")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kneif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kneif")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "kneif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kneip")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kneip")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kneip")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kneipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kni")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knicker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knicks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knips")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knips")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knirsch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knirsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knister")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knobel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "knobel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "knobel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knorz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knosp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knuff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knuff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knurr")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "knurr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "knurr")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "knurr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knusper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knusper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knutsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knutsch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "knutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knäuel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knäuel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knöchel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "knöchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "knüpf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "knüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knüsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "knüsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koagulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koagulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koaleszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kobolz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kodder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koexistier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kohibier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kohibier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kohl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kohärier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koinzidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koinzidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kok")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kok")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kokel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kokettier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kokettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kollabier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kollabier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kollektivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kollidier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "kollidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kolliminier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kolliminier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kolliminier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kolliminier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kolliminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kolloidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kolloidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kolludier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kolludier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kolmatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kolonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kolorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kolportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kombinier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kombinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kombinier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kombinier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kombinier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kombinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "komm")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "komm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "komm")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kommandier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommandier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kommassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kommemorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommemorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kommentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommerzialisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommittier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "kommittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommunalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommunalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kommunizier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kommunizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kommutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kommutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "komparier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kompensier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "kompensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kompensier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "kompensier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kompensier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kompensier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kompilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komplementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komplettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komplexier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komplexier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "komplimentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komplizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komplottier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "komponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kompostier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "komprimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kompromittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kompromittier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kon")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kon")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kon")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kondensier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "kondensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kondensier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "kondensier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konditier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konditionier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "konditionier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "konditionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konditionier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "konditionier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "konditionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kondolier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "kondolier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "kondolier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "kondolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konfektionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konferier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "konferier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konferier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konfigurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konfigurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konfinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konfinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konfirmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konfiszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konfligier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konfligier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "konfligier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konfligier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konfluier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konfrontier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konfrontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konfundier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konfundier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konföderier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konföderier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konjizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konjizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konjugier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konjungier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konkludier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "konkludier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "konkludier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "konkludier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konkretisier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "konkretisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konkurrier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konkurrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konsekrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konsekrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konsentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konsentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konservier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konsignier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konskribier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konskribier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konsolidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konspirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konstatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konstatier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "konstatier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "konstatier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "konsternier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konsternier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konstituier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konstituier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konstringier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konstringier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konstruier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konsultier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konsumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontaktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontaktier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontaminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konter")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konterfei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konterfei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konterkarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konterkarier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontextänder")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kontextänder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontextänder")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "kontextänder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontingentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontinuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontinuier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontrasignier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontrasignier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontrastier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kontrastier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kontrastier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "kontrastier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontravenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontribuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontribuier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kontrollier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kontumazier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konvenier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konvenier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "konvenier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konvenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konvergier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "konvergier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konversier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "konversier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konvertier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "konvertier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "konvertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konvertier")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "konvertier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "konvertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konzedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konzentrier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "konzentrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konzeptualisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konzeptualisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konzertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konzertier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "konzertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "konzessionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konzipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "konzipier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kooperier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kooperier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kooptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koordinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kopfsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kopier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "kopier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koppel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "koppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koppel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "koppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kopulier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kopulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kopulier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kopulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koramier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koramier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "koranz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "koranz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kordier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kordier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kork")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "korreferier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "korrelier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "korrelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "korrepetier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "korrepetier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "korrepetier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "korrepetier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "korrespondier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "korrespondier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "korrigier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "korrigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "korrodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "korrodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "korrumpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "korrumpier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kos")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kos")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kos")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kost")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "kost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kost")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "kost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kostümier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "kostümier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kostümier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "kostümier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kotonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kotonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krabb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krabbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krakeel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "krakeel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krakel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krakel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kram")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "kram")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kramp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "kramp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krank")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "krank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krankfeier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kranklach")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "kranklach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krankmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krankmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kratikulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kratikulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kratz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kratz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krauel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krauel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kraul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kraul")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kraul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kraus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kraut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krawl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kraxel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krebs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kredenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kredenz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreditier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreditier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreditier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreis")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kreis")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kreis")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreisel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kremier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krenelier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krenelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krengel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "krengel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krepier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreuz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kreuz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreuz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kreuz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kreuzig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreuzkoppel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kreuzkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kreuzkoppel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kreuzkoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kriech")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "kriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "krieg")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "kriminalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krimp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krimp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kripp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krisel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krispel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krispel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kristallisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kristallisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kritisier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "kritisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kritisier")) :v '( (:np . :nom) (:pp :dat "an") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kritisier")) :v '( (:np . :nom) (:pp :dat "an") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kritisier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kritisier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "krittel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "krittel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kritzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kritzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krockier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krockier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krokier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krokier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kroquier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kroquier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krummnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krummnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krummschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krumpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krumpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krumpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krumpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kruppier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kruppier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krächz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kräh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kränkel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "kränkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kräusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krön")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "krön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kröpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kröpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krösel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krösel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krümel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krümel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krümm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krümpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krümpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "krüppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "krüppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kubier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kugel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kugel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "kugel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kujonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kujonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kuller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kuller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kulminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kultivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kumulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kumulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kundgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "kundgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kundgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "kundgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kundmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kundmach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kundtu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kundtu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kundtu")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "kundtu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kupellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kupellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kupier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kupier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kuppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kur")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurbettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "kurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kurpfusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kursier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurv")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurzarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurzhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kurzhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kurzschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kurztret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kuschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kutschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kutschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kutt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kutt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kuvertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kuvrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kuvrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kyanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kyanisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kälber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kält")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kält")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kämm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kämm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kämm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kämm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "kämm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kämmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kämmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kämpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "käs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kästel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kästel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "käu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "käu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "köder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "könn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "könn")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "könn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "köpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "köpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "körn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kübel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kübel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "küchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kümmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kümmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kümmer")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "kümmer")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "kümmer")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "kümmer")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "kümpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kümpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "künd")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "künd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kündig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kündig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kündig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "künstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kür")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "kür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kürettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "kürettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "kürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "küss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "küss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "küvelier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "küvelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "labber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laborier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "laborier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "labsalb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "labsalb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "labsalb")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "labsalb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lach")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "lach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lackier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lackier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lackmeier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lackmeier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lad")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "lad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lafettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lafettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lahm")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "lahm")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "lahm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laich")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "laich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "laktier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lamellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lamellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lamentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lancier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "lancier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "land")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "land")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "langettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "langettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) (:subclause . "inf") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "langweil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lanzinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lass")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "last")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "last")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laterier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "laterier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "latsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "latsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laudier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "laudier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lauer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "lauer")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lauer")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lauer")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lauer")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "laus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "laus")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lausch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "lausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laut")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "laut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "laut")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "laut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lautier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lautier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lavier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lavier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "laxier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lazerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leb")) :v '( (:np . :nom) (:np . :gen) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "leb")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "leb")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "leb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lechz")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "lechz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leck")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "leder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leerlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leerpump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leerpump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leersaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leersaug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "legalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "legier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "legitimier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "legitimier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "legitimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lehn")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "lehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) (:np . :akk2) ) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leichter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leichtnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "leid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leih")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "leih")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "leih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leih")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "leih")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "leim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "lern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "les")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lesbarmach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "lesbarmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leucht")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "leucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "leugn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "leugn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liberalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "licht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lichthup")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liebbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liebel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "liebel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liebgewinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liebhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liebkos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liebäugel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "liebäugel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liefer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "liefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liefer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liefer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "liefer")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "liefer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lieg")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry "lieg" :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "lieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liegenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liegenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ligier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ligier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "liier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "limitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "linder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "linearisier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "linearisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "linearisier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "linearisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "linier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lins")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "liquidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "liquidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lispel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "list")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "list")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lithographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lithographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "litigier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "litigier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "litigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lizenzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lizitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lizitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lob")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "lob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lob")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "lob")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lob")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "lob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lobhudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lobhudel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lobhudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lobpreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lobsing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lobsing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "lock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lock")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lock")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "lock")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "lock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "locker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "locker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "logarithmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "logarithmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "logier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "logier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lokalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lombardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "longier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "longier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "los")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "los")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losbekomm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losbind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losbind")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losbrech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losbrech")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losbring")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losdonner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losdreh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losfahr")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "losfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loskauf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loskauf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loskett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loskett")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loskomm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "loskomm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loskoppel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loskoppel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loskrieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loskrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loslach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loslass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loslass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losleg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "losleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loslös")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loslös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "loslös")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loslös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losmach")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losreiß")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lossag")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lossag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losschlag")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losschraub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losschraub")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lossprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lossprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lossprech")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lossprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losspreng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "losspreng")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losspring")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "losspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lossteuer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "lossteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "losstürz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "losstürz")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "losstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lostrenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lostrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lostrenn")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lostrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loswetter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "loszieh")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "loszieh")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "loszieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lot")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lots")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lotter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lozier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "lozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lozier")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "lozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "luchs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "luchs")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "luchs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "luder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lull")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "lull")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lull")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "lull")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lumineszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lunch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lunger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lunz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lupf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lustrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lustwandel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "lustwandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lutsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "lutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lutsch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "lutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "luv")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "luxurier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lynch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lyophilysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lyophilysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lächel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lähm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lähm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "läng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "läng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "läpp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "läpp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "läster")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "läster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "läster")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "läster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "läut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "läut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "läuter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "löcher")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "löcher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "löck")) :v '( (:np . :nom) (:pp :akk "wider") ) )
(insert-subcat-entry (car (morphix-read "löck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "löffel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "löffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "löffel")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "löffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "löhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "löhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lös")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lös")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "löt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lötterl")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "lötterl")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "lötterl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lüft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lüft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lüg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "lüg")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "lüg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "lüg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "lüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lümmel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "lümmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "lüpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "lüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "lüstrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "mit") ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:np . :akk) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:pp :gen_dat_akk "auf") ) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "mach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "magatinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "magatinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "magazinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "magnetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maikäfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "majorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "majorisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "makadamisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "makel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "makel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mal")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mal")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maledizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maledizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "malm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "malm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "malnehm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "malnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "malnehm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "malnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "malträtier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "malz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "malz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "manag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mandatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mangel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mangel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mangel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mangel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manifestier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "manifestier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "manifestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manifestier")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "manifestier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "manifestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "manikür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manikür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manikür")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "manipulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manipulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mankier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mankier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mansch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mansch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mansch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mansch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mansch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mansch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mantsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mantsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mantsch")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mantsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "manufakturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manövrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "manövrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mappier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mappier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "marinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "marinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "markier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "marl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "marl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "marmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "marmorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "marodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "marschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "marter")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "marter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maschineschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maschineschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maskier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "maskier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maskier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maskier")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "maskier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "massakrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "massier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "masturbier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mater")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mater")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "materialisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "materialisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "matrizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "matrizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "matsch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "matsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maturier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maul")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "maul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maunz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mauschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mausel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mauser")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mauser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mauz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maximier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mazerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maßhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "maßregel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maßschneider")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "maßschneider")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mechanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mechanisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "medaillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "medaillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mediatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mediatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "medisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "medisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meditier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "meid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "mein")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "meißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "meißel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "meld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meliorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "melk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "melk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "memmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "memorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "menagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mendel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "meng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "meng")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "meng")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "menschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "merk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "merk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "merk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "merzerisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "merzerisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mess")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mess")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "metabolisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metabolisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "metallier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "metallier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metallier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "metallier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "metallisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metamorphosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metamorphosier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "methodisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "methodisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "methylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "methylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "metz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "metzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metzg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "metzg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "metzger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meuchel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "meuchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "meuter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "miau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mief")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "mief")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "miesmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miesmach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miesmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "miet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mikroskopier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mikroskopier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mikroverkapsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mikroverkapsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "milch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "milder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "milder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "militarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "minder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miniaturisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "minier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "minier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "minimalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "minimalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "minimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ministrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "minn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "misch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "misch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "missionier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "missionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "missionier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "missionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitarbeit")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mitarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbehandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbehandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbekomm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "mitbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbenutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbesitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbesitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbestimm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitbestimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbestimm")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitbestimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbetätig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbetätig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbewach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "mitbewach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbewach")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "mitbewach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbewerb")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "mitbewerb")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitbewerb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitdenk")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitdenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "miterb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miterb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "miterfass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "miterleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miterledig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "miterledig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "miterledig")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "miterledig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitfreu")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "mitfreu")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitfreu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitfühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mithab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mithalt")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mithalt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mithalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mithelf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "mithelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mithelf")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "mithelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mithör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mithör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mithör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mithör")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mithör")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mithör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitkling")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitkämpf")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitkämpf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mitkämpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitlackier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitlackier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitleid")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitlern")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitlern")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitlern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitles")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitmach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitmach")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitrechn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitred")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitred")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mitred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitschwing")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitschwing")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mitschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitsing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitsing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitsoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mitspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitspiel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mitspiel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitspiel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "mitspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitsprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitsprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitsprech")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mittanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mittanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mittel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "mittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mittel")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "mittel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mittrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mittrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mittrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mittrink")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mittrink")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mittrink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mittrink")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mittrink")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mittrink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mittu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mittu")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mittu")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mittu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mittön")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mittön")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mittön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitunterschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitunterschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitunterzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitunterzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitverantwort")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitverantwort")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitverpflicht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitverpflicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitverpflicht")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitverpflicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mitvertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitverursach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "mitverursach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitverursach")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitverursach")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitverwend")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitverwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitverwend")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitverwend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitwirk")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "mitwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitwirk")) :v '((:subclause . "dass") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mitwoll")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "mitwoll")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mitwoll")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "mitwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mitzähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mitzähl")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mitzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mix")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißacht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mißacht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "mißacht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mißart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißbehag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mißbehag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißbillig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißbrauch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mißbrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißbrauch")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mißbrauch")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mißdeut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mißfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißglück")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mißglück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißgönn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißgönn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißhandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißrat")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mißrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißtrau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mißtrau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißtön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mißversteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mißversteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mobilisier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "gegen") ) )
(insert-subcat-entry (car (morphix-read "mobilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mobilisier")) :v '( (:np . :nom) (:pp :dat "gegen") ) )
(insert-subcat-entry (car (morphix-read "mobilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mobilmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mobilmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "model")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "model")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "modellier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "modellier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "modellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "modellier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "modellier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "modellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "moder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "moderier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "modernisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "modifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "modulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "modulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mogel")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "mogel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mokier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "mokier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "molestier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "molestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "moloch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "moloch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "monier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "monier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "monochromasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "monochromasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "monologisier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "monologisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "monophthongier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "monophthongier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "monopolisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "montier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mops")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mops")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "moralisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mord")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mord")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mors")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mors")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mors")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "morsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mortifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mortifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mosch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "mosch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "most")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "most")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "motivier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "motivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "motorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "motorisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mouillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mouillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "moulinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "moulinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "moussier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muck")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "muck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mucks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "muffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "muld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mulinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mulinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mulm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mulm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "multiplexier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "multiplexier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "multiplizier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "multiplizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "multiplizier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "multiplizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mumifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mumifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mumm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "mumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mummel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "mummel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mund")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "mund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mundier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mundier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mundier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "munizipalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "munizipalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "murks")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "murks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "murmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "murmel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "murmel")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "murmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "murr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "musizier")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "musizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "muster")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "muster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mutier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "mutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mutilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mutilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mystifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mäandrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mäandrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mäkel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "mäkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mälz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "märk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mäst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mäst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mäusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mäßig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mäßig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "möbel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "möbel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "möbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "möbel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "möbel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "möbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "möblier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mög")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mög")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "mög")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "mög")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "mög")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "mög")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "müd")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "müd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mümmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "münd")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "münd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "mündigsprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "mündigsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "münz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "münz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "müss")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "müss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "müßiggeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nacharbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nacharbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachart")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachbehandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbereit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbezahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbezahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachblick")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachblut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachbohr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbohr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachbrumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachbrumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachdatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdenk")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "nachdenk")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachdenk")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachdenk")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachdenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachdicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdicht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachdring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdring")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachdring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachdruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachdunkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nacheifer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nacheifer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nacheil")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nacheil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachempfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachempfind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nacherzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachexerzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachexerzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachfahr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfeier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachfeier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachflieg")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "nachflieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachflieg")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "nachflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfolg")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachfolg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachfolg")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachfolg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachforder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachforsch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachforsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfärb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachfärb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachfühl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachfühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachgeb")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachgerat")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachgerat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachgieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachgieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachgrübel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "nachgrübel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachguck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachguck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachgär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachhall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachhalt")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachheiz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachheiz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachheiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachhelf")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachhink")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachhink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachhäng")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachimpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachimpf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachimpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachjag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachkleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachkleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachkling")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachkontrollier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachlass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachleb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachlern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachlös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachlös")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachmal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachmal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachmess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachordn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachpass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachpfeffer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachpfeffer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachplapper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachplapper")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachplapper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachpolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachpolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachpräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachpräg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachprüf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachrechn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachred")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachregulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachregulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachreinig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachreinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachreinig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachreinig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachreis")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachreit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachrenn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachrühm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachrühm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachrühm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschaff")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschleich")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschlepp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschmeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschmeiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschrei")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschwatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschwatz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschwatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschwimm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsegel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachseh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsend")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsetz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachsing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsing")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsinn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachsinn")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "nachsinn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachsinn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachsinn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachsinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachspreng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachspreng")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachspreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachspring")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachspäh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachspül")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachspül")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nachspül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachspür")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachspür")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsteh")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachsteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachsteh")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsteig")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachsteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachstenographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachstenographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachstreb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachstürz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachsuch")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "nachsuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachsüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachsüß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachtmahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachtrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachtrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachtrauer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachtrauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachtu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachtu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachtu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachtwandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachtön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachverfolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachverfolg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachverlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachverlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachversicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachvollzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachvollzieh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachvollzieh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachvollzieh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachwein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwein")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nachweis")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nachweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwirk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "nachwirk")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nachwirk")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nachwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachwoll")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachwürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachwürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachzockel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachzottel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachzuckel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nachzucker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzücht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachzücht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachzünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nachäff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nachäff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nadel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "nag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nag")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "nag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nagel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nahebring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nahebring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nahegeh")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nahekomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nahekomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "naheleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "naheleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nahesteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nahesteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nahetret")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "narb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "narkotisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "narkotisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "narr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nasalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nasch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "nasch")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "nasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nasführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nassauer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "nassauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nationalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "naturalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "navigier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "navigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nebeneinanderleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nebeneinanderleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nebeneinanderschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nebeneinandersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nebeneinandersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nebeneinanderstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nebeneinanderstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nebenordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nebenordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nebenordn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "neck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "neck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "negativier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "negativier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "negier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "negligier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "negozier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "negozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nehm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "nehm")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "nehm")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "neid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "neid")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "neid")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "neig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "neig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "neig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "neig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nenn")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "nenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nenn")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "nenn")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "nepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nergel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "nergel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "neuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "neutralisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nibbel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "nibbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nidel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederbeug")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "niederbeug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "niederbeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederbeug")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "niederbeug")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "niederbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederbring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "niederbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederdonner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederdonner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedergleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedergleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederkni")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederknüppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederkämpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedermetzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedermetzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedermäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederprassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederrausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedersaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederschmetter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederschmetter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "niedersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedersetz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "niedersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedersink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedersitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederstampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederstampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederstech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedersteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "niederstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederstoß")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "niederstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "niederstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederstreck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "niederstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedersäbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedersäbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedertrampel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedertrampel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niedertret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niedertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niederwerf")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "niederwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niederzwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "niellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nies")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "niet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nießbrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nießbrauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nießnutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nießnutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nist")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "nist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nitrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nitrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nitrifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nitschel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nitz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nivellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nivellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nobilitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nomadisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nomadisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nominier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "nominier")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "nominier")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "nominier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nord")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nord")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "norm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "normalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "normalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "normier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "normier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nostrifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "notifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notland")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notland")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nottauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notwasser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "notwasser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "novellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nuancier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nuckel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "nuckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nukleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nukleier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "null")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nullifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "numerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nummer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nuschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nutrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nutrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nutz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "nutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nutz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "nutz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nutz")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "nutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nächt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nächtig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "näh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "näh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "näher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "näher")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "näherbring")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "näherbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "näherbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "näherbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "näherkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "näherlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nähersteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nähersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nähertret")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nähertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nähr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "nähr")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nähr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nähr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "näsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "näss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "näss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nörgel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "nörgel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nötig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nötighab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nötighab")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nötighab")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "nüchter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nüchter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "nütz")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "objektivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "objektivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "oblieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "octylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "octylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:predicative :np :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "offenbar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "offensteh")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "offerier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "offerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "okkupier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "okkupier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "omittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "omittier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "onanier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "onanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ondulier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ondulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ondulier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ondulier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "onkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "opaleszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "opalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "operationalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "operationalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "operier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "operier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "opfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "opfer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "opfer")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "opfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "opponier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "opponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "opponier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "opponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "optier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "optier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "optier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "optimalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "optimalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "optimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "orakel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "orchestrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "order")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "order")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ordinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ordinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ordn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ordn")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ordn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "organisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "organisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "orgel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "orientier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "orientier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "orientier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ornamentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ort")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "oszillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "oxidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "oxidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "oxydier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ozonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ozonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paar")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "paar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paar")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "paar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pack")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "pack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pack")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "pack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "packel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paddel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paginier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paketier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "paketier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "palaver")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "palettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "palettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "palpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "palpier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "palpitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "panaschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "panaschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paneelier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paneelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "panier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pansch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pansch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pantsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pantsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "panzer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "panzer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "panzer")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "panzer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "papp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "papp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parabolisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "parabolisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paradier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "paradier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paraffinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paraffinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parallelisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paralysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paraphier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paraphier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paraphrasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "parfümier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "parfümier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "parfümier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "parfümier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "park")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "park")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parkettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "parkier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "parkier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parlamentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parlier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "partier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "partier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "partizipier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "partizipier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "parzellier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paspel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paspel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paspelier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paspelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "pass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pass")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "pass")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "pass")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "passepoilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "passier")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "passier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "passier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "passier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "passier")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "passionier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "passivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pasteurisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "patentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "patinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "patronier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "patronisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "patrouillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "patsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "patz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "pauk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pauperier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "paus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pauschalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pazifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "paziszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pedikür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pedikür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pedikür")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pegel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "pegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "peil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "peil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "peinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "peitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "peitsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pekzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pekzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pelletier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pelletier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pelletisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pelletisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pendel")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "pendel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "penetrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pensionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perfektionier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "perfektionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perfektionier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "perfektionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perforier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perhorreszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perhorreszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "periodisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "periodisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "periphrasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perkolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perkolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perkutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perkutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perl")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "perl")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "perl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perlustrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perlustrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "permittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "permutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "permutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perorier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perpetuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perseverier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "perseverier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "persiflier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "personalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "personalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "personifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "persuadier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "persuadier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pervertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pervertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "perzipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pes")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "petrifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "petschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "petschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "petz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "petz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pexier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pexier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfeffer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pferch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "pferch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pflanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pflaster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pflatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pflatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pflaum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pfleg")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "pfleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pflicht")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "pflicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfläster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pfläster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pflück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pflüg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "pflüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pflüg")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "pflüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfropf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "pfropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pfropf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "pfropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pfähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pfänd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pfänd")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "phantasier")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "phantasier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "phantasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "philosophier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "philosophier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "phobier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "phobier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "phosphatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "phosphatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "phosphoreszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "photographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "photographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "photokopier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "photokopier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "phrasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "piaffier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pichel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "pick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pick")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "pick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "picker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "picknick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "piek")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "piek")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pieks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pieks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "piep")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pieps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "piesack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "piesack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pietsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pietsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pigmentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pigmentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pikier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pikier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pilger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pilotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pimpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pinkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pinsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pinsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pipettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pipettier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pipettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pirouettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pirsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pispel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pisper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "piss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "placier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "placier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "placier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pladder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "plag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plag")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "plag")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "plag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plagiier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plagiier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plakatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plakatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plan")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plan")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "plan")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "plan")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "plan")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "planbearbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "planbearbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plandreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plandreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "planfräs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "planfräs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "planier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plansch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "planschleif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "planschleif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plantsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "planzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "planzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plapper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plapper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plasmanitrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plasmanitrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plastifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plastifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plastizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plastizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "platinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "platinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "platsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plattier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "platz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "platz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "platz")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "platz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plauder")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "plauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plausch")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "plausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plauster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plauz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plauz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plazier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plazier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plemper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plenter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plenter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pliier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pliier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plinker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plins")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plissier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plombier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "plombier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pluder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plumps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pluster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plädier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "plädier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plänkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plärr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plätscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plätt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plätt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "plätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "plünder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "poch")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "poch")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "poch")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "poch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pochier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pointier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pointier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "poker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pokulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "polarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "polemisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "polier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "polier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "politisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "politisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "polster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "polter")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "polter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "polychromier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "polychromier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "polymerisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "polymerisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pomadisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pomadisier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pomadisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "popel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "popel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "popularisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "porosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "porosier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "portier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "portionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "portraitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "portraitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "posamentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "posamentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "posaun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "poschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "poschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "posier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "positionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "post")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "post")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "postier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "postier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "postulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "potentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "potentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "potenzier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "potenzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "poussier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "poussier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pracher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prahl")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "prahl")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "prahl")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "prahl")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "prahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "praktizier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "praktizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "praktizier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "praktizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prall")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "prall")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "prall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prang")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "prang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pranger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pranz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "predig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "preis")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "preis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "preis")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "preis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "preisgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "preisgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "prell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "presch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "press")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "press")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prickel")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "prickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "priem")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prill")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "prill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prill")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "prill")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pritsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pritsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "privatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "privatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "privilegier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "probier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "probier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "problematisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "problematisier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "problematisier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "problematisier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "produzier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "produzier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "produzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "profanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "profilier")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "profilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "profitier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "profitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "programmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prohibier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "projektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "projizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "proklamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "proletarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "proliferier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prolongier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "promenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "promovier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "promovier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "promovier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "promovier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "promulgier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prononcier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prononcier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "propagier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "propf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "propf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prophezei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prophezei")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prorogier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "proskribier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prospektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prospektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prosperier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "protegier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "protestier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "protestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "protokollier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "protokollier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "protokollier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "protokollier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "protokollier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "protrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "protrahier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "protz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "protz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "proviantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "provozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prozedier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prozessier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "prozessier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prunk")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "prunk")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "prunk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prädestinier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "prädestinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prädestinier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "prädestinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prädisponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prädizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prädizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prädominier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präformier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präkavier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präkludier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präkludier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präkonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präkonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präliminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präliminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präludier")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "präludier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prämier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pränumerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pränumerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präokkupier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präokkupier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präparier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "präparier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "präparier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präparier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "präparier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "präparier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präponderier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "präsentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präservier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präsidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präsidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präskribier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präskribier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prästabilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prästabilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prästier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prästier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präsumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prätendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prätendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prävenier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prävenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präzipitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "präzipitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "präzisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pröbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "prüf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "prügel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "prügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "prügel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "prügel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "psalmodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "psychiatrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "psychiatrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "publizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "publizier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "publizier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "publizier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "pucker")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "pucker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "puder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "puder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "puder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "puff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "puff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pul")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "pul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pull")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "puls")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "puls")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pulsier")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "pulsier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pultrudier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pultrudier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pulver")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pulver")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pulverisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pump")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "pump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pump")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pumper")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "pumper")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "pumper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "punkt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "punkt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "punktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "punktschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "punktschweiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "punz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "punzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pup")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pupper")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "pupper")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "pupper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pups")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "purgier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "purgier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "purifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "purifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "purr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "purr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "purr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "purr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "purzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "push")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pust")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "pust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pust")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "pust")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pust")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "pust")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "putreszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "putsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "putt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "putt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "putz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "putz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "pyrolysier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pyrolysier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "päppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pökel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pönalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "pürsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quackel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quacksalber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quadrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quakel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "qualifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "qualifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "qualm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "qualm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "qualster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quantel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quantifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quantisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quantitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quassel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quatsch")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "quatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quengel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "querschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "querschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "querschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "querstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "querstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "querulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ques")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quetsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quetsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quetsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quidder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quiek")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quieks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quieszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quietsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quinkelier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quirl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "quirl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quirl")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "quirl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quittier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "quittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quittier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "quittier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quotisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quäk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "quäl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "quäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "quäl")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "quäl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rabattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rabattier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rackel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "racker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "radebrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "radebrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "radel")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "radel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "radfahr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "radfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "radier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "radier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "radikalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "radikalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "radizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raffinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rag")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "rag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "rag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rain")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "rain")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rain")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "rain")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rajol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rajol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ralliier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ramm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "ramm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ramponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ramsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "randalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rangel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rangier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "rangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rangier")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "rangier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rank")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "rank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ranz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ranzionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ranzionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rappel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rapportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rapportier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rapportier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raps")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rapsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rapsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ras")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rasaun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rasier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rasier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rasier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rasier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rasier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rasier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raspel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rassel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rast")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "rast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rastrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ratifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ratinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ratinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rationalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rationalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rationier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ratsch")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ratsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ratter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raub")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rauf")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "rauf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rauh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raun")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "raun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raunz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "raup")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rayonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reagier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "reagier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "reagier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "reagier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "reagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reaktivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "realisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "realisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reassumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reassumier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rebellier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "recherchier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "recherchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rechn")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "rechn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rechn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rechn")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "rechn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "rechtfertig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "red")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "red")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "red")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "red")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "red")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "red")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "redigier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rediskontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rediskontier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "redressier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "redressier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reduplizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reduzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "refaktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "referier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "referier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "reflektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reflexier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "reflexier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "reflexier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "reflexier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "reflexier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reformier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "refrakturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "refrakturier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "refundier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "refüsier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "regalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "regel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "regel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "regel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "regel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "regel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "regenerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "regenerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "registrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "registrier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "registrier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "registrier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "registrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reglementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "regn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "regulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "regulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rehabilitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "reib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reib")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "reib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reicher")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "reicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reicher")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "reicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reif")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "reif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reih")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "reih")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reiher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reim")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "reim")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "reim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reim")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "reim")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "reim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reinfall")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "reinfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reinig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "reinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reinig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "reinig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reinig")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "reinig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reiser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "reit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reit")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "reit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "reiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reiß")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "reiß")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "reiß")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "reiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rejizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rejizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekapitulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rekapitulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reklamier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "reklamier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reklamier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "reklamier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekognoszier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rekommandier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rekompensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "rekonstruier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "rekonvaleszier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekreier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rekreier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekriminier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "rekriminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekrutier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "rekrutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rektifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rektifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rekurrier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "rekurrier")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "rekurrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "relativier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "relegier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "relegier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "remedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "remilitarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "remittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "remittier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "remonstrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "remontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "remontier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "removier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "removier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "remplacier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "remplacier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "remunerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "renn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "renn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "renn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "renn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "renommier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "renoncier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "renoncier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "renovier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "renumerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "renunzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "renunzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reokkupier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reokkupier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reorganisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reoxidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reoxidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reparier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repartier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "repassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "repatriier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repetier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repetier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "replantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "replantier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "replantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "replizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "replizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reprivatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reprivatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reproduzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reprojizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reprojizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "repräsentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repräsentier")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "repräsentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "repulpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repulpier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "repunzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "repunzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "requirier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reservier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reservier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "resezier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "resezier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "residier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "resignier")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "resignier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "resistier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "resistier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "resolvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "resolvier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "resorbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "resorbier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "respektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "respirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "respondier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "respondier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ressortier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ressortier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "restaurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "restier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "restringier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "restringier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "resultier")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "resultier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reszendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reszendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "resümier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retablier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retablier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retouchier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retouchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retournier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retournier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retrodatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retrodatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retrovertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retrozedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "retrozedier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "rett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "retuschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revakzinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revalier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "revalier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revalier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "revalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revalorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revalorisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revanchier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "revanchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reverberier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reverberier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reversier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reversier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revindizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revindizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revoltier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revolutionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revolutionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "revozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "revozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rezensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rezeptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rezeptier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rezidivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rezipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reziprokier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "reziprokier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rezitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rezitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "reüssier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "reüssier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "reüssier")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "reüssier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rhodinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rhodinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rhytmisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rhytmisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ribbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ribbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "richt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "richtiglieg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "richtiglieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "richtigmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "richtigstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "riech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "riech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "riech")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "riech")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "riech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "riefel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "riefel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "riegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "riegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "riesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "riffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rigol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rigol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rikoschettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rikoschettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rinder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ringel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ringel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "ringel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rinkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rinkel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rinkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rippel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "riskier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "riskier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ristornier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ristornier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ritualisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ritualisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ritz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ritz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rivalisier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rivalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "robb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "robot")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "robotisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "robotisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rochier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rod")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rodel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "roj")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "roj")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "roll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "roll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "roller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "romanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "romantisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rommel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rommel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ross")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "roulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "roulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "routinisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "routinisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rubbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rubrizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ruck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rucks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ruder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ruder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ruder")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "ruder")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ruder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ruf")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "ruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ruinier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ruinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ruinier")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "ruinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rumor")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rumpel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "rumpel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rumpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rumpel")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "rumpel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rumpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rund")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "rund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rundstrick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rundstrick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "runks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "runzel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "runzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rupf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rupf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ruschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rutsch")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "rutsch")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "rutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "räch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "räch")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "räch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "räch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "räch")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rädel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "räder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "räkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rändel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ränder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "räsonier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "räsonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "rätsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "räuber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "räucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "räucher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "räum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "räusper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "röchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "röhr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "röntg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "röntg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "röntgenisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "röntgenisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "röst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "röt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rübergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rüberkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rüberlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rüberlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rüberspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rück")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "rück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückenschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückfrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückführ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rückführ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "rückführ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "rückführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rücksetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rücksetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückstreu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückstreu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückversicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückversicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückverweis")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "rückverweis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückwander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückwärtsgeh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rückwärtsgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückwärtsgeh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "rückwärtsgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rückübersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rückübersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rüffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rüg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "rüg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "rüg")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "rühm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rühm")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rühm")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "rühm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rühr")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "rühr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rülps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rümpf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "rümpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ründ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ründ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rüst")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "rüst")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "rüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rüst")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "rüst")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "rüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "rüttel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "rüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "rüttel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "rüttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sabber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sabotier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sabotier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sakrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sakrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "salarier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "salarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "salarier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "salarier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "salb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "salb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "salb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "salb")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "salb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "salbader")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "saldier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "salutier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "salutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "salvier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "salz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sammel")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sammel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "sammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sand")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sand")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sandstrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sandstrahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sanforisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sanforisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sanktionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "satinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "satinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sattel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sattel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sattel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sattel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "saturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sauberhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "saubermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "saubermach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "saucier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "saucier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "saugbohner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "saugbohner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sauigel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "saum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "saum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "saus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "schab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schablonier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schablonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schablonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schacher")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schacher")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schacher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schachtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :dat) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :dat) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schad")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schad")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schalm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schalm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schalt")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schamfil")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schamfil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schamfil")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schamfil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schampunier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schanghai")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schar")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schar")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharfmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scharlenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scharmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharmutzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharmützel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "scharmützel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scharnier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scharrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scharwenzel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "scharwenzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schatt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schau")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schaukel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schaukel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schaum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schaum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schauspieler")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schausteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schaustell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "scheid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "scheid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheid")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "scheid")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "scheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schein")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schein")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schein")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schein")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "scheit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheiter")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "scheiter")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "scheiter")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "scheiter")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "scheiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheiß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "scheiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schelfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schelt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schematisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schematisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schenk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "schenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scherwenzel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "scherwenzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "scherz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sches")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheu")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "scheu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "scheuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheuer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scheuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schick")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schieb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schiefer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schiefgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schieflieg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schieflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schieftret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schiel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schiel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schieß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schiff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schiffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schikanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schilder")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "schilder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schilder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "schilder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schilfer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schiller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schilp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schimpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schimpfier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schimpfier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schindel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schindel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schirm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "schirm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schirm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schirm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlabber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlabber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlacker")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schlacker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schlacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlaf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlamp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlampamp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlechtmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlechtmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schleck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schleck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schleim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schleiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schleiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlender")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlenker")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schlenker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlenker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schlenker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schleuder")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "schleuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schleuder")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "schleuder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schleus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlicht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schlicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlicht")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schlicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schling")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schling")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schling")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schling")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schling")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlinger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlipp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schlipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlipp")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schlipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlittel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlittenfahr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schlittenfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlosser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlotter")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schlotter")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schlotter")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schlotter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schluck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlucks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schluder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlummer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlunz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlupf")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schlupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlurf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlurf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlurr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schläfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schläger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schläger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlängel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schlüpf")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlürf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schlürf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlürf")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schlürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schlüssel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schlüssel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schlüssel")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schlüssel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmacht")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schmacht")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schmacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmadder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmarotz")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schmarotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmatz")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schmatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmeck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schmeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmeck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schmeck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmeck")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schmeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmeichel")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schmeichel")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schmeichel")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmeichel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schmeichel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmelzblas")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schmelzblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmelzblas")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schmelzblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schmerz")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schmetter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmetter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmied")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmink")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmirgel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmoll")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmor")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmor")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmorch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmorch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmorg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmorg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmorr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmuddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmuggel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmuggel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmus")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmus")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schmus")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmäl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmäler")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmöker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schmück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnabulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnabulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnack")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnackel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnackel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnader")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnalz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnalz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnapp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schnapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnapp")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnaps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnarch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnarp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnarp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnatzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnatzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnaub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnaub")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schnaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnauz")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schnauz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnauz")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schnauz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schneid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schneider")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schneider")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schneider")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schneitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schneitel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnelllad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnelllad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnepper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schneuz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnick")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schniegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schniegel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schniegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnipfel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnipfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnipp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnippel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnippel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnips")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnips")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnipsel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnipsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnitz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "schnitz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schnitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnitz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "schnitz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schnitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnitzel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "schnitzel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "schnitzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnitzel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "schnitzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnober")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnober")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnodder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnodder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnofel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnopper")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnopper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnorr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schnorr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schnorr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnorr")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schnorr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schnorr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnucker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnuddel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnull")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnull")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnupper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnurr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schnurr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnurr")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schnurr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnäbel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnäbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnäbel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schnäbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnäpper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnäpper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnäuz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnäuz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnöd")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schnöd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnörkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnörr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schnörr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnörr")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schnörr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnüffel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnüffel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "schnüffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnüffel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "schnüffel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "schnüffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schnür")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schnür")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schnür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schnür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schnür")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schober")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schober")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "scholler")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schon")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schon")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schoss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schotter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schotter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schraff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schraffier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schram")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schram")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schramm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schramm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schranz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schranz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrap")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrap")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schraub")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schreck")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schreck")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schreck")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:pp :akk "an") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schreiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schreiner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schreit")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "schreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schriftsteller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrill")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schripp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrubb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrumpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrumpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schrupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schrupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schräg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schräm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schräm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schränk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schröpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schröpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schubb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schubs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schuft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schuld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schuld")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schulter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schummel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schummer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schummer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schumper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schumper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schunkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schupp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schupps")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schupps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schups")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schurigel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schurigel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schurr")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schurr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schusser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schuster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schutzimpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwabbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwabber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwad")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwader")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwadronier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwafel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwank")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "schwank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwapper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwaps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwart")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwarzfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwarzgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwarzhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwarzhör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwarzschlacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwarzschlacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwarzseh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "schwarzseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwarzseh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "schwarzseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schweb")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "schweb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwefel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schweif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schweif")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schweif")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schweif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schweifwedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schweig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "schweig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schweinigel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schweiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwelg")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "schwelg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "schwell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwell")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "schwell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwerfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schwerfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwerhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwermach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwiemel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwill")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwind")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "schwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwindel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwindel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwindel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwipp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schwipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwipp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schwipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwirr")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schwirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwof")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwoi")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwoj")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwäbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwäch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwänger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwänz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwänz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwänzel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "schwänzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwäpper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwärm")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "schwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwärz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "vor") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "bei") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schwör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schächt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schächt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schädig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schädig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schädig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schädig")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "schädig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schädig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schäft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schäkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schäker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schäker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schäl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "schäl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schäl")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schäl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:np . :gen) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "schäm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schänd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schärf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schärf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schätz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "schätz")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "schätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schätz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schätz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "schätz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "schätzenlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schäum")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schönmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schönmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schönschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schöpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schöppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schüchter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schüchter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schüpp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schüpp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schürf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schürf")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "schürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schürg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schürg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schüttel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "schüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schüttel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schüttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schütter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "schütz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sedimentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sedimentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "segel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "segel")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "segel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "segmentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "segn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "segn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "segn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "segn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "segn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "seh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sehn")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "sehn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sehn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sehn")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "sehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seiber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seif")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seifer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seiger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seih")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "seih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seilhüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seilspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seiltanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sekantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sekantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sekret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sekret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sekretier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sekundier")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "sekundier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "sekundier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "sekundier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "selch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "selch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "selektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "selektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "selektionier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "selektionier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "selektionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "selektionier")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "selektionier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "selektionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "seng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "senk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "senk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "senn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sens")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sens")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sensibilisier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sensibilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sensibilisier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sensibilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sensier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "separier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "separier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "separier")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "separier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sequestrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sequestrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "serbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "servier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "servier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "servier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "setz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "setz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "setz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "setz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "seufz")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "seufz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sezernier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sezernier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sezier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sezier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sicher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sichergeh")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "sichergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sicherstell")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sieb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "sieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sieb")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "sieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "siech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sied")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sied")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "siedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sieg")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "sieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "siegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "siel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "siel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "siez")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sigillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sigillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "signalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "signalisier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "signier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "silhouettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "silhouettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "silicier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "silicier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "silifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "silizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "silizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "simplifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "simulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "simulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "simultier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "simultier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sinn")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "sinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sinnier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sinter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sinter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sistier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sitzenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sitzenlass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "sitzenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skalpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skandalier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "skandier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skandier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "skat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "skelettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skizzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skontrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skontrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "skull")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "skulptier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skulpturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "skulpturier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "smok")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sockel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "sockel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "soehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sogg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "solenisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "solenisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "solenoidbetreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "solenoidbetreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "solidarisier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "solidarisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "solidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soll")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "soll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sollizitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sollizitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "solmisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "solvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sommer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sonder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "sonder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sondier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sondier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sorbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sorbier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sorg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sortier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soufflier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soufflier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soufflier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "soulagier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soulagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "soupier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "soutachier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sowjetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sowjetisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sozialisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soßier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "soßier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spachtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spachtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "spalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spalt")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "spalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "span")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spann")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "spann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spann")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "spann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spar")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "spar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spar")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "spar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spationier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spationier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spazier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spazierenfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spazierenfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spazierengeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spaß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spedier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "spedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spei")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "spei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spei")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "spei")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spei")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "spei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "speichel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "speicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "speicher")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "speicher")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "speicher")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "speicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "speil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "speil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "speiler")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "speiler")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "speis")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "speis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "speis")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "speis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spektakel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spekulier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "spekulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spend")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "spend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spend")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "spend")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spendier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sperber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sperr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sperr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sperr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "sperr")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "sperr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spezialisier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "spezialisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spezifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spiegel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "spiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spiegel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "spiegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spieker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spieker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spiel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "spiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "spieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spintisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spionier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "spionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spiralisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spiralisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spiritualisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spiss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spitzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spleiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "splitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spolier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sporn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sportel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spott")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "spott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spray")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spray")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:pp :dat "zu") (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:pp :akk "fuer") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:pp :akk "fuer") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "sprech")) :v '( (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "spreiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprenkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sprenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sprenz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprint")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sprint")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spritz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "spritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spritz")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "spritz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spross")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sprüh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "sprüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sprüh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "spuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spuck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spuk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spur")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spur")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spurt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sputter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sputter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "späh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spän")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spök")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spöttel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "spöttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "spür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "spür")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "spür")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "spür")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "spür")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stabilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stabilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stachel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stachel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staffel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "staffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "staffelschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staffier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stagnier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stamm")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "stamm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "stammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stammer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "standardisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "standhalt")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "standhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stanz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "stanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stapel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stapf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "starr")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "starr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "start")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "start")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stationier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stationier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stattfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stattgeb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "stattgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "statthab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "statthalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "statuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staubsaug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "staubsaug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staubwisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "staud")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "staun")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "staun")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "staun")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "staun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steck")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "steck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steckenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steckenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:pp :dat "bei") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '( (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "steh")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "stehenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steig")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "steig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steiger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steiger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steiper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steiper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "stell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stemm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "stemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stemm")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "stemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stempel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "stempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stempel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "stempel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stenographier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stenographier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stenosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stenosier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sterb")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "sterb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stereotypier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stereotypisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stereotypisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sterilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sterzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "steuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "steuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stibitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stichel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stichhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stiefel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stiem")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stift")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stiftengeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stigmatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "still")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "still")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stillbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stillhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stillleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stilllieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stillsitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stillsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stimm")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "stimulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stink")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "stink")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "stink")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "stink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stipp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "stipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stipp")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "stipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stipulier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "stipulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stocher")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "stocher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stock")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "stock")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "stock")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "stock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stolper")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "stolper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stolzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stopf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "storch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "storg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stornier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stornier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stotter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stotter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stotz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stov")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stov")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stow")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stow")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stoß")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stoß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "stoß")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "straf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "straf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "straff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "straff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strafversetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strafversetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strammsteh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "strammsteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strammzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strammzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strampel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "strampel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strampel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "strampel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strand")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "strand")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strangulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strangulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strapazier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strapazier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stratifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stratifizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strauchel")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "strauchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "streb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streichel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streichel")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "streif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streif")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streif")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "streif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streik")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "streik")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streit")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "streit")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "um") ) )
(insert-subcat-entry (car (morphix-read "streit")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "streit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stremm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stremm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strengnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strengnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "streu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "streusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "strick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strick")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "strick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stridulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "striegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "striez")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "striez")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stripp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strobel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strolch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stromer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strukturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strupf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "strupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "strupf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "strupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "struppier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "struppier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "strähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sträng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sträub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sträub")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "sträub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ström")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "ström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stuck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stuckier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "studier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "studier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stuf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "stuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stulp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "stulp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "stulp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stulp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "stumpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stund")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stuprier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stuprier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stups")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stutz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "styl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "styl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "styl")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "styl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stängel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stärk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "stärk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stärk")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "stärk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stäub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stäup")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stäup")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stöber")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "stöber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stöber")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "stöber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stöckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stöhn")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "stöhn")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "stöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stöpsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stöpsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :akk) (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :akk) (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:pp :dat "bei") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '( (:pp :dat "bei") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stör")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "stück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "stück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stückel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "stückel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stülp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stülp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stümmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stürchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stürm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "stütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "stütz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "stütz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "stütz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "subjektivier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subjektivier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sublimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sublimier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "subministrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subordinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subordinier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subsistier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "subskribier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subskribier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "substantiier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "substantiier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "substituier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "substituier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "substrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subsumier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "subsumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subtrahier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "subvenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "subventionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "such")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "such")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "such")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "suckel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "suckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "suffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "suffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "suggerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "suggerier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "suhl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sukzedier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "sulfenylier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sulfenylier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sulfidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sulfidier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sulfidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sulfidisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sulfidisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sulz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sulz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "summ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "summ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "summier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "summier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sumpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sums")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sup")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sup")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "superarbitrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "superarbitrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "supplier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "supplier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "supponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "supponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "supprimier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "surr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "suspendier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "suspendier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "suszipier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "swing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "symbolisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sympathisier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "sympathisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "synchronisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "syndizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "syndizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "synkopier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "synthetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "systematisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "szintillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sä")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sä")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sächsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säckel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säftel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säkularisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sänftig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säsier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säsier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sättig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "sättig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sättig")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "sättig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "sättig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "säuber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "säug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säusel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "säusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "söhn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "söhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "söhn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "söhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sömmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "sömmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "süffel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "süffel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sühn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "sühn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sülz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "sündig")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "sündig")) :v '( (:np . :nom) (:pp :akk "wider") ) )
(insert-subcat-entry (car (morphix-read "sündig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "süß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tabellarisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tablettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tabuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tachinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tadel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tafel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tagelöhner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "taglöhner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "taillier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "takel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "takt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "taktier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "talg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "talgumier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "talgumier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "talj")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tamburier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tamburier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tamponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tangier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tannier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tanz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tanz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "tanz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tanz")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "tanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "taper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tapezier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "taps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tarier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tarifier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tarn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "tarn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tarockier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tast")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "tast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tauch")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "tauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tauchlackier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tauchlackier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tauf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "tauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "taug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "taug")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "taug")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "taumel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "tausch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tausch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tauschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tauschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tax")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tax")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "taxier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "technisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "teer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "teil")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "teil")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "teil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "teil")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "teil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "teilhab")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "teilhab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "teilnehm")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "teilnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tektier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "telefonier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "telefonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "telegrafier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "telegrafier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "telegrafier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "telegraphier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "telephonier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "telephonier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "teleskopier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "teleskopier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "teleskopier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "teleskopier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tempel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "temperier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tempier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tempier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "temporisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "temporisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "terassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "terassier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "terminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "terrorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "terrorisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "test")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "test")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "testier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "testier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "testier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "teuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "text")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "text")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "text")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "text")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "text")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "text")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "texturier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "thematisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "thermostatisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "thermostatisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tiftel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tiger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tilg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tingier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tingier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tippel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tiraillier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tirilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tischler")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "tischler")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tischler")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "tischler")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "titrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "titrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "titsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "titsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "titulier")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "toast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "toast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tockier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tockier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tokkier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tokkier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tolerier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "toll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tonisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tonisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "topf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "topp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "topp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tordier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tordier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "torkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "torkretier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "torkretier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "torpedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "torquier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tos")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "totalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "totfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totlach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "totlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "totmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totsag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totschweig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tottret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "totärger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "toupier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "toupier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tournier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tournier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tracht")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "tradier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tragier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tragier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trainier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trainier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "traktier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "traktier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trampel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trampel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trampel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tranchier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tranchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "transchier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transchier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "transferier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "transferier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transformier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "transformier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "transformier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transistorier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transkribier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "translozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transmittier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transpirier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "transplantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transplantier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transportier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "transportier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "transvestier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "transzendier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trappel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "traps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trassier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tratsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "trau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trauer")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "trauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "traumwandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "treff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "treff")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "treff")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "treff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "treff")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "treib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "treidel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "treidel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tremolier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tremulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trendel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "trenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trepanier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trepanier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tret")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "tret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tribulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tribulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trichter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trief")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "trief")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "trief")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "triez")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trigger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trigger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "triller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "triller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trink")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "trink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trink")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "trink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "triphier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "triphier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tripp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trippel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tritier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "triumphier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "triumphier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trockn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trockn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trockn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trokier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trokier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "troll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trommel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trommel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trompet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trompet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tropf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tropf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "tropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trottel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trotz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "trotz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trumpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trumpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "träller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "träller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trän")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "trän")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tränk")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "träuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "träuf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "träufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "träufel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "träum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trödel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tröl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tröl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tröpfel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "tröpfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "trüb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "trüb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tschilp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tu")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "tu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tu")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "tu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tucker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tummel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tumultuier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tumultuier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tunk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "tunk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tupf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "turbier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "turbier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "turn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "turn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "turnier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "turtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tuschel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tuschel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tuschel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tuschel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tuschel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "tuschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tuschier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tut")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "tut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "twist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "typisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "typisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tyrannisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "täfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tänzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tätig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "täubel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "täusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "täusch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "täusch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "täusch")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "täusch")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "täusch")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "tön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tön")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tön")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "tön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "töt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "tücksch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tüder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tüftel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tüpfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "türm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "türm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "tüttel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ufer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ufer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ulk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ulzerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umadressier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umarbeit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "umarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umarm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umbau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "umbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umblätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umbuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdeut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umdisponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdisponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdreh")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "umdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umdräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umdüster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umester")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umester")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umflecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umflor")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umflor")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umflut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umform")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umformatier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umformatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umformatier")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umformatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umfrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umfried")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umfried")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfriedig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umfriedig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfächel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfärb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umfärb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umgarn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgarn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgeb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgeh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgestalt")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umgestalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "umgestalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umglänz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umgrenz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgrenz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgruppier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umgürt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgürt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umgürt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umgürt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umhack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umhals")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umherblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherflatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhergeister")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umherjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherschlender")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherspäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherstreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhertapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhertast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhertreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherwimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umherzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umherzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umhäng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umhör")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "umhör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umhüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umhüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkehr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umkehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umkipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umkleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umknick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umknick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umkodier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkodier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umkreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkrempel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkrempel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umkränz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlaut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlaut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umleim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umleim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umlenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umlern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ummantel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "ummantel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ummauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ummodel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ummontier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ummontier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ummontier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "ummontier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umnebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umnäh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umnäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umordn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "umordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umordn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "umordn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umpflüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umpflüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umpol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umpräg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umquartier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umquartier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umrahm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umrahm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrand")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umrand")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrangier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrangier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umrank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrüst")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umrüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umrüst")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umrüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umsattel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umsattel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umsaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschiff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschleich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschleier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschling")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschmeichel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschmeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschnall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschnall")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschul")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "umschul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschuld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschuld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschwing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschwing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umschwirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umschüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umsetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umsiedel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umsiedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umsink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umsorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umspring")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umspul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umspul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umsteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstell")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstrick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umstrick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstülp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstülp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstülp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umtast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umtauf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umtauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtauf")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "umtauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umtausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "umtausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "umtausch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umtausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtausch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umtu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umtu")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "umtu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umwachs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umweb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umweb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwechsel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "umwechsel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "umwechsel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "umwechsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwechsel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umweh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwerb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umwerb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "umwind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwog")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umwölk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umwühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "umzingel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umzäun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "umänder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "undulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "uniformier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "uniformier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbewert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterbock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterbreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbreit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterdrück")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterforder")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterforder")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterforder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterfütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterglieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untergrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterhalt")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "unterhalt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterhandel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "unterhandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterkeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterkeller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "unterkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterkühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterkühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterlager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterlass")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "unterlauf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterlauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterlauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterlauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterlauf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "unterlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "untermal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untermauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untermeng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "unter") ) )
(insert-subcat-entry (car (morphix-read "untermeng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untermisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unternehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterordn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "unterordn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterpflüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterpflüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterred")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterred")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "unterricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "untersag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "untersag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:pp :dat "in") (pp dat "von") ) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterscheid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschlüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschreib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterschreib")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterschätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "untersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "untersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterstell")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "unterstell")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterstell")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "unterstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterstreich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterstreich")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "unterstreich")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterstreu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterstreu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "unterstütz")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "untersuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untersuch")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "untersuch")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "untersuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "untertauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untertauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterteil")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "unterteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untertret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "untertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "untertunnel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterversicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterversicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterwander")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterwasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterwerf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "unterwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterwind")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "unterwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unterzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unterzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unverleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "unverwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "unverwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "uraufführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "urbanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "urethanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "urethanisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "urform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "urform")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "urgier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "urgier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "urinier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ursch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :dat "nach") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :dat "nach") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :dat "nach") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "urteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "usurpier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "utilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "utilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "uz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "uz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vagabundier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vagier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vakzinier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "valedizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "valetier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "validier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "validier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "valier")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "valier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "valorisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "valutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "valvier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "variier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "variier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vegetier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "venerier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ventiier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ventiier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ventilier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veraas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veraas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verabfolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabfolg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verabred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verabreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabscheu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabschied")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabschied")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verabschied")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verabsolutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabsolutier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verabsolutier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verabsolutier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verabsäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verabsäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veracht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verachtfach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verachtfach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veralber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verallgemeiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veralt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veranker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veranlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "veranlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "veranlass")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "veranschaulich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veranstalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:pp :dat "vor") (pp akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verantwort")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verarbeit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verarg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verarg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verarm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verarsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verarsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verarzt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verauktionier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verauktionier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verausgab")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verausgab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verauslag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verauslag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verballhorn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verballhorn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbarrikadier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbarrikadier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbeamt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbeiß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verbeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verberg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbesser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbesser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbeug")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbeul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbeul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verbiet")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbildlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbillig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbims")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbind")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verbind")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbitter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblatt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbleib")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verbleib")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbleib")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbleib")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verbleib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbleu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblätter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblätter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblöd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verblöd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verblüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbodm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbodm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbohr")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbolz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbolz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verborg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verborg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrauch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "verbrauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verbreit")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verbreiter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbreiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbrenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verbrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrenn")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbrief")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verbrief")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrief")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verbrief")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrief")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verbrief")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbring")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verbring")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbring")) :v '( (:np . :nom) (:subclause . "inf") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verbräm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrüder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbrüder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrüder")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbrüder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbrüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrüh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbrüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbuch")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verbuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbumfidel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbumfidel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbumfiedel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbumfiedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbummel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbummel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbutter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbutter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbünd")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbünd")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verbünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbürg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbürg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verbürg")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "verbürg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verbüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verchrom")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdank")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdeck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "durch") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:pp :akk "durch") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verdeutlich")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verdeutsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdeutsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdien")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "mit") ) )
(insert-subcat-entry (car (morphix-read "verdien")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdien")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verdien")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verdien")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verdien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdinglich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdolmetsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdonner")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verdonner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdonner")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verdonner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdoppel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdreifach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdreifach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdreifach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdresch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdrieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdrill")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verduft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdunkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdunkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdunst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdunst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdurst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdussel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdussel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdächtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verdächtig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verdächtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdächtig")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdös")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdübel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdübel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdünn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdünn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdüs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdüs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verdüster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verdüster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verebb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veredel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verehelich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verehelich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verehr")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereid")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vereid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereid")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vereid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vereidig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vereidig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vereinbar")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vereinfach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereinheitlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereinig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vereinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereinsam")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vereinzel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereinzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vereis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vereitel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereiter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verekel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verekel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verekel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verelend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vereng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vereng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verenger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verenger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vererb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verester")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verester")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verester")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verester")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verewig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verewig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfahr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfall")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verfall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verfall")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfang")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verfang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfaul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfeind")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verfeind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfeiner")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "verfeiner")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verfeiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfem")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verferkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfertig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfertig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfestig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfestig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfeuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfeuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfilm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfilz")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verfilz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfinster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfinster")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfitz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verfitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verflach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verflach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verflacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verflacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verflecht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verflecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verflecht")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verflecht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verflüchtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verflüchtig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verflüssig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verflüssig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verform")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verform")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfracht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfremd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfrisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfrüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verfug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfuhrwerk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfuhrwerk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfutter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfutter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfälsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfärb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfärb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verfüg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verfütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verfütter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergaff")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "vergaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergant")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergant")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergatter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergatter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vergeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergegenwärtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergegenwärtig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergeh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vergeh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "vergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergeistig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergeistig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergelt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergelt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergesellschaft")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vergesellschaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergesellschaft")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vergesellschaft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergeud")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergewaltig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergewaltig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergewerkschaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergewerkschaft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergewisser")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "vergewisser")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "vergewisser")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vergewisser")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vergewisser")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vergewisser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergilb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergilb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verglas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verglas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergleich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vergleich")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vergleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergleichmäßig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergleichmäßig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergletscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verglimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verglüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergnüg")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vergnüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergold")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergrab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergreif")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vergreif")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "vergreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergräm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergröber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergröber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergrößer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergrößer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verguck")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergäll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergäll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergönn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergönn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergötter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergötter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vergünstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vergüt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhaft")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verhaft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhagel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhak")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhalt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verhalt")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhandel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verhandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhandel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verhandel")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "um") ) )
(insert-subcat-entry (car (morphix-read "verhandel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verhandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verharsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verharz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verharz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhaspel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhedder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhedder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verheer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhehl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verheimlich")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verheirat")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verheirat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheirat")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheirat")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verheirat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verheiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhelf")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verhelf")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verherrlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhex")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhex")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhex")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhimmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhinder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhinder")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verhoff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhofier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhofier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhohnepiepel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhohnepiepel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhorn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhorn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhudel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhunger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhunz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhunz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhäng")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verhäng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verhäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhärt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhärt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhätschel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhätschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhöhn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verhöhn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhöker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhöker")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhöker")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verhöker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhör")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verhüll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhüt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhüt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verhüt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verhütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verhütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verifizier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verifizier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verinnerlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verinnerlich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verinnerlich")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verinnerlich")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verjubel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verjux")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verjähr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verjüng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verjüng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkadm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkadm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkalb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkalk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkant")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkant")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkapsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkapsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkarst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkarst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verkauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkaupel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkaupel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkaupel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkehl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkehr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verkehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verkehr")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verkehr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkenn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verkenn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verkenn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verkett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkiesel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkiesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkitsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklammer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklaps")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklaps")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklar")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklausel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklausulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklausulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verkleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkleb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verkleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkleid")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verkleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkleid")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verkleid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkleiner")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verkleiner")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verkleiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkleiner")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verkleiner")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verkleiner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkleister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklopp")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verklopp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklopp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklopp")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verklopp")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verklopp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklär")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verklär")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verklüft")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknack")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verknack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknack")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verknack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknacks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknall")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verknall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknall")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verknall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkneif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknet")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verknet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknet")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verknet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknorpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknurr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknurr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verknus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknöcher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verknüpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verknüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkoch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verkoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkohl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkok")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkok")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkoppel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkork")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkorks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkorks")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkost")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkrach")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verkrach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkraft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkram")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkram")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkrampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkrampf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkriech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkröpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkröpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkrümel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkrümel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkrümm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkrümm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkrümm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verkrümm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkrüppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkrüppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkupfer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkuppel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verkuppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkämm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkäs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkäs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkörn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkörper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verköstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkümmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "gegenueber") ) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:pp :akk "an") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:pp :dat "gegenueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:pp :dat "gegenueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:pp :dat "gegenueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:pp :dat "gegenueber") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verkünd")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verkündig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkündig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verkürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verland")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlangsam")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlangsam")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlass")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlatsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlatsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlauf")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verlauf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlaut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlautbar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlebendig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlebendig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleg")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleih")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verleih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verleih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleit")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleitgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleitgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verles")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verles")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verletz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verletz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verleugn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verleugn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verleumd")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verleumd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlieb")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verlieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlob")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlob")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verlob")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlock")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verlock")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlock")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verlock")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlos")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlotter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlotter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlustier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verlänger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verläpper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verläpper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verläster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlösch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verlöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermaledei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermaledei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermark")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermark")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermehr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vermehr")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "vermehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermehr")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vermehr")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "vermehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermeid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermeid")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vermeid")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vermeld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermeld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermeng")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vermeng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermeng")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vermeng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermenschlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermerk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermess")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermess")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "vermess")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vermess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermies")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermies")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermiet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermin")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermin")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermisch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vermisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermisch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vermisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermiss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermittel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermittel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermoder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermorsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermumm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermumm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermur")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermur")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermurks")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermurks")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermut")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vermut")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vermähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vermähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermähl")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vermähl")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vermähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermännlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermännlich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vermöbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermög")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vermög")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vernachlässig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernachlässig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vernagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernarb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vernarr")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "vernarr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vernasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vernehm")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "vernehm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vernehm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verneig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verneig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verneig")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verneig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vernein")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vernickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verniet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vernäh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vernäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpacht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpacht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpack")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verpack")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verpack")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verpack")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpest")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfeif")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verpfeif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verpflicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpfründ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfründ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfründ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpfusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpfänd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpfänd")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpimpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpimpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verplan")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verplapper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verplauder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verplauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verplemper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verplemper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verplomb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verplomb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verprass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verprell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "verprell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpress")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpress")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verpress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verproviantier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verproviantier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verprügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpuff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpulver")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpump")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpump")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpupp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verpust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpust")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verputz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpäppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verpön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verqualm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verqualm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verquas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verquas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verquell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verquell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verquist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verquist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verramsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:pp :akk "an") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:pp :akk "an") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:pp :akk "an") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrausch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrechn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verrechn")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verrechn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verrechn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrechtlich")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verrechtlich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verregn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verregn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verreit")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrenn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verriegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verringer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verringer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verringer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verringer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verringer")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verringer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrinn")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verripp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verripp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verroh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verroh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrost")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verrutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verruß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verruß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verräucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verrühr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verrühr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versalz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versalz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versalz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versammel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versammel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versand")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versauer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschacher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschacher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschachtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschachtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschaff")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verscharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verscheiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verscheiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschenk")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verschenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verscherbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verscherbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verscherz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verscheuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verscheuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verscheuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verschieb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschieb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verschieb")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschieß")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschiff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschilf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschimpfier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschimpfier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlaf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschlaf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlamm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlamp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschlamp")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verschlamp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlechter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschlechter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschleier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschleier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschleim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschleiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verschleiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschleiß")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verschleiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlepp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschleuder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschließ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschließ")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlimmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschlimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschling")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschling")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschluck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschluck")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "verschluck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschlüssel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschmacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschmelz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschmelz")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschmelz")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschmerz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschmier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschmutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschmutz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschmäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschnauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschnei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschnei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschnupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschnörkel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschnörkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschnür")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschnür")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschon")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschon")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verschon")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verschon")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschorf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschreib")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschrot")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschrott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschrumpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschränk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschuld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschuld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschweig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschweig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschwend")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verschwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschwind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschwister")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschwister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschwister")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschwister")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verschwister")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschwister")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschwitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschwitz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verschwitz")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verschwitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschwäger")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschwäger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschwör")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verschwör")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "verschwör")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verschwör")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verschwör")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verschwör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschärf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschärf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschäum")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschön")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschöner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschöner")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschöner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verschüchter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verschüttgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verseh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verseh")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "verseh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verseif")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "mit") ) )
(insert-subcat-entry (car (morphix-read "verseif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verseif")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verseif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verseil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verseil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verselbständig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verselbständig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verseng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verseng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verseng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versenk")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "versenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "versetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versetz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verseuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versicker")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "versicker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versifizier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versilber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versimpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versimpel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versinnbildlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versinter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versipp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versklav")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versohl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versohl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versorg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versorg")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versorg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versott")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspachtel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspachtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspann")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspar")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspar")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verspar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspeis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspekulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspekulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versperr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspiel")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspinn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verspinn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspinn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "versplint")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versplint")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versplint")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versplint")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versplitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versplitt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspott")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "verspott")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspritz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspritz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspröd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspröd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versprüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versprüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspät")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verspünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verspür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "versteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versteck")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "versteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:np . :akk) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versteif")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "versteif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versteif")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "versteif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versteig")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "versteig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versteiger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versteiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versteiner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstemm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstemm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstepp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstetig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstetig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstift")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstift")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "verstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstoß")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "verstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstreb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstreb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstrick")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verstrick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstrick")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verstrick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstumm")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verstumm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstädter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstädter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verständig")) :v '( (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verstänker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstänker")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstärk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstärk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstärk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstäub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verstümmel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verstümmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versumpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versums")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versums")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versäum")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "versäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versühn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versühn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versühn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "versühn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versündig")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "versündig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "versüß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "versüß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertaub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertausch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vertausch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :akk "gegen") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :dat "vor") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verteidig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertief")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertief")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "vertief")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "vertier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertier")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "vertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertilg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertoback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertoback")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verton")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertorf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertrag")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vertrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "vertrau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertrimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertrockn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrottel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertrust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verträum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertrödel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertröl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertröl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertröst")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vertröst")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vertröst")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vertröst")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vertu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vertu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertu")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vertu")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "vertu")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vertu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertändel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertändel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vertäu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertüter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vertüter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verulk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veruneinig")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "veruneinig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veruneinig")) :v '( (:pp :akk "auf") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verunfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verunglimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunglimpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verunglück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verunmöglich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunmöglich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunmöglich")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verunmöglich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verunreinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verunsicher")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verunsicher")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verunsicher")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verunsicher")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verunsicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunstalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunstalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veruntreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verunzier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verurkund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verurkund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verursach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verurteil")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verurteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verurteil")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verurteil")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verurteil")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "veruz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veruz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vervielfach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vervielfach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vervielfältig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vervielfältig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vervierfach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vervierfach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vervollständig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vervollständig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vervollständig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwackel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwahr")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "verwahr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verwahrlos")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwais")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwalk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwalk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwams")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwams")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwandel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verwandel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verwandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwandel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verwandel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verwandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwarn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwechsel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verwechsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verweh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verweh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verweh")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verweh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verwehr")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verwehr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verwehr")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verweichlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verweichlich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verweiger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verweil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwelk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verweltlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verweltlich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwert")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "verwert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwes")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwett")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verwett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwett")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "verwett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwichs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwichs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwickel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwickel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verwickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwilder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwirbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwirbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwirk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwirklich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwirklich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwirr")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verwirr")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verwirr")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verwirr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwirr")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verwirr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwohn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwunder")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verwunder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwunder")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verwunder")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verwunder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwurstel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwurstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwurzel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verwurzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwäg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwässer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwässer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwöhn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwölb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verwünsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verwüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzank")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verzank")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verzank")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verzank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verzapf")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "verzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzehr")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "verzehr")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "verzehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzeichn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verzeichn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verzeichn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verzeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzeig")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verzeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzeig")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "verzeig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verzeih")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verzerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzerr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzettel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "verzettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzicht")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "verzicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verzier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzimmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzins")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzins")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzins")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "verzins")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzoll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzucker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzucker")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzunder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzunder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzwatzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:pp :dat "ueber") ) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "verzweifel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzweig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzwiebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzwiebel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzäun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzäun")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzöger")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verzöger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verzöger")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "verzöger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verzück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veränder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "veränder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veränder")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "veränder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verängstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veräppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veräppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verärger")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "verärger")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "verärger")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "verärger")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "verärger")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verärger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verästel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veräther")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veräther")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "verätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veräußer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veräußerlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veräußerlich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veröd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veröd")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veröd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "veröffentlich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "veröffentlich")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "veröffentlich")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "veröffentlich")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "verüb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verübel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "verübel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vesper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vexier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vibrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vidier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vidier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vidimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vidimier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vierteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vierteil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "viertel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "viertel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vigilier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vignettier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vignettier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vikariier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vikariier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vindizier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vinkulier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "visier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "visier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "visitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "visitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vitaminier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vitaminier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vitaminisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vitaminisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vivisezier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vivisezier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vogel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vokalisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vokalisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "volkstümel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "volless")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollfüll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vollfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollgieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "volllauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollmal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollmal")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollpfropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollpfropf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollsaug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollschenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollschenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vollschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollschlag")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vollschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollschmier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollschmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollstopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollstopf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollstopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollstreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vollstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollstreck")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vollstreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "volltank")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "volltank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vollzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vollzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "volontier")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "volontier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voltier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voltigier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vomier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorangeh")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vorangeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorangeh")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vorangeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorankomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorankomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voranmeld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voranmeld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voranstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voranstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voransteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voransteuer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voransteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorantreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorantreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorantreib")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorantreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorarbeit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausahn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausbedenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausbedenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausberechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorausbestimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausbezahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorauseil")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorauseil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausfahr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorausfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausgeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorausgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voraushab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voraushab")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorauslauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorauslauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorauslauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorauslauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausreit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausreit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorausreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "voraussag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorausschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorausseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorausseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorausseh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorausseh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "voraussetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "voraussetz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "voraussetz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "voraussetz")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorauswiss")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorauswiss")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorauswiss")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorauszahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorauszahl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorbau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbedenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbeding")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbeding")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbehalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbehalt")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorbehandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbeibenehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeieil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeifahr")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeifahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeiflieg")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeiflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeifließ")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeifließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeiflitz")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeiflitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeigeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeigeling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeikomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeilass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbeilauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeimarschier")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeimarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeired")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeired")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeireit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeirenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeischieß")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeischieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeitreff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeizieh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorbeizieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorbereit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbestell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorbestimm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorbet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbet")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbeug")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbeug")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorbeug")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbohr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorbohr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vordatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vordring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "voreil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorenthalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorenthalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorerhitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorerhitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorerzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorerzähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorerzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorflunker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorflunker")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorfühl")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vorgaukel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorgaukel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorgeb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorgeh")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "vorgeh")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "vorgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorgreif")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorhab")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorhab")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorherbestimm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorhergeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorhergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorherrsch")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "vorherrsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorhersag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorhersag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorherseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorherseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorherseh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorherseh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorheuchel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorheuchel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorheuchel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorheul")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorheul")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorheul")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorimprägnier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorjammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorjammer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorjammer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorkau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorkehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorkeim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorkeim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorkipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorkipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorknöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '( (:np . :dat) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '( (:np . :dat) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '( (:np . :nom) (:np . :dat) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorkomm")) :v '((:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorkrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorkühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorlad")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "vorlad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorlager")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorlager")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorlager")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorlass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "vorlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorleb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorles")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorles")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorliebnehm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorliebnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorlieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorlieg")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "vorlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorloch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorlüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vormach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vormach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vormisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vormisch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vormisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vornehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vornehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vornehm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vornehm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorneig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorprogrammier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorrechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorred")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorred")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorricht")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorsag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschieb")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorschieb")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorschlag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorschmeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschneid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschraub")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorschreib")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschwatz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwatz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschweb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorschweb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschwindel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwindel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwindel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschwärm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "vorschwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwärm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "vorschwärm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorschwärm")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "vorschwärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorschütz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:pp :akk "fuer") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsing")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsing")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorsorg")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "vorsorg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorspann")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorspiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorspiegel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorspiel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorspinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorsprech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vorsprech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vorsprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsprech")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "vorsprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorsteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorstell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorstreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstreck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstülp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorstülp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorstürm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vortanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vortanz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vortrag")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vortreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vortreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vortret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorturn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorturn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vortäusch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vortäusch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorverleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwarn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorwegdiskutier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwegnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwegnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwegnehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorwegnehm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "vorwegnehm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorwegnehm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "vorwerf")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "vorwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwieg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "vorwieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwärm")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "vorwärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwärtsbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwärtsgeh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorwärtsgeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwärtskomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vorwärtskomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwärtsschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwärtsschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwärtsschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorwölb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorwölb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzauber")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzauber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzeichn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vorzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vorübergeh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "vorübergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "votier")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "votier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vozier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "vozier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vozier")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "vozier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "vulkanisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vögel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vögel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "vögel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "vögel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wabbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "waber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wachhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wachruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wachrüttel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wackel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wackel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "waffn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "waffn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wag")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wahrnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wahrnehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wahrnehm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wahrnehm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wahrschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "walk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "walk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wallfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "walt")) :v '( (:np . :nom) (:np . :gen) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "walt")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "walt")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "walt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "walz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "walz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wandel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wappn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wappn")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "wappn")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "wappn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wappn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wardier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wardier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "warmfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "warmfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "warmhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "warmlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "warn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "warp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "warp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wasch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wasser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wasser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wat")) :v '( (:np . :nom) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "wat")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "wat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "watsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "watsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "watschel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wattier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wechsel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "wechsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wechsel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "wechsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegbrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegess")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegfall")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wegfall")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wegfall")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wegfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegfeg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfeg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegfeil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegfilter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfilter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegfress")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegführ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "wegführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegführ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "wegführ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegführ")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "wegführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weggleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weghab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weghalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weghalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weghalt")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weghalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weghau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weghau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegheb")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wegheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weghol")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weghol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weghäng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegjag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wegjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegkehr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegkomm")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "wegkomm")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "wegkomm")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "wegkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wegkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegkratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegkratz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weglass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weglauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "weglauf")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "weglauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegmüss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegradier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegraff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :dat) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :dat) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :nom) (:np . :dat) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "wegrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegruf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wegruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegruf")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wegruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegräum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegschaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschaufel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegschenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschleich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschnapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschnapp")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschwenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegschwenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegseh")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "wegseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegspül")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegsteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegsterb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegstoß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wegstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegtreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegtreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegtret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegtret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegtu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegwasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegwasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegwend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegwend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegwisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegwälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegwälz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegzauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegzauber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wegätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wegätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wehklag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wehr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "wehr")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "wehr")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wehr")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weibel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weich")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weich")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "weich")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weid")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "weid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiger")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "weih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weih")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weihnacht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wein")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "wein")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wein")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "wein")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "weis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weismach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weismach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weissag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weissag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterbeförder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterbehandel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "weiterbehandel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterbehandel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "weiterbehandel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterbesteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterbetätig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterbetätig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterbild")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterdenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterempfehl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterentwickel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "weiterentwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterentwickel")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "weiterentwickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitererzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitererzähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitererzähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitergeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitergelt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterhelf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "weiterhelf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "weiterkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterkönn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "weiterleit")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "weitermach")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "weitermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitermach")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "weitermach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitermarschier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitermeld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitermeld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterreich")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "weiterreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "weiterreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterreich")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "weiterreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitersag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitersag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterschick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitersend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitersend")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "weiterspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterspiel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "weiterspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitertön")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterverbreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "weiterverfolg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "weiterverkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterverkauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitervermiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterversorg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterversorg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterzieh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "weiterzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weiterübermittel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "weiterübermittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weiterübermittel")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "weiterübermittel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weitspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weitspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weißel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weißel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weißglüh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weißglüh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weißwasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weißwasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weißwasch")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "weißwasch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "well")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "well")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "well")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "well")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "weller")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "weller")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wendel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "werb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "werb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "werb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "werb")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "werb")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "werb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "werd")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "werd")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "werd")) :v '( (:np . :nom) (:predicative :np :akk)) )
(insert-subcat-entry (car (morphix-read "werd")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "werd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "werf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "werf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "werf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "werk")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "werk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "werkel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "werkel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:predicative :ap :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wert")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "werthalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wertschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wertschätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wes")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") (pp akk "um") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "um") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wetteifer")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wetteifer")) :v '( (:np . :nom) (:pp :dat "mit") (pp akk "um") ) )
(insert-subcat-entry (car (morphix-read "wetteifer")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wetteifer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wetter")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wetter")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "wetter")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wetter")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "wetter")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "wetter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wettmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wettrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wettruder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wichs")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wichs")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wichs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wickel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wider")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widerfahr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "widerfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widerleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widerrat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widerrat")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widerrat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widerruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widerschall")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "widerschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widersetz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "widersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widerspiegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widerspiegel")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "widerspiegel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "widerspiegel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "widerspiegel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "widerspiegel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widersprech")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "widersprech")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "widersprech")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "widersprech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widersteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "widersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widerstreit")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "widerstreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "widm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "widm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "wiebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiebel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederabdruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederabdruck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederanknüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederanknüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederaufbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederauffind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederauffind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederaufführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederaufführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederaufleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederaufleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederaufnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederaufricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederaufrüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederaufrüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederaufsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederaufsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederaufsuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederauftauch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederbeginn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederbeleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wiederbeleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederbeschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederbeschaff")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederbesetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederbesetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereinbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereinbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereinbring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedereinführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereinführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedereinricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereinricht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedereinsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereintret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederentdeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederentdeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederergreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederergreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedererinner")) :v '( (:np . :nom) (:np . :gen) ) )
(insert-subcat-entry (car (morphix-read "wiedererinner")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "wiedererinner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedererleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedererleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedererober")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedererschein")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "wiedererschein")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedererstatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedererstatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedererweck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "wiedererweck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedererzeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedererzeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedererzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedereröffn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedergewinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedergutmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederherricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederherstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederimpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederimpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederinstandsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederinstandsetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederkäu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederkäu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederlieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederlieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiedersag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedersag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiedervereinig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederverheirat")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederverheirat")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederverkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederverkauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiederwähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederzusammenführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiederzusammenführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiefel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiefel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wieg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "mit") ) )
(insert-subcat-entry (car (morphix-read "wieg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "wieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wieg")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "wieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wieher")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "wieher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wildel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wilder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wilder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "willfahr")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "willfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "willig")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "willig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wimmel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wimmel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wind")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wind")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "wind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wink")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wink")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wink")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wink")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "winkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "winsel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "winsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "winter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wipp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "wipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wirbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wirbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wirk")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wirk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wirk")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wirk")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "wirk")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "wirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wirt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wispel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wispel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :akk "ueber") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "wiss")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "witzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wobbel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wohlwoll")) :v '( (:np . :nom) (:np . :dat) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "wohlwoll")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "wohlwoll")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "wohlwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wohn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "woll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "worfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "worfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wrick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wrigg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wucher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wucht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wucht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wummer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wummer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wunder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wunder")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "wunder")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wunder")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "wunder")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wunder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wundernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wundlieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wundlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wurm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wurm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wurst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wurstel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wurzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wusel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "wähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wähl")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "wähl")) :v '( (:np . :nom) (:pp :dat "zwischen") ) )
(insert-subcat-entry (car (morphix-read "wähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wähn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wähn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "wähn")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wähn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wäll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wäll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wälz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wälz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wärm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wärm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wärm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wässer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "wässer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wässer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "wässer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wässer")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "wässer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wölb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wölf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wölf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wöll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "wühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wühl")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "wühl")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "wühl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "würdig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "würdig")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "würfel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "würfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "würfel")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "würfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "würg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "würg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "würg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "würz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "wüt")) :v '( (:np . :nom) (:pp :akk "gegen") ) )
(insert-subcat-entry (car (morphix-read "wüt")) :v '( (:np . :nom) (:pp :akk "wider") ) )
(insert-subcat-entry (car (morphix-read "wüt")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "wüt")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "wüt")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "wüt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zacker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zacker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zahl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zahn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zain")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zank")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "zank")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zank")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zapf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zaponier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zaponier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zappel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zappel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zaser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zaser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zauber")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "zauber")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zauber")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "zauber")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zaus")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zedier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zehr")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zehr")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) (:predicative :ap :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zeichn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zeidel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeidel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zeih")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeih")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeitig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeitig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zelebrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zelt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zementier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zensier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zensurier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zenter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zenter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zentralisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zentrier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zentrifugier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerbomb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerbrech")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zerbrech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerbrech")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zerbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerbröckel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerbröckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerfall")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zerfall")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zerfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerfaser")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerfaser")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerfetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerfledder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerfledder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerfleisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerfleisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerfließ")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zerfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerfress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerfress")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zergeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerglieder")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zerglieder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerglieder")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zerglieder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerhack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerkau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerkleiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerklopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerklopf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerknack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerknack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerknall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerknall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerknautsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerknitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerknüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerkoch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerkoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerkratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerkratz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerkrümel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerlöcher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zermalm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zermarter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zermarter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zermürb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zernag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zernicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zernicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zernier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zernier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerpflück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerplatz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerquetsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerquetsch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerrauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerrauf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerreiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerreiß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerrinn")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zerrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerrupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerrütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschell")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zerschell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschleiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschleiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerschmetter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschmetter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschneid")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zerschneid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschneid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zerschneid")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschramm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerschramm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zersetz")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zersetz")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zersetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zersing")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerspalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerspan")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerspell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerspell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zersplitter")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zersplitter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zersplitter")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zersplitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerspreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerstampf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstech")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstieb")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "zerstieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerstoß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstrahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstreu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerstäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstör")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerstör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerstückel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zersäg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zertepper")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zertier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zertier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zertrampel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zertrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zertrenn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zertret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zertrümmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerwerf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zerwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerwühl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerwühl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerzaus")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerzaus")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerzaus")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zerzupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zerzupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zessier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zett")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '( (:pp :dat "von") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "dass") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "dass") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "dass") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "dass") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "ob") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "ob") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "ob") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "ob") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "wh") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "wh") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "wh") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "wh") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "zu") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "zu") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "zu") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zeug")) :v '((:subclause . "zu") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zieh")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ziel")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "ziel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zier")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zimentier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zimentier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zimmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zimmer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zins")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zipfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zirkel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zirkulier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zirkumflektier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zirkumvenier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zirkumvenier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zirp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zirp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zisch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zisch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zischel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zischel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ziselier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zitier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zitter")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zitter")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "zitter")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zitter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zivilisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zivilisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zockel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zoll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zoll")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zot")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zottel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuballer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuballer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zubau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zubekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubereit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubillig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubillig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubillig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zubillig")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zubillig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zubillig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zubind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zublinzel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zubring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zubring")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zubring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubutter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubutter")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zubutter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuckel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zucker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zudeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zudeck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zudien")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zudiktier")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zudreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zudreh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zudrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zudrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zueign")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zueign")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuerkenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuerkenn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuerteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuerteil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zufahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zufahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zufall")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zufall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zufass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuflieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zufließ")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zufließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuflüster")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zufriedengeb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zufriedenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zufriedenstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zufrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zufächel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zufüg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuführ")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zugeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zugeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zugedenk")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zugeh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zugeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zugehör")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zugieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zugreif")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zugreif")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "zugreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zugrundeleg")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zugrundelieg")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zugrundelieg")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zugrundelieg")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zugrundelieg")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zugrundelieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zugrundelieg")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zuguck")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuguck")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "zuguck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuhak")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuhak")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuhalt")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuhau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuheft")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuheil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zujauchz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zujubel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zukehr")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zukleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zukleister")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuklink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuklink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuknall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuknall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuknöpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuknöpf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zukomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zukomm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zukomm")) :v '( (:pp :akk "auf") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zukork")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zulang")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "zulang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zulass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zulass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zulass")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zulauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zulauf")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zulauf")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zulauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "zuleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuleit")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zulern")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zulern")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zull")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zull")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zulp")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zulp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zulächel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zulöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zumauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumess")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumisch")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zumut")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zunagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zunehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zunehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuneig")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zunick")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zunäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuordn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zupack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zupack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zupass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zupass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zupf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zupf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zupf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zupfropf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zupress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuprost")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zurat")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zurat")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuraun")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtbieg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurechtkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zurechtkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurechtleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtmach")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zurechtmach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtmach")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zurechtmach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurechtrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtschuster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtsetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurechtzimmer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zured")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zureich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zureit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zureit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuricht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuriegel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurück")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurück")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückbegeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückbegleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückbekomm")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zurückbekomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückbeug")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückbeug")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückbild")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückbleib")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zurückbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückblick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückdatier")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückdatier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückdatier")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückdatier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückdenk")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "zurückdenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückdräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückdräng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückdrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückdrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückdürf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückeil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückerbitt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückerhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückerinner")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "zurückerinner")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückerlang")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zurückerlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückerlang")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zurückerlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückerober")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückerstatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückerstatt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückfall")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückfall")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zurückfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückfind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückflieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückflut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückflut")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückforder")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zurückforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückführ")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückführ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zurückführ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zurückführ")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zurückführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückgeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "zurückgeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückgeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückgeb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zurückgeb")) :v '( (:np . :nom) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "zurückgeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückgewinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückgewinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückgreif")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückgreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückhalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückhalt")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zurückhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückjag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückjag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückkauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückkauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückkehr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückkipp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückkipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückkomm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückkämm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückkämm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücklass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücklauf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücklauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückleg")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "zurückleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücklehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücklehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückleit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücklenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücklenk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückliefer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücklieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücklieg")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zurücklieg")) :v '((:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zurücklieg")) :v '((:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zurückmeld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückmeld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücknehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückreis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückreis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückruf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschaff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschaff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschauder")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zurückschauder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückscheuch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückscheuch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschlag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschnell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zurückschreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschreib")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zurückschreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücksehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücksehn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücksehn")) :v '( (:np . :nom) (:pp :dat "nach") ) )
(insert-subcat-entry (car (morphix-read "zurücksehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücksend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücksetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücksetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücksink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücksinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückspiel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücksteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücksteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurücksteck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zurücksteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücksteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückstrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückstrahl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückstreich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückstreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückstreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücktret")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "zurücktret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurücktu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückverfolg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückverlang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückverlang")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückverleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückverleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückversetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückversetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückweich")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zurückweich")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückweis")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zurückwerf")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "zurückwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückwünsch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückwünsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurückzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückzahl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurückzuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zurüst")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zurüst")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zurüst")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zurüst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenarbeit")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenback")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenball")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenball")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbeiß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zusammenbeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbettel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbettel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenbieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenbind")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenbind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenbind")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenborg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenborg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenbrau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenbrau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenbrech")) :v '( (:np . :nom) (:pp :dat "unter") ) )
(insert-subcat-entry (car (morphix-read "zusammenbrech")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zusammenbrech")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenbring")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammendruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammendruck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammendräng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammendrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenfall")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenfall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenfalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenfass")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenfass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenfass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfeg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfeg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenfind")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenfind")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenflecht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenflecht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenflecht")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenflecht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenflick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenflick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenfüg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenfüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenfüg")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenfüg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenführ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenführ")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenführ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammengeb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammengeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammengeb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammengeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammengeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammengeh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammengehör")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammengieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammengieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammengieß")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammengieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenhalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenhalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenhau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenheil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenklammer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenklammer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenklapp")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenklapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenklapp")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenklapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenkleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenkling")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenkneif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenknüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenknüpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenknüpf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenkoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenkoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenkratz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenkuppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenkuppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenlass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenlass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenlauf")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "zusammenlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenleb")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenleg")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenleg")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenleg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenleim")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenleim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenleim")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenleim")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenläpper")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenlöt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenlöt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenlüg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammennagel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammennagel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammennagel")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammennagel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammennehm")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "zusammennehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammennäh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammennäh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenpack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenpack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenpferch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenprall")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenprall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenpress")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenraff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenraff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenrechn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenreim")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenreim")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zusammenreim")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zusammenreim")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zusammenreim")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zusammenreiß")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "zusammenreiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenringel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenruf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenruf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenrück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "zusammenrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenrück")) :v '( (:np . :nom) (:pp :dat "auf") ) )
(insert-subcat-entry (car (morphix-read "zusammenrück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenscharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenscharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschicht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschicht")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschieb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschieb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschlag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "ueber") ) )
(insert-subcat-entry (car (morphix-read "zusammenschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschlag")) :v '( (:np . :nom) (:pp :dat "ueber") ) )
(insert-subcat-entry (car (morphix-read "zusammenschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "zusammenschließ")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschließ")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenschließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschmelz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenschmelz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschmelz")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenschmelz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschraub")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschreck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zusammenschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammenschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammensetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammensetz")) :v '( (:np . :nom) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zusammensetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammensink")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammensink")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammensitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenspann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenspann")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenspar")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenspar")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammensperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammensperr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenstauch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammensteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zusammensteck")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammensteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammensteck")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammensteck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammensteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenstell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "zusammenstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenstoppel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenstoppel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenstoß")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenstoß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenstück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenstück")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammentrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammentrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammentreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammentreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammentret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammentret")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammentret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammentrockn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammentrommel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zusammentrommel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammentu")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammentu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammentu")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zusammentu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenwickel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenwickel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenwirk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenwürfel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenwürfel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "zusammenzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenzuck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusammenzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschalt")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuschalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuschalt")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschalt")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuschalt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschanz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuscharr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuscharr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschau")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuschau")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschaufel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschließ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschmeiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschmeiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschmier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschmier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschnall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschnall")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschnür")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschraub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zuschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zuschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschreit")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuschreit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschuster")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschuster")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschweiß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschweiß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuschütt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuschütt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuseh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zuseh")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zuseh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusetz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusetz")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zusetz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusicher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusperr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuspiel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuspitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuspitz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusprech")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zusprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zusprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zusprech")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zusprech")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuspring")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuspring")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuspund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuspund")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zustandekomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zusteck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusteck")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusteh")) :v '( (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zusteh")) :v '( (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zusteh")) :v '( (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zusteh")) :v '( (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zusteh")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zustell")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zustell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusteuer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zusteuer")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zusteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "direct-speech")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:subclause . "verb-second")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zustimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zustopf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustopf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustreb")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zustreb")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuström")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuström")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zustutz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustutz")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustöpsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustöpsel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zustürm")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zustürz")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuteil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuteil")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zutrab")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zutrab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zutrab")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zutrab")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zutrag")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zutrag")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zutrag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zutrag")) :v '((:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zutrau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zutrau")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zutreff")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zutrink")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zutsch")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zutsch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuvorkomm")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuvorkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuvortu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuvortu")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuwachs")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuwachs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuwander")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuwank")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuwart")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuwart")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuweh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuweh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuweh")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zuweh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuwend")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuwend")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuwiderhandel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuwiderlauf")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuwink")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuzahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuzahl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuzieh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zuzwinker")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zuzähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zuzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zuzähl")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwack")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwack")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwack")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zwack")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwatscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwatscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwatzel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zweck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zweck")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zweifel")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "zweifel")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zweifel")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zweifel")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zweifel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zweig")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zweig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zweig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zweig")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zweig")) :v '( (:np . :nom) (:pp :akk "fuer") ) )
(insert-subcat-entry (car (morphix-read "zweig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwick")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zwick")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwiebel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwiesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "zwing")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zwinker")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zwinker")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwirbel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwirn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwischenspeicher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwischenspeicher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zwitscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwitscher")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zwitscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "mit") ) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:np . :akk) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) (:predicative :ap :akk)) )
(insert-subcat-entry (car (morphix-read "zähl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zähm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zähm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zähn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zähnel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zähnel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zärtel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zäum")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zäun")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zöger")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "zöger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zücht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "züchtig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "züchtig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zünd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "zünd")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zündel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "züngel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "zürn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "zürn")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "zürn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ächt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ächz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "äff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ähnel")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "ältel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ältel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "änder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "änder")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "änder")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "änder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ängst")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ängst")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ängst")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "ängst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "ängstig")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äquilibrier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ärger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ärger")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "ärger")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äs")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äscher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "äscher")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äst")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ästhetisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ästhetisier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "ästimier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ätherisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "ätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äugel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "äugel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "äußer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "öd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "öffn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "öffn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "öffn")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "öffn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "öl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "öl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "öl")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "öl")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "üb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "üb")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "üb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "üb")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "üb")) :v '( (:np . :nom) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "üb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übelnehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übelnehm")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übelnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übelnehm")) :v '( (:np . :nom) (:np . :dat) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übelnehm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übelnehm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übelwoll")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "übelwoll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überanstreng")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überanstreng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überarbeit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überarbeit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überback")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbau")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überbau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbehalt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbelast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbelast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überbeleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbewert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbewert")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überbiet")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbiet")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überblas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überblas")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überblatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überblend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überblick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbring")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbrück")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überbrück")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überbürd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdauer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdeck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdehn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdehn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdehn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überdenk")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdosier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdosier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überdreh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überdreh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überdruck")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übereign")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übereign")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übereil")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übereil")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übereinanderschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übereinanderschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:pp :akk "ueber") ) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:pp :dat "mit") (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "übereinkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übereinstimm")) :v '( (:np . :nom) (:pp :dat "in") (pp dat "mit") ) )
(insert-subcat-entry (car (morphix-read "übereinstimm")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "übereinstimm")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "übereinstimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übererfüll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überess")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überess")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überfahr")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfahr")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überfang")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfass")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überfass")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überfass")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überfass")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überfeiner")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überflieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfließ")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "überfließ")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "überfließ")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überflut")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überflügel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "überflügel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "überflügel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überforder")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überforder")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überfracht")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überfracht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfremd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfress")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überführ")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überführ")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überfütter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übergeb")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "übergeb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übergeb")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übergeb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übergeh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übergeh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übergeh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übergeh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übergieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überglas")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übergold")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übergreif")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "übergreif")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überhab")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhandnehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überhast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhast")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "überhast")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überheb")) :v '( (:np . :nom) (:np . :gen) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überheb")) :v '( (:np . :nom) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "überheb")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "überheb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überheiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhol")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhol")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überhäng")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhäng")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überhäuf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überhäuf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhöh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überhöh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überhöh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überhör")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überkipp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überkleb")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überkleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überkleid")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überkoch")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überkomm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überkomm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überkompensier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überkrieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überkrieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überkrust")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlad")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlager")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlapp")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlass")) :v '( (:np . :nom) (:np . :dat) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überlass")) :v '( (:np . :nom) (:np . :dat) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "überlass")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "überlast")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überlast")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlauf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überleb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überleb")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überleg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überleg")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überleit")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "überleit")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überles")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überliefer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überliefer")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überlist")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überlist")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übermach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übermach")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übermal")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übermann")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übermittel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "übermittel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übermittel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :akk "an") ) )
(insert-subcat-entry (car (morphix-read "übermittel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übermüd")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übernehm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übernehm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überordn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überordn")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überorganisier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überpflanz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überpinsel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überprüf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überprüf")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überprüf")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überprüf")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überprüf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überquell")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "überquell")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "überquell")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überquer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überrag")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "überrag")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "überrag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überrasch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überrechn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überred")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "überred")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überreich")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überreiz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überreiz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überrenn")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überrenn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überriesel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überriesel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überrinn")) :v '( (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überrinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überrinn")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überroll")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überroll")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überroll")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überroll")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überrumpel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überrumpel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überrund")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschall")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überschall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschatt")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschatt")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschau")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschick")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überschick")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überschick")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschieß")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschieß")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschlaf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschlag")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschlag")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschnapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschneid")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überschneid")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschrei")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschrei")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschreib")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschreit")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "um") ) )
(insert-subcat-entry (car (morphix-read "überschreit")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschuld")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschuld")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschwapp")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschwimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschwimm")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überschätz")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überschätz")) :v '( (:np . :nom) (:np . :akk) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überschätz")) :v '( (:np . :nom) (:np . :akk) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überschätz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überschätz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überseh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überseh")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überseh")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überseh")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übersend")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersend")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "aus") ) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :akk "in") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :dat "aus") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:pp :dat "von") (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "übersetz")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "übersiedel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "überspiel")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überspiel")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überspiel")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überspinn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überspitz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überspring")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überspring")) :v '( (:np . :nom) (:pp :akk "auf") ) )
(insert-subcat-entry (car (morphix-read "überspring")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übersprudel")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "übersprudel")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "übersprudel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überspül")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überspül")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersteh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersteh")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übersteig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersteiger")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstell")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstell")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersteuer")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überstimm")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstrahl")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "überstrahl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstreich")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überstreich")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstreif")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstreif")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstreu")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überstreu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überström")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "überström")) :v '( (:np . :nom) (:pp :dat "vor") ) )
(insert-subcat-entry (car (morphix-read "überström")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überstürz")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überstürz")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übersä")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "übersä")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersättig")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übersäuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überteuer")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertrainier")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertrainier")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übertreff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "übertreff")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "übertreff")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "übertreib")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "übertreib")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertreib")) :v '( (:np . :nom) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "übertreib")) :v '( (:np . :nom) (:pp :dat "in") ) )
(insert-subcat-entry (car (morphix-read "übertreib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übertret")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "übertret")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertret")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "übertret")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übertrumpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "an") ) )
(insert-subcat-entry (car (morphix-read "übertrumpf")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "bei") ) )
(insert-subcat-entry (car (morphix-read "übertrumpf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertu")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertu")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übertäub")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertön")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übertünch")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "übertünch")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übervölker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwach")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwach")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überwall")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwechsel")) :v '( (:np . :nom) (:pp :akk "in") ) )
(insert-subcat-entry (car (morphix-read "überwechsel")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überweis")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überweis")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwerf")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwerf")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwerf")) :v '( (:np . :nom) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überwerf")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überwert")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwieg")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwieg")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überwind")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwind")) :v '( (:np . :nom) (:pp :dat "zu") ) )
(insert-subcat-entry (car (morphix-read "überwind")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überwind")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überwind")) :v '( (:np . :nom) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "überwinter")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwinter")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überwucher")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwölb")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überwölk")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "überzeichn")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:np . :akk) (:pp :akk "durch") ) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:np . :akk) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:np . :akk) (:subclause . "zu")) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:subclause . "dass")) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:subclause . "ob")) )
(insert-subcat-entry (car (morphix-read "überzeug")) :v '( (:np . :nom) (:subclause . "wh")) )
(insert-subcat-entry (car (morphix-read "überzieh")) :v '( (:np . :nom) (:np . :akk) (:pp :dat "mit") ) )
(insert-subcat-entry (car (morphix-read "überzieh")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überzieh")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überzucker")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überzucker")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überzähl")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "überzücht")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übrigbleib")) :v '( (:np . :nom) (:np . :dat) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "übrigbleib")) :v '( (:np . :nom) (:np . :dat) ) )
(insert-subcat-entry (car (morphix-read "übrigbleib")) :v '( (:np . :nom) (:pp :dat "von") ) )
(insert-subcat-entry (car (morphix-read "übrigbleib")) :v '( (:np . :nom) ) )
(insert-subcat-entry (car (morphix-read "übriglass")) :v '( (:np . :nom) (:np . :akk) (:subclause . "inf")) )
(insert-subcat-entry (car (morphix-read "übriglass")) :v '( (:np . :nom) (:np . :akk) ) )
(insert-subcat-entry (car (morphix-read "übriglass")) :v '( (:np . :nom) (:np . :dat) (:np . :akk) ) )
